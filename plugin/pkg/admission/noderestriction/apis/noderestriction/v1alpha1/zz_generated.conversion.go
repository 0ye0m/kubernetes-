// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	noderestriction "k8s.io/kubernetes/plugin/pkg/admission/noderestriction/apis/noderestriction"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(scheme *runtime.Scheme) error {
	return scheme.AddGeneratedConversionFuncs(
		Convert_v1alpha1_Configuration_To_noderestriction_Configuration,
		Convert_noderestriction_Configuration_To_v1alpha1_Configuration,
	)
}

func autoConvert_v1alpha1_Configuration_To_noderestriction_Configuration(in *Configuration, out *noderestriction.Configuration, s conversion.Scope) error {
	return nil
}

// Convert_v1alpha1_Configuration_To_noderestriction_Configuration is an autogenerated conversion function.
func Convert_v1alpha1_Configuration_To_noderestriction_Configuration(in *Configuration, out *noderestriction.Configuration, s conversion.Scope) error {
	return autoConvert_v1alpha1_Configuration_To_noderestriction_Configuration(in, out, s)
}

func autoConvert_noderestriction_Configuration_To_v1alpha1_Configuration(in *noderestriction.Configuration, out *Configuration, s conversion.Scope) error {
	return nil
}

// Convert_noderestriction_Configuration_To_v1alpha1_Configuration is an autogenerated conversion function.
func Convert_noderestriction_Configuration_To_v1alpha1_Configuration(in *noderestriction.Configuration, out *Configuration, s conversion.Scope) error {
	return autoConvert_noderestriction_Configuration_To_v1alpha1_Configuration(in, out, s)
}
