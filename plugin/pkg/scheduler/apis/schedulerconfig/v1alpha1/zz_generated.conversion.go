// +build !ignore_autogenerated

/*
Copyright 2017 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by conversion-gen. Do not edit it manually!

package v1alpha1

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	schedulerconfig "k8s.io/kubernetes/plugin/pkg/scheduler/apis/schedulerconfig"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(scheme *runtime.Scheme) error {
	return scheme.AddGeneratedConversionFuncs(
		Convert_v1alpha1_KubeSchedulerConfiguration_To_schedulerconfig_KubeSchedulerConfiguration,
		Convert_schedulerconfig_KubeSchedulerConfiguration_To_v1alpha1_KubeSchedulerConfiguration,
	)
}

func autoConvert_v1alpha1_KubeSchedulerConfiguration_To_schedulerconfig_KubeSchedulerConfiguration(in *KubeSchedulerConfiguration, out *schedulerconfig.KubeSchedulerConfiguration, s conversion.Scope) error {
	out.Port = int32(in.Port)
	out.Address = in.Address
	out.AlgorithmProvider = in.AlgorithmProvider
	out.PolicyConfigFile = in.PolicyConfigFile
	if err := v1.Convert_Pointer_bool_To_bool(&in.EnableProfiling, &out.EnableProfiling, s); err != nil {
		return err
	}
	out.EnableContentionProfiling = in.EnableContentionProfiling
	out.ContentType = in.ContentType
	out.KubeAPIQPS = in.KubeAPIQPS
	out.KubeAPIBurst = int32(in.KubeAPIBurst)
	out.SchedulerName = in.SchedulerName
	out.HardPodAffinitySymmetricWeight = in.HardPodAffinitySymmetricWeight
	out.FailureDomains = in.FailureDomains
	// TODO: Inefficient conversion - can we improve it?
	if err := s.Convert(&in.LeaderElection, &out.LeaderElection, 0); err != nil {
		return err
	}
	out.LockObjectNamespace = in.LockObjectNamespace
	out.LockObjectName = in.LockObjectName
	out.PolicyConfigMapName = in.PolicyConfigMapName
	out.PolicyConfigMapNamespace = in.PolicyConfigMapNamespace
	out.UseLegacyPolicyConfig = in.UseLegacyPolicyConfig
	return nil
}

// Convert_v1alpha1_KubeSchedulerConfiguration_To_schedulerconfig_KubeSchedulerConfiguration is an autogenerated conversion function.
func Convert_v1alpha1_KubeSchedulerConfiguration_To_schedulerconfig_KubeSchedulerConfiguration(in *KubeSchedulerConfiguration, out *schedulerconfig.KubeSchedulerConfiguration, s conversion.Scope) error {
	return autoConvert_v1alpha1_KubeSchedulerConfiguration_To_schedulerconfig_KubeSchedulerConfiguration(in, out, s)
}

func autoConvert_schedulerconfig_KubeSchedulerConfiguration_To_v1alpha1_KubeSchedulerConfiguration(in *schedulerconfig.KubeSchedulerConfiguration, out *KubeSchedulerConfiguration, s conversion.Scope) error {
	out.Port = int(in.Port)
	out.Address = in.Address
	out.AlgorithmProvider = in.AlgorithmProvider
	out.PolicyConfigFile = in.PolicyConfigFile
	if err := v1.Convert_bool_To_Pointer_bool(&in.EnableProfiling, &out.EnableProfiling, s); err != nil {
		return err
	}
	out.EnableContentionProfiling = in.EnableContentionProfiling
	out.ContentType = in.ContentType
	out.KubeAPIQPS = in.KubeAPIQPS
	out.KubeAPIBurst = int(in.KubeAPIBurst)
	out.SchedulerName = in.SchedulerName
	out.HardPodAffinitySymmetricWeight = in.HardPodAffinitySymmetricWeight
	out.FailureDomains = in.FailureDomains
	// TODO: Inefficient conversion - can we improve it?
	if err := s.Convert(&in.LeaderElection, &out.LeaderElection, 0); err != nil {
		return err
	}
	out.LockObjectNamespace = in.LockObjectNamespace
	out.LockObjectName = in.LockObjectName
	out.PolicyConfigMapName = in.PolicyConfigMapName
	out.PolicyConfigMapNamespace = in.PolicyConfigMapNamespace
	out.UseLegacyPolicyConfig = in.UseLegacyPolicyConfig
	return nil
}

// Convert_schedulerconfig_KubeSchedulerConfiguration_To_v1alpha1_KubeSchedulerConfiguration is an autogenerated conversion function.
func Convert_schedulerconfig_KubeSchedulerConfiguration_To_v1alpha1_KubeSchedulerConfiguration(in *schedulerconfig.KubeSchedulerConfiguration, out *KubeSchedulerConfiguration, s conversion.Scope) error {
	return autoConvert_schedulerconfig_KubeSchedulerConfiguration_To_v1alpha1_KubeSchedulerConfiguration(in, out, s)
}
