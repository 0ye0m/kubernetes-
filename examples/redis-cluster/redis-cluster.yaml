apiVersion: v1
kind: Service
metadata:
  name: redis-001-node-101
spec:
  ports:
  - name: redis-client
    port: 6379
    targetPort: redis-client
  - name: redis-cluster
    port: 16379
    targetPort: redis-cluster
  selector:
    redis-node-id: redis-001-node-101
---
apiVersion: v1
kind: Service
metadata:
  name: redis-001-node-102
spec:
  ports:
  - name: redis-client
    port: 6379
    targetPort: redis-client
  - name: redis-cluster
    port: 16379
    targetPort: redis-cluster
  selector:
    redis-node-id: redis-001-node-102
---
apiVersion: v1
kind: Service
metadata:
  name: redis-001-node-201
spec:
  ports:
  - name: redis-client
    port: 6379
    targetPort: redis-client
  - name: redis-cluster
    port: 16379
    targetPort: redis-cluster
  selector:
    redis-node-id: redis-001-node-201
---
apiVersion: v1
kind: Service
metadata:
  name: redis-001-node-202
spec:
  ports:
  - name: redis-client
    port: 6379
    targetPort: redis-client
  - name: redis-cluster
    port: 16379
    targetPort: redis-cluster
  selector:
    redis-node-id: redis-001-node-202
---
apiVersion: v1
kind: Service
metadata:
  name: redis-001-node-301
spec:
  ports:
  - name: redis-client
    port: 6379
    targetPort: redis-client
  - name: redis-cluster
    port: 16379
    targetPort: redis-cluster
  selector:
    redis-node-id: redis-001-node-301
---
apiVersion: v1
kind: Service
metadata:
  name: redis-001-node-302
spec:
  ports:
  - name: redis-client
    port: 6379
    targetPort: redis-client
  - name: redis-cluster
    port: 16379
    targetPort: redis-cluster
  selector:
    redis-node-id: redis-001-node-302
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: redis-001-node-101
  labels:
    app: redis
    redis-cluster-id: redis-cluster-001
    node-id: redis-001-node-101
spec:
  replicas: 1
  selector:
    app: redis
    redis-cluster-id: redis-cluster-001
    redis-node-id: redis-001-node-101

  template:
    metadata:
      labels:
        app: redis
        redis-cluster-id: redis-cluster-001
        redis-node-id: redis-001-node-101
    spec:
      containers:

      - name: redis-001-node-101
        image: balon/docker-redis:3.0.7
        args:
          - "redis-server"
          - "--appendonly no"
          - "--cluster-enabled yes"
          - "--port 6379"
          - "--cluster-node-timeout 1000"
          - "--cluster-require-full-coverage yes"

        env:
        - name: "CLUSTER_CONFIG"
          value: |
            redis-cluster-001---------redis-node-101 ${REDIS_001_NODE_101_SERVICE_HOST}:${REDIS_001_NODE_101_SERVICE_PORT} myself,master - 0 0 0 connected 0-5460
            redis-cluster-001---------redis-node-102 ${REDIS_001_NODE_102_SERVICE_HOST}:${REDIS_001_NODE_102_SERVICE_PORT} slave - 0 0 0 connected
            redis-cluster-001---------redis-node-201 ${REDIS_001_NODE_201_SERVICE_HOST}:${REDIS_001_NODE_201_SERVICE_PORT} slave - 0 0 0 connected
            redis-cluster-001---------redis-node-202 ${REDIS_001_NODE_202_SERVICE_HOST}:${REDIS_001_NODE_202_SERVICE_PORT} slave - 0 0 0 connected
            redis-cluster-001---------redis-node-301 ${REDIS_001_NODE_301_SERVICE_HOST}:${REDIS_001_NODE_301_SERVICE_PORT} slave - 0 0 0 connected
            redis-cluster-001---------redis-node-302 ${REDIS_001_NODE_302_SERVICE_HOST}:${REDIS_001_NODE_302_SERVICE_PORT} slave - 0 0 0 connected
            vars currentEpoch 0 lastVoteEpoch 0
        - name: "REDIS_CONFIG"
          value: "save \\\\\"\\\\\"" 
        ports:
        - name: redis-client
          containerPort: 6379
          protocol: TCP
        - name: redis-cluster
          containerPort: 16379
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 30
          timeoutSeconds: 5
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: redis-001-node-102
  labels:
    app: redis
    redis-cluster-id: redis-cluster-001
    redis-node-id: redis-001-node-102
spec:
  replicas: 1
  selector:
    app: redis
    redis-cluster-id: redis-cluster-001
    redis-node-id: redis-001-node-102

  template:
    metadata:
      labels:
        app: redis
        redis-cluster-id: redis-cluster-001
        redis-node-id: redis-001-node-102
    spec:
      containers:

      - name: redis-001-node-102
        image: balon/docker-redis:3.0.7
        args:
          - "redis-server"
          - "--appendonly no"
          - "--cluster-enabled yes"
          - "--port 6379"
          - "--cluster-node-timeout 1000"
          - "--cluster-require-full-coverage yes"

        env:
        - name: "CLUSTER_CONFIG"
          value: |
            redis-cluster-001---------redis-node-101 ${REDIS_001_NODE_101_SERVICE_HOST}:${REDIS_001_NODE_101_SERVICE_PORT} slave - 0 0 0 connected
            redis-cluster-001---------redis-node-102 ${REDIS_001_NODE_102_SERVICE_HOST}:${REDIS_001_NODE_102_SERVICE_PORT} myself,master - 0 0 0 connected 0-5460
            redis-cluster-001---------redis-node-201 ${REDIS_001_NODE_201_SERVICE_HOST}:${REDIS_001_NODE_201_SERVICE_PORT} slave - 0 0 0 connected
            redis-cluster-001---------redis-node-202 ${REDIS_001_NODE_202_SERVICE_HOST}:${REDIS_001_NODE_202_SERVICE_PORT} slave - 0 0 0 connected
            redis-cluster-001---------redis-node-301 ${REDIS_001_NODE_301_SERVICE_HOST}:${REDIS_001_NODE_301_SERVICE_PORT} slave - 0 0 0 connected
            redis-cluster-001---------redis-node-302 ${REDIS_001_NODE_302_SERVICE_HOST}:${REDIS_001_NODE_302_SERVICE_PORT} slave - 0 0 0 connected
            vars currentEpoch 0 lastVoteEpoch 0
        - name: "REDIS_CONFIG"
          value: "save \\\\\"\\\\\""

        ports:
        - name: redis-client
          containerPort: 6379
          protocol: TCP
        - name: redis-cluster
          containerPort: 16379
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 30
          timeoutSeconds: 5
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: redis-001-node-201
  labels:
    app: redis
    redis-cluster-id: redis-cluster-001
    redis-node-id: redis-001-node-201
spec:
  replicas: 1
  selector:
    app: redis
    redis-cluster-id: redis-cluster-001
    redis-node-id: redis-001-node-201

  template:
    metadata:
      labels:
        app: redis
        redis-cluster-id: redis-cluster-001
        redis-node-id: redis-001-node-201
    spec:
      containers:

      - name: redis-001-node-201
        image: balon/docker-redis:3.0.7
        args:
          - "redis-server"
          - "--appendonly no"
          - "--cluster-enabled yes"
          - "--port 6379"
          - "--cluster-node-timeout 1000"
          - "--cluster-require-full-coverage yes"

        env:
        - name: "CLUSTER_CONFIG"
          value: |
            redis-cluster-001---------redis-node-101 ${REDIS_001_NODE_101_SERVICE_HOST}:${REDIS_001_NODE_101_SERVICE_PORT} slave - 0 0 0 connected
            redis-cluster-001---------redis-node-102 ${REDIS_001_NODE_102_SERVICE_HOST}:${REDIS_001_NODE_102_SERVICE_PORT} slave - 0 0 0 connected
            redis-cluster-001---------redis-node-201 ${REDIS_001_NODE_201_SERVICE_HOST}:${REDIS_001_NODE_201_SERVICE_PORT} myself,master - 0 0 0 connected 5461-10922
            redis-cluster-001---------redis-node-202 ${REDIS_001_NODE_202_SERVICE_HOST}:${REDIS_001_NODE_202_SERVICE_PORT} slave - 0 0 0 connected
            redis-cluster-001---------redis-node-301 ${REDIS_001_NODE_301_SERVICE_HOST}:${REDIS_001_NODE_301_SERVICE_PORT} slave - 0 0 0 connected
            redis-cluster-001---------redis-node-302 ${REDIS_001_NODE_302_SERVICE_HOST}:${REDIS_001_NODE_302_SERVICE_PORT} slave - 0 0 0 connected
            vars currentEpoch 0 lastVoteEpoch 0
        - name: "REDIS_CONFIG"
          value: "save \\\\\"\\\\\""

        ports:
        - name: redis-client
          containerPort: 6379
          protocol: TCP
        - name: redis-cluster
          containerPort: 16379
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 30
          timeoutSeconds: 5
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: redis-001-node-202
  labels:
    app: redis
    redis-cluster-id: redis-cluster-001
    redis-node-id: redis-001-node-202
spec:
  replicas: 1
  selector:
    app: redis
    redis-cluster-id: redis-cluster-001
    redis-node-id: redis-001-node-202

  template:
    metadata:
      labels:
        app: redis
        redis-cluster-id: redis-cluster-001
        redis-node-id: redis-001-node-202
    spec:
      containers:

      - name: redis-001-node-202
        image: balon/docker-redis:3.0.7
        args:
          - "redis-server"
          - "--appendonly no"
          - "--cluster-enabled yes"
          - "--port 6379"
          - "--cluster-node-timeout 1000"
          - "--cluster-require-full-coverage yes"

        env:
        - name: "CLUSTER_CONFIG"
          value: |
            redis-cluster-001---------redis-node-101 ${REDIS_001_NODE_101_SERVICE_HOST}:${REDIS_001_NODE_101_SERVICE_PORT} slave - 0 0 0 connected
            redis-cluster-001---------redis-node-102 ${REDIS_001_NODE_102_SERVICE_HOST}:${REDIS_001_NODE_102_SERVICE_PORT} slave - 0 0 0 connected
            redis-cluster-001---------redis-node-201 ${REDIS_001_NODE_201_SERVICE_HOST}:${REDIS_001_NODE_201_SERVICE_PORT} slave - 0 0 0 connected
            redis-cluster-001---------redis-node-202 ${REDIS_001_NODE_202_SERVICE_HOST}:${REDIS_001_NODE_202_SERVICE_PORT} myself,master - 0 0 0 connected 5461-10922
            redis-cluster-001---------redis-node-301 ${REDIS_001_NODE_301_SERVICE_HOST}:${REDIS_001_NODE_301_SERVICE_PORT} slave - 0 0 0 connected
            redis-cluster-001---------redis-node-302 ${REDIS_001_NODE_302_SERVICE_HOST}:${REDIS_001_NODE_302_SERVICE_PORT} slave - 0 0 0 connected
            vars currentEpoch 0 lastVoteEpoch 0
        - name: "REDIS_CONFIG"
          value: "save \\\\\"\\\\\""

        ports:
        - name: redis-client
          containerPort: 6379
          protocol: TCP
        - name: redis-cluster
          containerPort: 16379
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 30
          timeoutSeconds: 5
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: redis-001-node-301
  labels:
    app: redis
    redis-cluster-id: redis-cluster-001
    redis-node-id: redis-001-node-301
spec:
  replicas: 1
  selector:
    app: redis
    redis-cluster-id: redis-cluster-001
    redis-node-id: redis-001-node-301

  template:
    metadata:
      labels:
        app: redis
        redis-cluster-id: redis-cluster-001
        redis-node-id: redis-001-node-301
    spec:
      containers:

      - name: redis-001-node-301
        image: balon/docker-redis:3.0.7
        args:
          - "redis-server"
          - "--appendonly no"
          - "--cluster-enabled yes"
          - "--port 6379"
          - "--cluster-node-timeout 1000"
          - "--cluster-require-full-coverage yes"

        env:
        - name: "CLUSTER_CONFIG"
          value: |
            redis-cluster-001---------redis-node-101 ${REDIS_001_NODE_101_SERVICE_HOST}:${REDIS_001_NODE_101_SERVICE_PORT} slave - 0 0 0 connected
            redis-cluster-001---------redis-node-102 ${REDIS_001_NODE_102_SERVICE_HOST}:${REDIS_001_NODE_102_SERVICE_PORT} slave - 0 0 0 connected
            redis-cluster-001---------redis-node-201 ${REDIS_001_NODE_201_SERVICE_HOST}:${REDIS_001_NODE_201_SERVICE_PORT} slave - 0 0 0 connected
            redis-cluster-001---------redis-node-202 ${REDIS_001_NODE_202_SERVICE_HOST}:${REDIS_001_NODE_202_SERVICE_PORT} slave - 0 0 0 connected
            redis-cluster-001---------redis-node-301 ${REDIS_001_NODE_301_SERVICE_HOST}:${REDIS_001_NODE_301_SERVICE_PORT} myself,master - 0 0 0 connected 10923-16383
            redis-cluster-001---------redis-node-302 ${REDIS_001_NODE_302_SERVICE_HOST}:${REDIS_001_NODE_302_SERVICE_PORT} slave - 0 0 0 connected
            vars currentEpoch 0 lastVoteEpoch 0
        - name: "REDIS_CONFIG"
          value: "save \\\\\"\\\\\""

        ports:
        - name: redis-client
          containerPort: 6379
          protocol: TCP
        - name: redis-cluster
          containerPort: 16379
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 30
          timeoutSeconds: 5
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: redis-001-node-302
  labels:
    app: redis
    redis-cluster-id: redis-cluster-001
    redis-node-id: redis-001-node-302
spec:
  replicas: 1
  selector:
    app: redis
    redis-cluster-id: redis-cluster-001
    redis-node-id: redis-001-node-302

  template:
    metadata:
      labels:
        app: redis
        redis-cluster-id: redis-cluster-001
        redis-node-id: redis-001-node-302
    spec:
      containers:

      - name: redis-001-node-302
        image: balon/docker-redis:3.0.7
        args:
          - "redis-server"
          - "--appendonly no"
          - "--cluster-enabled yes"
          - "--port 6379"
          - "--cluster-node-timeout 1000"
          - "--cluster-require-full-coverage yes"

        env:
        - name: "CLUSTER_CONFIG"
          value: |
            redis-cluster-001---------redis-node-101 ${REDIS_001_NODE_101_SERVICE_HOST}:${REDIS_001_NODE_101_SERVICE_PORT} slave - 0 0 0 connected
            redis-cluster-001---------redis-node-102 ${REDIS_001_NODE_102_SERVICE_HOST}:${REDIS_001_NODE_102_SERVICE_PORT} slave - 0 0 0 connected
            redis-cluster-001---------redis-node-201 ${REDIS_001_NODE_201_SERVICE_HOST}:${REDIS_001_NODE_201_SERVICE_PORT} slave - 0 0 0 connected
            redis-cluster-001---------redis-node-202 ${REDIS_001_NODE_202_SERVICE_HOST}:${REDIS_001_NODE_202_SERVICE_PORT} slave - 0 0 0 connected
            redis-cluster-001---------redis-node-301 ${REDIS_001_NODE_301_SERVICE_HOST}:${REDIS_001_NODE_301_SERVICE_PORT} slave - 0 0 0 connected
            redis-cluster-001---------redis-node-302 ${REDIS_001_NODE_302_SERVICE_HOST}:${REDIS_001_NODE_302_SERVICE_PORT} myself,master - 0 0 0 connected 10923-16383
            vars currentEpoch 0 lastVoteEpoch 0
        - name: "REDIS_CONFIG"
          value: "save \\\\\"\\\\\""

        ports:
        - name: redis-client
          containerPort: 6379
          protocol: TCP
        - name: redis-cluster
          containerPort: 16379
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 30
          timeoutSeconds: 5
