package(default_visibility = ["//visibility:public"])

licenses(["notice"])

load(
    "@io_bazel_rules_go//go:def.bzl",
    "go_binary",
    "go_library",
    "go_test",
    "cgo_library",
)

go_library(
    name = "go_default_library",
    srcs = [
        "annotate.go",
        "apiversions.go",
        "apply.go",
        "attach.go",
        "autoscale.go",
        "certificates.go",
        "clusterinfo.go",
        "clusterinfo_dump.go",
        "cmd.go",
        "completion.go",
        "convert.go",
        "cp.go",
        "create.go",
        "create_configmap.go",
        "create_deployment.go",
        "create_namespace.go",
        "create_quota.go",
        "create_secret.go",
        "create_service.go",
        "create_serviceaccount.go",
        "delete.go",
        "describe.go",
        "drain.go",
        "edit.go",
        "exec.go",
        "explain.go",
        "expose.go",
        "get.go",
        "help.go",
        "label.go",
        "logs.go",
        "options.go",
        "patch.go",
        "portforward.go",
        "proxy.go",
        "replace.go",
        "rollingupdate.go",
        "run.go",
        "scale.go",
        "stop.go",
        "taint.go",
        "top.go",
        "top_node.go",
        "top_pod.go",
        "version.go",
    ],
    tags = ["automanaged"],
)

go_test(
    name = "go_default_test",
    srcs = [
        "annotate_test.go",
        "apply_test.go",
        "attach_test.go",
        "clusterinfo_dump_test.go",
        "cmd_test.go",
        "cp_test.go",
        "create_configmap_test.go",
        "create_deployment_test.go",
        "create_namespace_test.go",
        "create_quota_test.go",
        "create_secret_test.go",
        "create_service_test.go",
        "create_serviceaccount_test.go",
        "create_test.go",
        "delete_test.go",
        "describe_test.go",
        "drain_test.go",
        "exec_test.go",
        "expose_test.go",
        "get_test.go",
        "label_test.go",
        "logs_test.go",
        "patch_test.go",
        "portforward_test.go",
        "replace_test.go",
        "rollingupdate_test.go",
        "run_test.go",
        "taint_test.go",
        "top_node_test.go",
        "top_pod_test.go",
        "top_test.go",
    ],
    data = [
        "//examples:config",
        "//test/fixtures",
    ],
    library = "go_default_library",
    tags = [
        "automanaged",
        "skip",
    ],
    deps = [],
)
