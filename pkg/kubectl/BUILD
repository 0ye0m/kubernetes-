package(default_visibility = ["//visibility:public"])

licenses(["notice"])

load(
    "@io_bazel_rules_go//go:def.bzl",
    "go_binary",
    "go_library",
    "go_test",
    "cgo_library",
)

go_library(
    name = "go_default_library",
    srcs = [
        "apply.go",
        "autoscale.go",
        "bash_comp_utils.go",
        "cluster.go",
        "configmap.go",
        "custom_column_printer.go",
        "deployment.go",
        "describe.go",
        "doc.go",
        "explain.go",
        "generate.go",
        "history.go",
        "interfaces.go",
        "kubectl.go",
        "namespace.go",
        "proxy_server.go",
        "quota.go",
        "resource_filter.go",
        "resource_printer.go",
        "rollback.go",
        "rolling_updater.go",
        "rollout_status.go",
        "run.go",
        "scale.go",
        "secret.go",
        "secret_for_docker_registry.go",
        "secret_for_tls.go",
        "service.go",
        "service_basic.go",
        "serviceaccount.go",
        "sorted_resource_name_list.go",
        "sorting_printer.go",
        "stop.go",
        "version.go",
    ],
    tags = ["automanaged"],
)

go_test(
    name = "go_default_test",
    srcs = [
        "cluster_test.go",
        "configmap_test.go",
        "custom_column_printer_test.go",
        "deployment_test.go",
        "describe_test.go",
        "generate_test.go",
        "kubectl_test.go",
        "namespace_test.go",
        "proxy_server_test.go",
        "quota_test.go",
        "resource_printer_test.go",
        "rolling_updater_test.go",
        "rollout_status_test.go",
        "run_test.go",
        "scale_test.go",
        "secret_for_docker_registry_test.go",
        "secret_for_tls_test.go",
        "secret_test.go",
        "service_basic_test.go",
        "service_test.go",
        "serviceaccount_test.go",
        "sorted_resource_name_list_test.go",
        "sorting_printer_test.go",
        "stop_test.go",
    ],
    library = "go_default_library",
    tags = ["automanaged"],
    deps = [],
)
