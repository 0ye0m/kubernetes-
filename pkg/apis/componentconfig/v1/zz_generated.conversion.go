// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1

import (
	unsafe "unsafe"

	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	webhookadmission "k8s.io/apiserver/pkg/admission/plugin/webhook/config/apis/webhookadmission"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(scheme *runtime.Scheme) error {
	return scheme.AddGeneratedConversionFuncs(
		Convert_v1_AESConfiguration_To_webhookadmission_AESConfiguration,
		Convert_webhookadmission_AESConfiguration_To_v1_AESConfiguration,
		Convert_v1_EncryptionConfiguration_To_webhookadmission_EncryptionConfiguration,
		Convert_webhookadmission_EncryptionConfiguration_To_v1_EncryptionConfiguration,
		Convert_v1_IdentityConfiguration_To_webhookadmission_IdentityConfiguration,
		Convert_webhookadmission_IdentityConfiguration_To_v1_IdentityConfiguration,
		Convert_v1_KMSConfiguration_To_webhookadmission_KMSConfiguration,
		Convert_webhookadmission_KMSConfiguration_To_v1_KMSConfiguration,
		Convert_v1_Key_To_webhookadmission_Key,
		Convert_webhookadmission_Key_To_v1_Key,
		Convert_v1_ProviderConfiguration_To_webhookadmission_ProviderConfiguration,
		Convert_webhookadmission_ProviderConfiguration_To_v1_ProviderConfiguration,
		Convert_v1_ResourceConfiguration_To_webhookadmission_ResourceConfiguration,
		Convert_webhookadmission_ResourceConfiguration_To_v1_ResourceConfiguration,
		Convert_v1_SecretboxConfiguration_To_webhookadmission_SecretboxConfiguration,
		Convert_webhookadmission_SecretboxConfiguration_To_v1_SecretboxConfiguration,
	)
}

func autoConvert_v1_AESConfiguration_To_webhookadmission_AESConfiguration(in *AESConfiguration, out *webhookadmission.AESConfiguration, s conversion.Scope) error {
	out.Keys = *(*[]webhookadmission.Key)(unsafe.Pointer(&in.Keys))
	return nil
}

// Convert_v1_AESConfiguration_To_webhookadmission_AESConfiguration is an autogenerated conversion function.
func Convert_v1_AESConfiguration_To_webhookadmission_AESConfiguration(in *AESConfiguration, out *webhookadmission.AESConfiguration, s conversion.Scope) error {
	return autoConvert_v1_AESConfiguration_To_webhookadmission_AESConfiguration(in, out, s)
}

func autoConvert_webhookadmission_AESConfiguration_To_v1_AESConfiguration(in *webhookadmission.AESConfiguration, out *AESConfiguration, s conversion.Scope) error {
	out.Keys = *(*[]Key)(unsafe.Pointer(&in.Keys))
	return nil
}

// Convert_webhookadmission_AESConfiguration_To_v1_AESConfiguration is an autogenerated conversion function.
func Convert_webhookadmission_AESConfiguration_To_v1_AESConfiguration(in *webhookadmission.AESConfiguration, out *AESConfiguration, s conversion.Scope) error {
	return autoConvert_webhookadmission_AESConfiguration_To_v1_AESConfiguration(in, out, s)
}

func autoConvert_v1_EncryptionConfiguration_To_webhookadmission_EncryptionConfiguration(in *EncryptionConfiguration, out *webhookadmission.EncryptionConfiguration, s conversion.Scope) error {
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make([]webhookadmission.ResourceConfiguration, len(*in))
		for i := range *in {
			if err := Convert_v1_ResourceConfiguration_To_webhookadmission_ResourceConfiguration(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Resources = nil
	}
	return nil
}

// Convert_v1_EncryptionConfiguration_To_webhookadmission_EncryptionConfiguration is an autogenerated conversion function.
func Convert_v1_EncryptionConfiguration_To_webhookadmission_EncryptionConfiguration(in *EncryptionConfiguration, out *webhookadmission.EncryptionConfiguration, s conversion.Scope) error {
	return autoConvert_v1_EncryptionConfiguration_To_webhookadmission_EncryptionConfiguration(in, out, s)
}

func autoConvert_webhookadmission_EncryptionConfiguration_To_v1_EncryptionConfiguration(in *webhookadmission.EncryptionConfiguration, out *EncryptionConfiguration, s conversion.Scope) error {
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make([]ResourceConfiguration, len(*in))
		for i := range *in {
			if err := Convert_webhookadmission_ResourceConfiguration_To_v1_ResourceConfiguration(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Resources = nil
	}
	return nil
}

// Convert_webhookadmission_EncryptionConfiguration_To_v1_EncryptionConfiguration is an autogenerated conversion function.
func Convert_webhookadmission_EncryptionConfiguration_To_v1_EncryptionConfiguration(in *webhookadmission.EncryptionConfiguration, out *EncryptionConfiguration, s conversion.Scope) error {
	return autoConvert_webhookadmission_EncryptionConfiguration_To_v1_EncryptionConfiguration(in, out, s)
}

func autoConvert_v1_IdentityConfiguration_To_webhookadmission_IdentityConfiguration(in *IdentityConfiguration, out *webhookadmission.IdentityConfiguration, s conversion.Scope) error {
	return nil
}

// Convert_v1_IdentityConfiguration_To_webhookadmission_IdentityConfiguration is an autogenerated conversion function.
func Convert_v1_IdentityConfiguration_To_webhookadmission_IdentityConfiguration(in *IdentityConfiguration, out *webhookadmission.IdentityConfiguration, s conversion.Scope) error {
	return autoConvert_v1_IdentityConfiguration_To_webhookadmission_IdentityConfiguration(in, out, s)
}

func autoConvert_webhookadmission_IdentityConfiguration_To_v1_IdentityConfiguration(in *webhookadmission.IdentityConfiguration, out *IdentityConfiguration, s conversion.Scope) error {
	return nil
}

// Convert_webhookadmission_IdentityConfiguration_To_v1_IdentityConfiguration is an autogenerated conversion function.
func Convert_webhookadmission_IdentityConfiguration_To_v1_IdentityConfiguration(in *webhookadmission.IdentityConfiguration, out *IdentityConfiguration, s conversion.Scope) error {
	return autoConvert_webhookadmission_IdentityConfiguration_To_v1_IdentityConfiguration(in, out, s)
}

func autoConvert_v1_KMSConfiguration_To_webhookadmission_KMSConfiguration(in *KMSConfiguration, out *webhookadmission.KMSConfiguration, s conversion.Scope) error {
	out.Name = in.Name
	out.CacheSize = int(in.CacheSize)
	out.Endpoint = in.Endpoint
	return nil
}

// Convert_v1_KMSConfiguration_To_webhookadmission_KMSConfiguration is an autogenerated conversion function.
func Convert_v1_KMSConfiguration_To_webhookadmission_KMSConfiguration(in *KMSConfiguration, out *webhookadmission.KMSConfiguration, s conversion.Scope) error {
	return autoConvert_v1_KMSConfiguration_To_webhookadmission_KMSConfiguration(in, out, s)
}

func autoConvert_webhookadmission_KMSConfiguration_To_v1_KMSConfiguration(in *webhookadmission.KMSConfiguration, out *KMSConfiguration, s conversion.Scope) error {
	out.Name = in.Name
	out.CacheSize = int32(in.CacheSize)
	out.Endpoint = in.Endpoint
	return nil
}

// Convert_webhookadmission_KMSConfiguration_To_v1_KMSConfiguration is an autogenerated conversion function.
func Convert_webhookadmission_KMSConfiguration_To_v1_KMSConfiguration(in *webhookadmission.KMSConfiguration, out *KMSConfiguration, s conversion.Scope) error {
	return autoConvert_webhookadmission_KMSConfiguration_To_v1_KMSConfiguration(in, out, s)
}

func autoConvert_v1_Key_To_webhookadmission_Key(in *Key, out *webhookadmission.Key, s conversion.Scope) error {
	out.Name = in.Name
	out.Secret = in.Secret
	return nil
}

// Convert_v1_Key_To_webhookadmission_Key is an autogenerated conversion function.
func Convert_v1_Key_To_webhookadmission_Key(in *Key, out *webhookadmission.Key, s conversion.Scope) error {
	return autoConvert_v1_Key_To_webhookadmission_Key(in, out, s)
}

func autoConvert_webhookadmission_Key_To_v1_Key(in *webhookadmission.Key, out *Key, s conversion.Scope) error {
	out.Name = in.Name
	out.Secret = in.Secret
	return nil
}

// Convert_webhookadmission_Key_To_v1_Key is an autogenerated conversion function.
func Convert_webhookadmission_Key_To_v1_Key(in *webhookadmission.Key, out *Key, s conversion.Scope) error {
	return autoConvert_webhookadmission_Key_To_v1_Key(in, out, s)
}

func autoConvert_v1_ProviderConfiguration_To_webhookadmission_ProviderConfiguration(in *ProviderConfiguration, out *webhookadmission.ProviderConfiguration, s conversion.Scope) error {
	out.AESGCM = (*webhookadmission.AESConfiguration)(unsafe.Pointer(in.AESGCM))
	out.AESCBC = (*webhookadmission.AESConfiguration)(unsafe.Pointer(in.AESCBC))
	out.Secretbox = (*webhookadmission.SecretboxConfiguration)(unsafe.Pointer(in.Secretbox))
	out.Identity = (*webhookadmission.IdentityConfiguration)(unsafe.Pointer(in.Identity))
	if in.KMS != nil {
		in, out := &in.KMS, &out.KMS
		*out = new(webhookadmission.KMSConfiguration)
		if err := Convert_v1_KMSConfiguration_To_webhookadmission_KMSConfiguration(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.KMS = nil
	}
	return nil
}

// Convert_v1_ProviderConfiguration_To_webhookadmission_ProviderConfiguration is an autogenerated conversion function.
func Convert_v1_ProviderConfiguration_To_webhookadmission_ProviderConfiguration(in *ProviderConfiguration, out *webhookadmission.ProviderConfiguration, s conversion.Scope) error {
	return autoConvert_v1_ProviderConfiguration_To_webhookadmission_ProviderConfiguration(in, out, s)
}

func autoConvert_webhookadmission_ProviderConfiguration_To_v1_ProviderConfiguration(in *webhookadmission.ProviderConfiguration, out *ProviderConfiguration, s conversion.Scope) error {
	out.AESGCM = (*AESConfiguration)(unsafe.Pointer(in.AESGCM))
	out.AESCBC = (*AESConfiguration)(unsafe.Pointer(in.AESCBC))
	out.Secretbox = (*SecretboxConfiguration)(unsafe.Pointer(in.Secretbox))
	out.Identity = (*IdentityConfiguration)(unsafe.Pointer(in.Identity))
	if in.KMS != nil {
		in, out := &in.KMS, &out.KMS
		*out = new(KMSConfiguration)
		if err := Convert_webhookadmission_KMSConfiguration_To_v1_KMSConfiguration(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.KMS = nil
	}
	return nil
}

// Convert_webhookadmission_ProviderConfiguration_To_v1_ProviderConfiguration is an autogenerated conversion function.
func Convert_webhookadmission_ProviderConfiguration_To_v1_ProviderConfiguration(in *webhookadmission.ProviderConfiguration, out *ProviderConfiguration, s conversion.Scope) error {
	return autoConvert_webhookadmission_ProviderConfiguration_To_v1_ProviderConfiguration(in, out, s)
}

func autoConvert_v1_ResourceConfiguration_To_webhookadmission_ResourceConfiguration(in *ResourceConfiguration, out *webhookadmission.ResourceConfiguration, s conversion.Scope) error {
	out.Resources = *(*[]string)(unsafe.Pointer(&in.Resources))
	if in.Providers != nil {
		in, out := &in.Providers, &out.Providers
		*out = make([]webhookadmission.ProviderConfiguration, len(*in))
		for i := range *in {
			if err := Convert_v1_ProviderConfiguration_To_webhookadmission_ProviderConfiguration(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Providers = nil
	}
	return nil
}

// Convert_v1_ResourceConfiguration_To_webhookadmission_ResourceConfiguration is an autogenerated conversion function.
func Convert_v1_ResourceConfiguration_To_webhookadmission_ResourceConfiguration(in *ResourceConfiguration, out *webhookadmission.ResourceConfiguration, s conversion.Scope) error {
	return autoConvert_v1_ResourceConfiguration_To_webhookadmission_ResourceConfiguration(in, out, s)
}

func autoConvert_webhookadmission_ResourceConfiguration_To_v1_ResourceConfiguration(in *webhookadmission.ResourceConfiguration, out *ResourceConfiguration, s conversion.Scope) error {
	out.Resources = *(*[]string)(unsafe.Pointer(&in.Resources))
	if in.Providers != nil {
		in, out := &in.Providers, &out.Providers
		*out = make([]ProviderConfiguration, len(*in))
		for i := range *in {
			if err := Convert_webhookadmission_ProviderConfiguration_To_v1_ProviderConfiguration(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Providers = nil
	}
	return nil
}

// Convert_webhookadmission_ResourceConfiguration_To_v1_ResourceConfiguration is an autogenerated conversion function.
func Convert_webhookadmission_ResourceConfiguration_To_v1_ResourceConfiguration(in *webhookadmission.ResourceConfiguration, out *ResourceConfiguration, s conversion.Scope) error {
	return autoConvert_webhookadmission_ResourceConfiguration_To_v1_ResourceConfiguration(in, out, s)
}

func autoConvert_v1_SecretboxConfiguration_To_webhookadmission_SecretboxConfiguration(in *SecretboxConfiguration, out *webhookadmission.SecretboxConfiguration, s conversion.Scope) error {
	out.Keys = *(*[]webhookadmission.Key)(unsafe.Pointer(&in.Keys))
	return nil
}

// Convert_v1_SecretboxConfiguration_To_webhookadmission_SecretboxConfiguration is an autogenerated conversion function.
func Convert_v1_SecretboxConfiguration_To_webhookadmission_SecretboxConfiguration(in *SecretboxConfiguration, out *webhookadmission.SecretboxConfiguration, s conversion.Scope) error {
	return autoConvert_v1_SecretboxConfiguration_To_webhookadmission_SecretboxConfiguration(in, out, s)
}

func autoConvert_webhookadmission_SecretboxConfiguration_To_v1_SecretboxConfiguration(in *webhookadmission.SecretboxConfiguration, out *SecretboxConfiguration, s conversion.Scope) error {
	out.Keys = *(*[]Key)(unsafe.Pointer(&in.Keys))
	return nil
}

// Convert_webhookadmission_SecretboxConfiguration_To_v1_SecretboxConfiguration is an autogenerated conversion function.
func Convert_webhookadmission_SecretboxConfiguration_To_v1_SecretboxConfiguration(in *webhookadmission.SecretboxConfiguration, out *SecretboxConfiguration, s conversion.Scope) error {
	return autoConvert_webhookadmission_SecretboxConfiguration_To_v1_SecretboxConfiguration(in, out, s)
}
