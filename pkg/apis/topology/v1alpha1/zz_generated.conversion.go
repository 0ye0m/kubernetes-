// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	unsafe "unsafe"

	v1alpha1 "k8s.io/api/topology/v1alpha1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	topology "k8s.io/kubernetes/pkg/apis/topology"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*v1alpha1.PodLocator)(nil), (*topology.PodLocator)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_PodLocator_To_topology_PodLocator(a.(*v1alpha1.PodLocator), b.(*topology.PodLocator), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*topology.PodLocator)(nil), (*v1alpha1.PodLocator)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_topology_PodLocator_To_v1alpha1_PodLocator(a.(*topology.PodLocator), b.(*v1alpha1.PodLocator), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.PodLocatorList)(nil), (*topology.PodLocatorList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_PodLocatorList_To_topology_PodLocatorList(a.(*v1alpha1.PodLocatorList), b.(*topology.PodLocatorList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*topology.PodLocatorList)(nil), (*v1alpha1.PodLocatorList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_topology_PodLocatorList_To_v1alpha1_PodLocatorList(a.(*topology.PodLocatorList), b.(*v1alpha1.PodLocatorList), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_PodLocator_To_topology_PodLocator(in *v1alpha1.PodLocator, out *topology.PodLocator, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.Addresses = *(*[]string)(unsafe.Pointer(&in.Addresses))
	out.NodeName = in.NodeName
	out.NodeLabels = *(*map[string]string)(unsafe.Pointer(&in.NodeLabels))
	return nil
}

// Convert_v1alpha1_PodLocator_To_topology_PodLocator is an autogenerated conversion function.
func Convert_v1alpha1_PodLocator_To_topology_PodLocator(in *v1alpha1.PodLocator, out *topology.PodLocator, s conversion.Scope) error {
	return autoConvert_v1alpha1_PodLocator_To_topology_PodLocator(in, out, s)
}

func autoConvert_topology_PodLocator_To_v1alpha1_PodLocator(in *topology.PodLocator, out *v1alpha1.PodLocator, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.Addresses = *(*[]string)(unsafe.Pointer(&in.Addresses))
	out.NodeName = in.NodeName
	out.NodeLabels = *(*map[string]string)(unsafe.Pointer(&in.NodeLabels))
	return nil
}

// Convert_topology_PodLocator_To_v1alpha1_PodLocator is an autogenerated conversion function.
func Convert_topology_PodLocator_To_v1alpha1_PodLocator(in *topology.PodLocator, out *v1alpha1.PodLocator, s conversion.Scope) error {
	return autoConvert_topology_PodLocator_To_v1alpha1_PodLocator(in, out, s)
}

func autoConvert_v1alpha1_PodLocatorList_To_topology_PodLocatorList(in *v1alpha1.PodLocatorList, out *topology.PodLocatorList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]topology.PodLocator)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1alpha1_PodLocatorList_To_topology_PodLocatorList is an autogenerated conversion function.
func Convert_v1alpha1_PodLocatorList_To_topology_PodLocatorList(in *v1alpha1.PodLocatorList, out *topology.PodLocatorList, s conversion.Scope) error {
	return autoConvert_v1alpha1_PodLocatorList_To_topology_PodLocatorList(in, out, s)
}

func autoConvert_topology_PodLocatorList_To_v1alpha1_PodLocatorList(in *topology.PodLocatorList, out *v1alpha1.PodLocatorList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]v1alpha1.PodLocator)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_topology_PodLocatorList_To_v1alpha1_PodLocatorList is an autogenerated conversion function.
func Convert_topology_PodLocatorList_To_v1alpha1_PodLocatorList(in *topology.PodLocatorList, out *v1alpha1.PodLocatorList, s conversion.Scope) error {
	return autoConvert_topology_PodLocatorList_To_v1alpha1_PodLocatorList(in, out, s)
}
