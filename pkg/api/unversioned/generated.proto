/*
Copyright 2015 The Kubernetes Authors All rights reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/


// This file was autogenerated by the command:
// $ /Users/clayton/projects/go/src/k8s.io/kubernetes/_output/local/bin/darwin/amd64/go-to-protobuf
// Do not edit it manually!

syntax = 'proto2';

package k8s.io.kubernetes.pkg.api.unversioned;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "k8s.io/kubernetes/pkg/util/intstr/generated.proto";

// Package-wide variables from generator "generated".
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_unrecognized_all) = false;
option (gogoproto.goproto_enum_prefix_all) = false;
option (gogoproto.goproto_getters_all) = false;
option go_package = "unversioned";

// APIGroup contains the name, the supported versions, and the preferred version
// of a group.
message APIGroup {
  // name is the name of the group.
  optional string name = 1 [(gogoproto.customname) = "Name", (gogoproto.nullable) = false];

  // versions are the versions supported in this group.
  repeated GroupVersionForDiscovery versions = 2 [(gogoproto.customname) = "Versions", (gogoproto.nullable) = false];

  // preferredVersion is the version preferred by the API server, which
  // probably is the storage version.
  optional GroupVersionForDiscovery preferredVersion = 3 [(gogoproto.customname) = "PreferredVersion", (gogoproto.nullable) = false];
}

// APIGroupList is a list of APIGroup, to allow clients to discover the API at
// /apis.
message APIGroupList {
  // groups is a list of APIGroup.
  repeated APIGroup groups = 1 [(gogoproto.customname) = "Groups", (gogoproto.nullable) = false];
}

// APIResource specifies the name of a resource and whether it is namespaced.
message APIResource {
  // name is the name of the resource.
  optional string name = 1 [(gogoproto.customname) = "Name", (gogoproto.nullable) = false];

  // namespaced indicates if a resource is namespaced or not.
  optional bool namespaced = 2 [(gogoproto.customname) = "Namespaced", (gogoproto.nullable) = false];
}

// APIResourceList is a list of APIResource, it is used to expose the name of the
// resources supported in a specific group and version, and if the resource
// is namespaced.
message APIResourceList {
  // groupVersion is the group and version this APIResourceList is for.
  optional string groupVersion = 1 [(gogoproto.customname) = "GroupVersion", (gogoproto.nullable) = false];

  // resources contains the name of the resources and if they are namespaced.
  repeated APIResource resources = 2 [(gogoproto.customname) = "APIResources", (gogoproto.nullable) = false];
}

// APIVersions lists the versions that are available, to allow clients to
// discover the API at /api, which is the root path of the legacy v1 API.
// 
// +protobuf.options.(gogoproto.goproto_stringer)=false
message APIVersions {
  option (gogoproto.goproto_stringer) = false;

  // versions are the api versions that are available.
  repeated string versions = 1 [(gogoproto.customname) = "Versions"];
}

// Duration is a wrapper around time.Duration which supports correct
// marshaling to YAML and JSON. In particular, it marshals into strings, which
// can be used as map keys in json.
message Duration {
  optional int64 duration = 1 [(gogoproto.casttype) = "time.Duration", (gogoproto.customname) = "Duration", (gogoproto.nullable) = false];
}

// ExportOptions is the query options to the standard REST get call.
message ExportOptions {
  // Should this value be exported.  Export strips fields that a user can not specify.`
  optional bool export = 1 [(gogoproto.customname) = "Export", (gogoproto.nullable) = false];

  // Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'
  optional bool exact = 2 [(gogoproto.customname) = "Exact", (gogoproto.nullable) = false];
}

// GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying
// concepts during lookup stages without having partially valid types
// 
// +protobuf.options.(gogoproto.goproto_stringer)=false
message GroupKind {
  option (gogoproto.goproto_stringer) = false;

  optional string group = 1 [(gogoproto.customname) = "Group", (gogoproto.nullable) = false];

  optional string kind = 2 [(gogoproto.customname) = "Kind", (gogoproto.nullable) = false];
}

// GroupResource specifies a Group and a Resource, but does not force a version.  This is useful for identifying
// concepts during lookup stages without having partially valid types
// 
// +protobuf.options.(gogoproto.goproto_stringer)=false
message GroupResource {
  option (gogoproto.goproto_stringer) = false;

  optional string group = 1 [(gogoproto.customname) = "Group", (gogoproto.nullable) = false];

  optional string resource = 2 [(gogoproto.customname) = "Resource", (gogoproto.nullable) = false];
}

// GroupVersion contains the "group" and the "version", which uniquely identifies the API.
// 
// +protobuf.options.(gogoproto.goproto_stringer)=false
message GroupVersion {
  option (gogoproto.goproto_stringer) = false;

  optional string group = 1 [(gogoproto.customname) = "Group", (gogoproto.nullable) = false];

  optional string version = 2 [(gogoproto.customname) = "Version", (gogoproto.nullable) = false];
}

// GroupVersion contains the "group/version" and "version" string of a version.
// It is made a struct to keep extensiblity.
message GroupVersionForDiscovery {
  // groupVersion specifies the API group and version in the form "group/version"
  optional string groupVersion = 1 [(gogoproto.customname) = "GroupVersion", (gogoproto.nullable) = false];

  // version specifies the version in the form of "version". This is to save
  // the clients the trouble of splitting the GroupVersion.
  optional string version = 2 [(gogoproto.customname) = "Version", (gogoproto.nullable) = false];
}

// GroupVersionKind unambiguously identifies a kind.  It doesn't anonymously include GroupVersion
// to avoid automatic coersion.  It doesn't use a GroupVersion to avoid custom marshalling
// 
// +protobuf.options.(gogoproto.goproto_stringer)=false
message GroupVersionKind {
  option (gogoproto.goproto_stringer) = false;

  optional string group = 1 [(gogoproto.customname) = "Group", (gogoproto.nullable) = false];

  optional string version = 2 [(gogoproto.customname) = "Version", (gogoproto.nullable) = false];

  optional string kind = 3 [(gogoproto.customname) = "Kind", (gogoproto.nullable) = false];
}

// GroupVersionResource unambiguously identifies a resource.  It doesn't anonymously include GroupVersion
// to avoid automatic coersion.  It doesn't use a GroupVersion to avoid custom marshalling
// 
// +protobuf.options.(gogoproto.goproto_stringer)=false
message GroupVersionResource {
  option (gogoproto.goproto_stringer) = false;

  optional string group = 1 [(gogoproto.customname) = "Group", (gogoproto.nullable) = false];

  optional string version = 2 [(gogoproto.customname) = "Version", (gogoproto.nullable) = false];

  optional string resource = 3 [(gogoproto.customname) = "Resource", (gogoproto.nullable) = false];
}

// ListMeta describes metadata that synthetic resources must have, including lists and
// various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
message ListMeta {
  // SelfLink is a URL representing this object.
  // Populated by the system.
  // Read-only.
  optional string selfLink = 1 [(gogoproto.customname) = "SelfLink", (gogoproto.nullable) = false];

  // String that identifies the server's internal version of this object that
  // can be used by clients to determine when objects have changed.
  // Value must be treated as opaque by clients and passed unmodified back to the server.
  // Populated by the system.
  // Read-only.
  // More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#concurrency-control-and-consistency
  optional string resourceVersion = 2 [(gogoproto.customname) = "ResourceVersion", (gogoproto.nullable) = false];
}

// ProtoTime is a struct that is equivalent to Time, but intended for
// protobuf marshalling/unmarshalling. It is generated into a serialization
// that matches Time. Do not use in Go structs.
message ProtoTime {
  // Represents the time of an event.
  optional Timestamp timestamp = 1 [(gogoproto.customname) = "Timestamp", (gogoproto.nullable) = false];
}

// RootPaths lists the paths available at root.
// For example: "/healthz", "/apis".
message RootPaths {
  // paths are the paths available at root.
  repeated string paths = 1 [(gogoproto.customname) = "Paths"];
}

// Status is a return value for calls that don't return other objects.
message Status {
  // Standard list metadata.
  // More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds
  optional ListMeta metadata = 1 [(gogoproto.customname) = "ListMeta", (gogoproto.nullable) = false];

  // Status of the operation.
  // One of: "Success" or "Failure".
  // More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status
  optional string status = 2 [(gogoproto.customname) = "Status", (gogoproto.nullable) = false];

  // A human-readable description of the status of this operation.
  optional string message = 3 [(gogoproto.customname) = "Message", (gogoproto.nullable) = false];

  // A machine-readable description of why this operation is in the
  // "Failure" status. If this value is empty there
  // is no information available. A Reason clarifies an HTTP status
  // code but does not override it.
  optional string reason = 4 [(gogoproto.casttype) = "StatusReason", (gogoproto.customname) = "Reason", (gogoproto.nullable) = false];

  // Extended data associated with the reason.  Each reason may define its
  // own extended details. This field is optional and the data returned
  // is not guaranteed to conform to any schema except that defined by
  // the reason type.
  optional StatusDetails details = 5 [(gogoproto.customname) = "Details"];

  // Suggested HTTP return code for this status, 0 if not set.
  optional int32 code = 6 [(gogoproto.customname) = "Code", (gogoproto.nullable) = false];
}

// StatusCause provides more information about an api.Status failure, including
// cases when multiple errors are encountered.
message StatusCause {
  // A machine-readable description of the cause of the error. If this value is
  // empty there is no information available.
  optional string reason = 1 [(gogoproto.casttype) = "CauseType", (gogoproto.customname) = "Type", (gogoproto.nullable) = false];

  // A human-readable description of the cause of the error.  This field may be
  // presented as-is to a reader.
  optional string message = 2 [(gogoproto.customname) = "Message", (gogoproto.nullable) = false];

  // The field of the resource that has caused this error, as named by its JSON
  // serialization. May include dot and postfix notation for nested attributes.
  // Arrays are zero-indexed.  Fields may appear more than once in an array of
  // causes due to fields having multiple errors.
  // Optional.
  // 
  // Examples:
  //   "name" - the field "name" on the current resource
  //   "items[0].name" - the field "name" on the first array entry in "items"
  optional string field = 3 [(gogoproto.customname) = "Field", (gogoproto.nullable) = false];
}

// StatusDetails is a set of additional properties that MAY be set by the
// server to provide additional information about a response. The Reason
// field of a Status object defines what attributes will be set. Clients
// must ignore fields that do not match the defined type of each attribute,
// and should assume that any attribute may be empty, invalid, or under
// defined.
message StatusDetails {
  // The name attribute of the resource associated with the status StatusReason
  // (when there is a single name which can be described).
  optional string name = 1 [(gogoproto.customname) = "Name", (gogoproto.nullable) = false];

  // The group attribute of the resource associated with the status StatusReason.
  optional string group = 2 [(gogoproto.customname) = "Group", (gogoproto.nullable) = false];

  // The kind attribute of the resource associated with the status StatusReason.
  // On some operations may differ from the requested resource Kind.
  // More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds
  optional string kind = 3 [(gogoproto.customname) = "Kind", (gogoproto.nullable) = false];

  // The Causes array includes more details associated with the StatusReason
  // failure. Not all StatusReasons may provide detailed causes.
  repeated StatusCause causes = 4 [(gogoproto.customname) = "Causes", (gogoproto.nullable) = false];

  // If specified, the time in seconds before the operation should be retried.
  optional int32 retryAfterSeconds = 5 [(gogoproto.customname) = "RetryAfterSeconds", (gogoproto.nullable) = false];
}

// Time is a wrapper around time.Time which supports correct
// marshaling to YAML and JSON.  Wrappers are provided for many
// of the factory methods that the time package offers.
// 
// +protobuf.options.marshal=false
message Time {
  option (gogoproto.marshaler) = false;
  option (gogoproto.sizer) = false;
  option (gogoproto.unmarshaler) = false;

  optional Timestamp time = 1 [(gogoproto.customname) = "Time", (gogoproto.nullable) = false];
}

// Timestamp is a protobuf Timestamp compatible representation of time.Time
message Timestamp {
  // Represents seconds of UTC time since Unix epoch
  // 1970-01-01T00:00:00Z. Must be from from 0001-01-01T00:00:00Z to
  // 9999-12-31T23:59:59Z inclusive.
  optional int64 seconds = 1 [(gogoproto.customname) = "Seconds", (gogoproto.nullable) = false];

  // Non-negative fractions of a second at nanosecond resolution. Negative
  // second values with fractions must still have non-negative nanos values
  // that count forward in time. Must be from 0 to 999,999,999
  // inclusive.
  optional int32 nanos = 2 [(gogoproto.customname) = "Nanos", (gogoproto.nullable) = false];
}

// TypeMeta describes an individual object in an API response or request
// with strings representing the type of the object and its API schema version.
// Structures that are versioned or persisted should inline TypeMeta.
message TypeMeta {
  // Kind is a string value representing the REST resource this object represents.
  // Servers may infer this from the endpoint the client submits requests to.
  // Cannot be updated.
  // In CamelCase.
  // More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds
  optional string kind = 1 [(gogoproto.customname) = "Kind", (gogoproto.nullable) = false];

  // APIVersion defines the versioned schema of this representation of an object.
  // Servers should convert recognized schemas to the latest internal value, and
  // may reject unrecognized values.
  // More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources
  optional string apiVersion = 2 [(gogoproto.customname) = "APIVersion", (gogoproto.nullable) = false];
}

