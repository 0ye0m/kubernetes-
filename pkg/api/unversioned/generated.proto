/*
Copyright 2015 The Kubernetes Authors All rights reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by the command:
// $ go-to-protobuf
// Do not edit it manually!

syntax = 'proto2';

package k8s.io.kubernetes.pkg.api.unversioned;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "k8s.io/kubernetes/pkg/util/intstr/generated.proto";

// Package-wide variables from generator "generated".
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_unrecognized_all) = false;
option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.goproto_enum_prefix_all) = false;
option (gogoproto.goproto_getters_all) = false;
option go_package = "unversioned";

// APIGroup contains the name, the supported versions, and the preferred version
// of a group.
message APIGroup {
  required TypeMeta typeMeta = 1 [(gogoproto.nullable) = false, (gogoproto.customname) = "TypeMeta"];

  // name is the name of the group.
  required string name = 2 [(gogoproto.nullable) = false, (gogoproto.customname) = "Name"];

  // versions are the versions supported in this group.
  repeated GroupVersionForDiscovery versions = 3 [(gogoproto.nullable) = false, (gogoproto.customname) = "Versions"];

  // preferredVersion is the version preferred by the API server, which
  // probably is the storage version.
  required GroupVersionForDiscovery preferredVersion = 4 [(gogoproto.nullable) = false, (gogoproto.customname) = "PreferredVersion"];
}

// APIGroupList is a list of APIGroup, to allow clients to discover the API at
// /apis.
message APIGroupList {
  required TypeMeta typeMeta = 1 [(gogoproto.nullable) = false, (gogoproto.customname) = "TypeMeta"];

  // groups is a list of APIGroup.
  repeated APIGroup groups = 2 [(gogoproto.nullable) = false, (gogoproto.customname) = "Groups"];
}

// APIResource specifies the name of a resource and whether it is namespaced.
message APIResource {
  // name is the name of the resource.
  required string name = 1 [(gogoproto.nullable) = false, (gogoproto.customname) = "Name"];

  // namespaced indicates if a resource is namespaced or not.
  required bool namespaced = 2 [(gogoproto.nullable) = false, (gogoproto.customname) = "Namespaced"];
}

// APIResourceList is a list of APIResource, it is used to expose the name of the
// resources supported in a specific group and version, and if the resource
// is namespaced.
message APIResourceList {
  required TypeMeta typeMeta = 1 [(gogoproto.nullable) = false, (gogoproto.customname) = "TypeMeta"];

  // groupVersion is the group and version this APIResourceList is for.
  required string groupVersion = 2 [(gogoproto.nullable) = false, (gogoproto.customname) = "GroupVersion"];

  // resources contains the name of the resources and if they are namespaced.
  repeated APIResource resources = 3 [(gogoproto.nullable) = false, (gogoproto.customname) = "APIResources"];
}

// APIVersions lists the versions that are available, to allow clients to
// discover the API at /api, which is the root path of the legacy v1 API.
message APIVersions {
  required TypeMeta typeMeta = 1 [(gogoproto.nullable) = false, (gogoproto.customname) = "TypeMeta"];

  // versions are the api versions that are available.
  repeated string versions = 2 [(gogoproto.customname) = "Versions"];
}

// Duration is a wrapper around time.Duration which supports correct
// marshaling to YAML and JSON. In particular, it marshals into strings, which
// can be used as map keys in json.
message Duration {
  required int64 duration = 1 [(gogoproto.casttype) = "time.Duration", (gogoproto.nullable) = false, (gogoproto.customname) = "Duration"];
}

// GroupVersion contains the "group" and the "version", which uniquely identifies the API.
message GroupVersion {
  required string group = 1 [(gogoproto.nullable) = false, (gogoproto.customname) = "Group"];

  required string version = 2 [(gogoproto.nullable) = false, (gogoproto.customname) = "Version"];
}

// GroupVersion contains the "group/version" and "version" string of a version.
// It is made a struct to keep extensiblity.
message GroupVersionForDiscovery {
  // groupVersion specifies the API group and version in the form "group/version"
  required string groupVersion = 1 [(gogoproto.nullable) = false, (gogoproto.customname) = "GroupVersion"];

  // version specifies the version in the form of "version". This is to save
  // the clients the trouble of splitting the GroupVersion.
  required string version = 2 [(gogoproto.nullable) = false, (gogoproto.customname) = "Version"];
}

// GroupVersionKind unambiguously identifies a kind.  It doesn't anonymously include GroupVersion
// to avoid automatic coersion.  It doesn't use a GroupVersion to avoid custom marshalling
message GroupVersionKind {
  required string group = 1 [(gogoproto.nullable) = false, (gogoproto.customname) = "Group"];

  required string version = 2 [(gogoproto.nullable) = false, (gogoproto.customname) = "Version"];

  required string kind = 3 [(gogoproto.nullable) = false, (gogoproto.customname) = "Kind"];
}

// ListMeta describes metadata that synthetic resources must have, including lists and
// various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
message ListMeta {
  // SelfLink is a URL representing this object.
  // Populated by the system.
  // Read-only.
  required string selfLink = 1 [(gogoproto.nullable) = false, (gogoproto.customname) = "SelfLink"];

  // String that identifies the server's internal version of this object that
  // can be used by clients to determine when objects have changed.
  // Value must be treated as opaque by clients and passed unmodified back to the server.
  // Populated by the system.
  // Read-only.
  // More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#concurrency-control-and-consistency
  required string resourceVersion = 2 [(gogoproto.customname) = "ResourceVersion", (gogoproto.nullable) = false];
}

// Patch is provided to give a concrete name and type to the Kubernetes PATCH request body.
message Patch {
}

// ProtoTime is a struct that is equivalent to Time, but intended for
// protobuf marshalling/unmarshalling. It is generated into a serialization
// that matches Time. Do not use in Go structs.
message ProtoTime {
  // Represents the time of an event.
  required Timestamp timestamp = 1 [(gogoproto.nullable) = false, (gogoproto.customname) = "Timestamp"];
}

// RootPaths lists the paths available at root.
// For example: "/healthz", "/apis".
message RootPaths {
  // paths are the paths available at root.
  repeated string paths = 1 [(gogoproto.customname) = "Paths"];
}

// Status is a return value for calls that don't return other objects.
message Status {
  required TypeMeta typeMeta = 1 [(gogoproto.nullable) = false, (gogoproto.customname) = "TypeMeta"];

  // Standard list metadata.
  // More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds
  required ListMeta metadata = 2 [(gogoproto.nullable) = false, (gogoproto.customname) = "ListMeta"];

  // Status of the operation.
  // One of: "Success" or "Failure".
  // More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status
  required string status = 3 [(gogoproto.nullable) = false, (gogoproto.customname) = "Status"];

  // A human-readable description of the status of this operation.
  required string message = 4 [(gogoproto.nullable) = false, (gogoproto.customname) = "Message"];

  // A machine-readable description of why this operation is in the
  // "Failure" status. If this value is empty there
  // is no information available. A Reason clarifies an HTTP status
  // code but does not override it.
  required string reason = 5 [(gogoproto.casttype) = "StatusReason", (gogoproto.nullable) = false, (gogoproto.customname) = "Reason"];

  // Extended data associated with the reason.  Each reason may define its
  // own extended details. This field is optional and the data returned
  // is not guaranteed to conform to any schema except that defined by
  // the reason type.
  required StatusDetails details = 6 [(gogoproto.customname) = "Details"];

  // Suggested HTTP return code for this status, 0 if not set.
  required int32 code = 7 [(gogoproto.nullable) = false, (gogoproto.customname) = "Code"];
}

// StatusCause provides more information about an api.Status failure, including
// cases when multiple errors are encountered.
message StatusCause {
  // A machine-readable description of the cause of the error. If this value is
  // empty there is no information available.
  required string reason = 1 [(gogoproto.customname) = "Type", (gogoproto.casttype) = "CauseType", (gogoproto.nullable) = false];

  // A human-readable description of the cause of the error.  This field may be
  // presented as-is to a reader.
  required string message = 2 [(gogoproto.nullable) = false, (gogoproto.customname) = "Message"];

  // The field of the resource that has caused this error, as named by its JSON
  // serialization. May include dot and postfix notation for nested attributes.
  // Arrays are zero-indexed.  Fields may appear more than once in an array of
  // causes due to fields having multiple errors.
  // Optional.
  // 
  // Examples:
  //   "name" - the field "name" on the current resource
  //   "items[0].name" - the field "name" on the first array entry in "items"
  required string field = 3 [(gogoproto.nullable) = false, (gogoproto.customname) = "Field"];
}

// StatusDetails is a set of additional properties that MAY be set by the
// server to provide additional information about a response. The Reason
// field of a Status object defines what attributes will be set. Clients
// must ignore fields that do not match the defined type of each attribute,
// and should assume that any attribute may be empty, invalid, or under
// defined.
message StatusDetails {
  // The name attribute of the resource associated with the status StatusReason
  // (when there is a single name which can be described).
  required string name = 1 [(gogoproto.nullable) = false, (gogoproto.customname) = "Name"];

  // The kind attribute of the resource associated with the status StatusReason.
  // On some operations may differ from the requested resource Kind.
  // More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds
  required string kind = 2 [(gogoproto.nullable) = false, (gogoproto.customname) = "Kind"];

  // The Causes array includes more details associated with the StatusReason
  // failure. Not all StatusReasons may provide detailed causes.
  repeated StatusCause causes = 3 [(gogoproto.nullable) = false, (gogoproto.customname) = "Causes"];

  // If specified, the time in seconds before the operation should be retried.
  required int32 retryAfterSeconds = 4 [(gogoproto.nullable) = false, (gogoproto.customname) = "RetryAfterSeconds"];
}

// Time is a wrapper around time.Time which supports correct
// marshaling to YAML and JSON.  Wrappers are provided for many
// of the factory methods that the time package offers.
// 
// +genprotoidl.options.marshal=false
message Time {
  option (gogoproto.marshaler) = false;
  option (gogoproto.sizer) = false;
  option (gogoproto.unmarshaler) = false;

  required Timestamp time = 1 [(gogoproto.nullable) = false, (gogoproto.customname) = "Time"];
}

// Timestamp is a protobuf Timestamp compatible representation of time.Time
message Timestamp {
  // Represents seconds of UTC time since Unix epoch
  // 1970-01-01T00:00:00Z. Must be from from 0001-01-01T00:00:00Z to
  // 9999-12-31T23:59:59Z inclusive.
  required int64 seconds = 1 [(gogoproto.customname) = "Seconds", (gogoproto.nullable) = false];

  // Non-negative fractions of a second at nanosecond resolution. Negative
  // second values with fractions must still have non-negative nanos values
  // that count forward in time. Must be from 0 to 999,999,999
  // inclusive.
  required int32 nanos = 2 [(gogoproto.nullable) = false, (gogoproto.customname) = "Nanos"];
}

// TypeMeta describes an individual object in an API response or request
// with strings representing the type of the object and its API schema version.
// Structures that are versioned or persisted should inline TypeMeta.
message TypeMeta {
  // Kind is a string value representing the REST resource this object represents.
  // Servers may infer this from the endpoint the client submits requests to.
  // Cannot be updated.
  // In CamelCase.
  // More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds
  required string kind = 1 [(gogoproto.nullable) = false, (gogoproto.customname) = "Kind"];

  // APIVersion defines the versioned schema of this representation of an object.
  // Servers should convert recognized schemas to the latest internal value, and
  // may reject unrecognized values.
  // More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources
  required string apiVersion = 2 [(gogoproto.nullable) = false, (gogoproto.customname) = "APIVersion"];
}

