/*
Copyright 2017 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was automatically generated by informer-gen with arguments: --input-dirs=[k8s.io/kubernetes/pkg/api,k8s.io/kubernetes/pkg/api/v1,k8s.io/kubernetes/pkg/apis/abac,k8s.io/kubernetes/pkg/apis/abac/v0,k8s.io/kubernetes/pkg/apis/abac/v1beta1,k8s.io/kubernetes/pkg/apis/apps,k8s.io/kubernetes/pkg/apis/apps/v1beta1,k8s.io/kubernetes/pkg/apis/authentication,k8s.io/kubernetes/pkg/apis/authentication/v1beta1,k8s.io/kubernetes/pkg/apis/authorization,k8s.io/kubernetes/pkg/apis/authorization/v1beta1,k8s.io/kubernetes/pkg/apis/autoscaling,k8s.io/kubernetes/pkg/apis/autoscaling/v1,k8s.io/kubernetes/pkg/apis/batch,k8s.io/kubernetes/pkg/apis/batch/v1,k8s.io/kubernetes/pkg/apis/batch/v2alpha1,k8s.io/kubernetes/pkg/apis/certificates,k8s.io/kubernetes/pkg/apis/certificates/v1alpha1,k8s.io/kubernetes/pkg/apis/componentconfig,k8s.io/kubernetes/pkg/apis/componentconfig/v1alpha1,k8s.io/kubernetes/pkg/apis/extensions,k8s.io/kubernetes/pkg/apis/extensions/v1beta1,k8s.io/kubernetes/pkg/apis/imagepolicy,k8s.io/kubernetes/pkg/apis/imagepolicy/v1alpha1,k8s.io/kubernetes/pkg/apis/meta/v1,k8s.io/kubernetes/pkg/apis/policy,k8s.io/kubernetes/pkg/apis/policy/v1beta1,k8s.io/kubernetes/pkg/apis/rbac,k8s.io/kubernetes/pkg/apis/rbac/v1alpha1,k8s.io/kubernetes/pkg/apis/storage,k8s.io/kubernetes/pkg/apis/storage/v1beta1] --internal-clientset-package=k8s.io/kubernetes/pkg/client/clientset_generated/internalclientset --listers-package=k8s.io/kubernetes/pkg/client/listers --versioned-clientset-package=k8s.io/kubernetes/pkg/client/clientset_generated/clientset

package apis

import (
	apps "k8s.io/kubernetes/pkg/client/informers/informers_generated/apis/apps"
	autoscaling "k8s.io/kubernetes/pkg/client/informers/informers_generated/apis/autoscaling"
	batch "k8s.io/kubernetes/pkg/client/informers/informers_generated/apis/batch"
	certificates "k8s.io/kubernetes/pkg/client/informers/informers_generated/apis/certificates"
	extensions "k8s.io/kubernetes/pkg/client/informers/informers_generated/apis/extensions"
	policy "k8s.io/kubernetes/pkg/client/informers/informers_generated/apis/policy"
	rbac "k8s.io/kubernetes/pkg/client/informers/informers_generated/apis/rbac"
	storage "k8s.io/kubernetes/pkg/client/informers/informers_generated/apis/storage"
	internalinterfaces "k8s.io/kubernetes/pkg/client/informers/informers_generated/internalinterfaces"
)

// Interface provides access to each of this group's versions.
type Interface interface {
	// Apps provides access to shared informers for resources in Apps.
	Apps() apps.Interface
	// Autoscaling provides access to shared informers for resources in Autoscaling.
	Autoscaling() autoscaling.Interface
	// Batch provides access to shared informers for resources in Batch.
	Batch() batch.Interface
	// Certificates provides access to shared informers for resources in Certificates.
	Certificates() certificates.Interface
	// Extensions provides access to shared informers for resources in Extensions.
	Extensions() extensions.Interface
	// Policy provides access to shared informers for resources in Policy.
	Policy() policy.Interface
	// Rbac provides access to shared informers for resources in Rbac.
	Rbac() rbac.Interface
	// Storage provides access to shared informers for resources in Storage.
	Storage() storage.Interface
}

type group struct {
	internalinterfaces.SharedInformerFactory
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory) Interface {
	return &group{f}
}

// Apps returns a new apps.Interface.
func (g *group) Apps() apps.Interface {
	return apps.New(g.SharedInformerFactory)
}

// Autoscaling returns a new autoscaling.Interface.
func (g *group) Autoscaling() autoscaling.Interface {
	return autoscaling.New(g.SharedInformerFactory)
}

// Batch returns a new batch.Interface.
func (g *group) Batch() batch.Interface {
	return batch.New(g.SharedInformerFactory)
}

// Certificates returns a new certificates.Interface.
func (g *group) Certificates() certificates.Interface {
	return certificates.New(g.SharedInformerFactory)
}

// Extensions returns a new extensions.Interface.
func (g *group) Extensions() extensions.Interface {
	return extensions.New(g.SharedInformerFactory)
}

// Policy returns a new policy.Interface.
func (g *group) Policy() policy.Interface {
	return policy.New(g.SharedInformerFactory)
}

// Rbac returns a new rbac.Interface.
func (g *group) Rbac() rbac.Interface {
	return rbac.New(g.SharedInformerFactory)
}

// Storage returns a new storage.Interface.
func (g *group) Storage() storage.Interface {
	return storage.New(g.SharedInformerFactory)
}
