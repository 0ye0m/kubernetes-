workspace(name = "io_k8s_kubernetes")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive", "http_file")
load("//build:workspace_mirror.bzl", "mirror")

http_archive(
    name = "bazel_toolchains",
    sha256 = "3a6ffe6dd91ee975f5d5bc5c50b34f58e3881dfac59a7b7aba3323bd8f8571a8",
    strip_prefix = "bazel-toolchains-92dd8a7",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/bazel-toolchains/archive/92dd8a7.tar.gz",
        "https://github.com/bazelbuild/bazel-toolchains/archive/92dd8a7.tar.gz",
    ],
)

load("@bazel_toolchains//rules:rbe_repo.bzl", "rbe_autoconfig")

rbe_autoconfig(
    name = "rbe_default",
    base_container_digest = "sha256:677c1317f14c6fd5eba2fd8ec645bfdc5119f64b3e5e944e13c89e0525cc8ad1",
    digest = "sha256:b7c2e7a18968b9df2db43eda722c5ae592aafbf774ba2766074a9c96926743d8",
    registry = "gcr.io",
    repository = "k8s-testimages/bazel-krte",
    # tag = "latest",
)

http_archive(
    name = "bazel_skylib",
    sha256 = "eb5c57e4c12e68c0c20bc774bfbc60a568e800d025557bc4ea022c6479acc867",
    strip_prefix = "bazel-skylib-0.6.0",
    urls = mirror("https://github.com/bazelbuild/bazel-skylib/archive/0.6.0.tar.gz"),
)

load("@bazel_skylib//lib:versions.bzl", "versions")

versions.check(minimum_bazel_version = "0.23.0")

http_archive(
    name = "io_k8s_repo_infra",
    sha256 = "f6d65480241ec0fd7a0d01f432938b97d7395aeb8eefbe859bb877c9b4eafa56",
    strip_prefix = "repo-infra-9f4571ad7242bf3ec4b47365062498c2528f9a5f",
    urls = mirror("https://github.com/kubernetes/repo-infra/archive/9f4571ad7242bf3ec4b47365062498c2528f9a5f.tar.gz"),
)

http_archive(
    name = "io_bazel_rules_go",
    sha256 = "62bedd372f125fe62c16c0cc2ad9d7a2b6a1171d639933a5651a729fdce497fc",
    urls = mirror("https://github.com/bazelbuild/rules_go/releases/download/v0.20.7/rules_go-v0.20.7.tar.gz"),
)

load("@io_bazel_rules_go//go:deps.bzl", "go_download_sdk", "go_register_toolchains", "go_rules_dependencies")

go_rules_dependencies()

# The version of rules_go we're using here is no longer supported, so
# we must manually download a newer version of the go sdk.
go_download_sdk(
    name = "go_sdk",
    sdks = {
        "darwin_amd64": ("go1.14.1.darwin-amd64.tar.gz", "6632f9d53fd95632e431e8c34295349cca3f0a124e3a28b760ae5c42b32816e3"),
        "freebsd_386": ("go1.14.1.freebsd-386.tar.gz", "1c52e3b72d1802a516709f7908007987c3ec902d847708539eb1acfee810ec7a"),
        "freebsd_amd64": ("go1.14.1.freebsd-amd64.tar.gz", "7d840ba12c6aade31b0e24c59a824a35a40a48686087e6423fa526f048328246"),
        "linux_386": ("go1.14.1.linux-386.tar.gz", "92d465accdebbe2d0749b2f90c22ecb1fd2492435144923f88ce410cd56b6546"),
        "linux_amd64": ("go1.14.1.linux-amd64.tar.gz", "2f49eb17ce8b48c680cdb166ffd7389702c0dec6effa090c324804a5cac8a7f8"),
        "linux_arm64": ("go1.14.1.linux-arm64.tar.gz", "5d8f2c202f35481617e24e63cca30c6afb1ec2585006c4a6ecf16c5f4928ab3c"),
        "linux_arm": ("go1.14.1.linux-armv6l.tar.gz", "04f10e345dae0d7c6c32ffd6356b47f2d4d0e8a0cb757f4ef48ead6c5bef206f"),
        "linux_ppc64le": ("go1.14.1.linux-ppc64le.tar.gz", "6559201d452ee2782dfd684d59c05e3ecf789dc40a7ec0ad9ae2dd9f489c0fe1"),
        "linux_s390x": ("go1.14.1.linux-s390x.tar.gz", "af009bd6e7729c441fec78af427743fefbf11f919c562e01b37836d835f74226"),
        "windows_386": ("go1.14.1.windows-386.zip", "66a6dcf28298ce2c3311487af0822adfec789e07bebc3b5cc6a75be9fadaef24"),
        "windows_amd64": ("go1.14.1.windows-amd64.zip", "4bcc3bbdeba4b298120b4ea78e22b8c0fe93478b47dd7b84d70d97d2b264a0a6"),
    },
)

go_register_toolchains()

http_archive(
    name = "io_bazel_rules_docker",
    sha256 = "aed1c249d4ec8f703edddf35cbe9dfaca0b5f5ea6e4cd9e83e99f3b0d1136c3d",
    strip_prefix = "rules_docker-0.7.0",
    urls = mirror("https://github.com/bazelbuild/rules_docker/archive/v0.7.0.tar.gz"),
)

load(
    "@io_bazel_rules_docker//repositories:repositories.bzl",
    container_repositories = "repositories",
)

container_repositories()

load("@io_bazel_rules_docker//container:container.bzl", "container_pull")

container_pull(
    name = "distroless_base",
    digest = "sha256:7fa7445dfbebae4f4b7ab0e6ef99276e96075ae42584af6286ba080750d6dfe5",
    registry = "gcr.io",
    repository = "distroless/base",
    tag = "latest",  # ignored when digest provided, but kept here for documentation.
)

load("//build:workspace.bzl", "release_dependencies")

release_dependencies()

load("//build:workspace_mirror.bzl", "export_urls")

export_urls("workspace_urls")
