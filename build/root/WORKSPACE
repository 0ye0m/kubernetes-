workspace(name = "io_k8s_kubernetes")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive", "http_file")
load("//build:workspace_mirror.bzl", "mirror")

# TODO(go1.15): Uncomment and update once we've published a repo-infra release that supports go1.15
#http_archive(
#    name = "io_k8s_repo_infra",
#    strip_prefix = "repo-infra-0.0.8",
#    sha256 = "2a86a60706c1f9b2d87f25d2bc1d107d823908ec3fb895735c8aa9a4b239d10e",
#    urls = [
#        "https://github.com/kubernetes/repo-infra/archive/v0.0.8.tar.gz",
#    ],
#)

# TODO(go1.15): Drop this once we've published a repo-infra release that supports go1.15
# Testing go1.15 releases with https://github.com/kubernetes/repo-infra/pull/197
load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")

git_repository(
    name = "io_k8s_repo_infra",
    commit = "4dba9c47667e6907bb6f869dc686bdae246369c4",
    remote = "https://github.com/justaugustus/repo-infra",
    shallow_since = "1595525054 -0400",
)

load("@io_k8s_repo_infra//:load.bzl", repo_infra_repositories = "repositories")

repo_infra_repositories()

load("@io_k8s_repo_infra//:repos.bzl", repo_infra_configure = "configure", repo_infra_go_repositories = "go_repositories")

# IMPORTANT: Only one go version may be specified at a time
#            'go_version':    used to specify a published upstream go version
#            'extra_version': used to specify an alternate go version provided
#                             by kubernetes/repo-infra
repo_infra_configure(
    # TODO(go1.15): Uncomment once we've published a repo-infra release that supports go1.15
    #go_version = "1.15.0",
    # TODO(go1.15): Comment out once we've published a repo-infra release that supports go1.15
    #extra_version = "1.15.0-beta.1",
    minimum_bazel_version = "2.2.0",
)

repo_infra_go_repositories()

http_archive(
    name = "io_bazel_rules_docker",
    sha256 = "aed1c249d4ec8f703edddf35cbe9dfaca0b5f5ea6e4cd9e83e99f3b0d1136c3d",
    strip_prefix = "rules_docker-0.7.0",
    urls = mirror("https://github.com/bazelbuild/rules_docker/archive/v0.7.0.tar.gz"),
)

load(
    "@io_bazel_rules_docker//repositories:repositories.bzl",
    container_repositories = "repositories",
)

container_repositories()

load("@io_bazel_rules_docker//container:container.bzl", "container_pull")

container_pull(
    name = "distroless_base",
    digest = "sha256:7fa7445dfbebae4f4b7ab0e6ef99276e96075ae42584af6286ba080750d6dfe5",
    registry = "gcr.io",
    repository = "distroless/base",
    tag = "latest",  # ignored when digest provided, but kept here for documentation.
)

load("//build:workspace.bzl", "release_dependencies")

release_dependencies()

load("//build:workspace_mirror.bzl", "export_urls")

export_urls("workspace_urls")

load("@bazel_skylib//:workspace.bzl", "bazel_skylib_workspace")

bazel_skylib_workspace()
