# Test translations for unit tests.
# Copyright (C) 2017
# This file is distributed under the same license as the Kubernetes package.
# FIRST AUTHOR ianyrchoi@gmail.com, 2018.
#
# Hakyong DO <crazyraven@gmail.com>, 2018. #zanata
# Ian Y. Choi <ianyrchoi@gmail.com>, 2018. #zanata
# June Yi <gochist@gmail.com>, 2018. #zanata
msgid ""
msgstr ""
"Project-Id-Version: \n"
"Report-Msgid-Bugs-To: EMAIL\n"
"POT-Creation-Date: 2018-09-05 01:02+0900\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"PO-Revision-Date: 2018-09-04 04:15+0000\n"
"Last-Translator: Ian Y. Choi <ianyrchoi@gmail.com>\n"
"Language-Team: Korean\n"
"Language: ko\n"
"X-Generator: Zanata 4.6.2\n"
"Plural-Forms: nplurals=1; plural=0\n"

#: pkg/kubectl/cmd/create/create_clusterrolebinding.go:33
msgid ""
"\n"
"\t\t  # Create a ClusterRoleBinding for user1, user2, and group1 using the "
"cluster-admin ClusterRole\n"
"\t\t  kubectl create clusterrolebinding cluster-admin --clusterrole=cluster-"
"admin --user=user1 --user=user2 --group=group1"
msgstr ""
"\n"
"\t\t  # cluster-admin ClusterRole을 이용하여 user1, user2, 그리고 group1의 "
"ClusterRoleBinding을 생성합니다\n"
"\t\t  kubectl create clusterrolebinding cluster-admin --clusterrole=cluster-"
"admin --user=user1 --user=user2 --group=group1"

#: pkg/kubectl/cmd/create/create_rolebinding.go:33
msgid ""
"\n"
"\t\t  # Create a RoleBinding for user1, user2, and group1 using the admin "
"ClusterRole\n"
"\t\t  kubectl create rolebinding admin --clusterrole=admin --user=user1 --"
"user=user2 --group=group1"
msgstr ""
"\n"
"\t\t # admin ClusterRole을 이용하여 user1, user2, 그리고 group1의 ClusterRole"
"을 생성합니다\n"
"\t\t  kubectl create rolebinding admin --clusterrole=admin --user=user1 --"
"user=user2 --group=group1"

#: pkg/kubectl/cmd/create/create_configmap.go:42
msgid ""
"\n"
"\t\t  # Create a new configmap named my-config based on folder bar\n"
"\t\t  kubectl create configmap my-config --from-file=path/to/bar\n"
"\n"
"\t\t  # Create a new configmap named my-config with specified keys instead "
"of file basenames on disk\n"
"\t\t  kubectl create configmap my-config --from-file=key1=/path/to/bar/file1."
"txt --from-file=key2=/path/to/bar/file2.txt\n"
"\n"
"\t\t  # Create a new configmap named my-config with key1=config1 and "
"key2=config2\n"
"\t\t  kubectl create configmap my-config --from-literal=key1=config1 --from-"
"literal=key2=config2\n"
"\n"
"\t\t  # Create a new configmap named my-config from the key=value pairs in "
"the file\n"
"\t\t  kubectl create configmap my-config --from-file=path/to/bar\n"
"\n"
"\t\t  # Create a new configmap named my-config from an env file\n"
"\t\t  kubectl create configmap my-config --from-env-file=path/to/bar.env"
msgstr ""

#: pkg/kubectl/cmd/create/create_secret.go:155
msgid ""
"\n"
"\t\t  # If you don't already have a .dockercfg file, you can create a "
"dockercfg secret directly by using:\n"
"\t\t  kubectl create secret docker-registry my-secret --docker-"
"server=DOCKER_REGISTRY_SERVER --docker-username=DOCKER_USER --docker-"
"password=DOCKER_PASSWORD --docker-email=DOCKER_EMAIL"
msgstr ""
"\n"
"\t\t  # .dockercfg 파일이 없다면 아래 명령어를 수행하여 dockercfg의 secret을 "
"생성할 수 있습니다:\n"
"\t\t  kubectl create secret docker-registry my-secret --docker-"
"server=DOCKER_REGISTRY_SERVER --docker-username=DOCKER_USER --docker-"
"password=DOCKER_PASSWORD --docker-email=DOCKER_EMAIL"

#: pkg/kubectl/cmd/top_node.go:86
msgid ""
"\n"
"\t\t  # Show metrics for all nodes\n"
"\t\t  kubectl top node\n"
"\n"
"\t\t  # Show metrics for a given node\n"
"\t\t  kubectl top node NODE_NAME"
msgstr ""
"\n"
"\t\t  # 모든 노드의 metrics를 보여줍니다\n"
"\t\t  kubectl top node\n"
"\n"
"\t\t   # 지정한 노드의 metrics를 보여줍니다\n"
"\t\t  kubectl top node NODE_NAME"

#: pkg/kubectl/cmd/cp.go:44
msgid ""
"\n"
"\t\t# !!!Important Note!!!\n"
"\t\t# Requires that the 'tar' binary is present in your container\n"
"\t\t# image.  If 'tar' is not present, 'kubectl cp' will fail.\n"
"\n"
"\t\t# Copy /tmp/foo_dir local directory to /tmp/bar_dir in a remote pod in "
"the default namespace\n"
"\t\tkubectl cp /tmp/foo_dir <some-pod>:/tmp/bar_dir\n"
"\n"
"\t\t# Copy /tmp/foo local file to /tmp/bar in a remote pod in a specific "
"container\n"
"\t\tkubectl cp /tmp/foo <some-pod>:/tmp/bar -c <specific-container>\n"
"\n"
"\t\t# Copy /tmp/foo local file to /tmp/bar in a remote pod in namespace "
"<some-namespace>\n"
"\t\tkubectl cp /tmp/foo <some-namespace>/<some-pod>:/tmp/bar\n"
"\n"
"\t\t# Copy /tmp/foo from a remote pod to /tmp/bar locally\n"
"\t\tkubectl cp <some-namespace>/<some-pod>:/tmp/foo /tmp/bar"
msgstr ""

#: pkg/kubectl/cmd/apply.go:110
msgid ""
"\n"
"\t\t# Apply the configuration in pod.json to a pod.\n"
"\t\tkubectl apply -f ./pod.json\n"
"\n"
"\t\t# Apply the JSON passed into stdin to a pod.\n"
"\t\tcat pod.json | kubectl apply -f -\n"
"\n"
"\t\t# Note: --prune is still in Alpha\n"
"\t\t# Apply the configuration in manifest.yaml that matches label app=nginx "
"and delete all the other resources that are not in the file and match label "
"app=nginx.\n"
"\t\tkubectl apply --prune -f manifest.yaml -l app=nginx\n"
"\n"
"\t\t# Apply the configuration in manifest.yaml and delete all the other "
"configmaps that are not in the file.\n"
"\t\tkubectl apply --prune -f manifest.yaml --all --prune-whitelist=core/v1/"
"ConfigMap"
msgstr ""
"\n"
"\t\t# pod.json의 설정을 pod에 적용합니다.\n"
"\t\tkubectl apply -f ./pod.json\n"
"\n"
"\t\t# 표준 입력을 통해 JSON을 pod에 적용합니다.\n"
"\t\tcat pod.json | kubectl apply -f -\n"
"\n"
"\t\t# Note: --prune 은 아직 Alpha 단계입니다\n"
"\t\t# app=nginx 라벨에 맞으면 manifest.yaml의 설정을 적용하고 라벨에 맞지 않"
"는 다른 리소스를 모두 삭제합니다.\n"
"\t\tkubectl apply --prune -f manifest.yaml -l app=nginx\n"
"\n"
"\t\t# manufest.yaml의 설정을 적용하고 파일에 존재하지 않는 다른 configmaps는 "
"모두 삭제합니다.\n"
"\t\tkubectl apply --prune -f manifest.yaml --all --prune-whitelist=core/v1/"
"ConfigMap"

#: pkg/kubectl/cmd/autoscale.go:47
#, c-format
msgid ""
"\n"
"\t\t# Auto scale a deployment \"foo\", with the number of pods between 2 and "
"10, no target CPU utilization specified so a default autoscaling policy will "
"be used:\n"
"\t\tkubectl autoscale deployment foo --min=2 --max=10\n"
"\n"
"\t\t# Auto scale a replication controller \"foo\", with the number of pods "
"between 1 and 5, target CPU utilization at 80%:\n"
"\t\tkubectl autoscale rc foo --max=5 --cpu-percent=80"
msgstr ""
"\n"
"\t\t# deployment \"foo\" 에 대해 pod 의 개수 2 에서 10 사이로 오토스케일을 하"
"도록 설정합니다. CPU 사용률이 지정되지 않았으므로 디폴트 오토스케일 정책이 사"
"용됩니다:\n"
"\t\tkubectl autoscale deployment foo --min=2 --max=10\n"
"\n"
"\t\t# CPU 사용률이 80%가 넘으면 replication controller \"foo\" 가 오토스케일 "
"되도록 설정합니다. pod 개수는 최대 5 까지 확장됩니다:\n"
"\t\tkubectl autoscale rc foo --max=5 --cpu-percent=80"

#: pkg/kubectl/cmd/convert.go:50
msgid ""
"\n"
"\t\t# Convert 'pod.yaml' to latest version and print to stdout.\n"
"\t\tkubectl convert -f pod.yaml\n"
"\n"
"\t\t# Convert the live state of the resource specified by 'pod.yaml' to the "
"latest version\n"
"\t\t# and print to stdout in JSON format.\n"
"\t\tkubectl convert -f pod.yaml --local -o json\n"
"\n"
"\t\t# Convert all files under current directory to latest version and create "
"them all.\n"
"\t\tkubectl convert -f . | kubectl create -f -"
msgstr ""

#: pkg/kubectl/cmd/create/create_clusterrole.go:38
msgid ""
"\n"
"\t\t# Create a ClusterRole named \"pod-reader\" that allows user to perform "
"\"get\", \"watch\" and \"list\" on pods\n"
"\t\tkubectl create clusterrole pod-reader --verb=get,list,watch --"
"resource=pods\n"
"\n"
"\t\t# Create a ClusterRole named \"pod-reader\" with ResourceName specified\n"
"\t\tkubectl create clusterrole pod-reader --verb=get --resource=pods --"
"resource-name=readablepod --resource-name=anotherpod\n"
"\n"
"\t\t# Create a ClusterRole named \"foo\" with API Group specified\n"
"\t\tkubectl create clusterrole foo --verb=get,list,watch --resource=rs."
"extensions\n"
"\n"
"\t\t# Create a ClusterRole named \"foo\" with SubResource specified\n"
"\t\tkubectl create clusterrole foo --verb=get,list,watch --resource=pods,"
"pods/status\n"
"\n"
"\t\t# Create a ClusterRole name \"foo\" with NonResourceURL specified\n"
"\t\tkubectl create clusterrole \"foo\" --verb=get --non-resource-url=/logs/"
"*\n"
"\n"
"\t\t# Create a ClusterRole name \"monitoring\" with AggregationRule "
"specified\n"
"\t\tkubectl create clusterrole monitoring --aggregation-rule=\"rbac.example."
"com/aggregate-to-monitoring=true\""
msgstr ""

#: pkg/kubectl/cmd/create/create_role.go:43
msgid ""
"\n"
"\t\t# Create a Role named \"pod-reader\" that allows user to perform \"get"
"\", \"watch\" and \"list\" on pods\n"
"\t\tkubectl create role pod-reader --verb=get --verb=list --verb=watch --"
"resource=pods\n"
"\n"
"\t\t# Create a Role named \"pod-reader\" with ResourceName specified\n"
"\t\tkubectl create role pod-reader --verb=get --resource=pods --resource-"
"name=readablepod --resource-name=anotherpod\n"
"\n"
"\t\t# Create a Role named \"foo\" with API Group specified\n"
"\t\tkubectl create role foo --verb=get,list,watch --resource=rs.extensions\n"
"\n"
"\t\t# Create a Role named \"foo\" with SubResource specified\n"
"\t\tkubectl create role foo --verb=get,list,watch --resource=pods,pods/status"
msgstr ""

#: pkg/kubectl/cmd/create/create_job.go:42
msgid ""
"\n"
"\t\t# Create a job\n"
"\t\tkubectl create job my-job --image=busybox\n"
"\n"
"\t\t# Create a job with command\n"
"\t\tkubectl create job my-job --image=busybox -- date\n"
"\n"
"\t\t# Create a job from a CronJob named \"a-cronjob\"\n"
"\t\tkubectl create job test-job --from=cronjob/a-cronjob"
msgstr ""

#: pkg/kubectl/cmd/create/create_quota.go:33
msgid ""
"\n"
"\t\t# Create a new resourcequota named my-quota\n"
"\t\tkubectl create quota my-quota --hard=cpu=1,memory=1G,pods=2,services=3,"
"replicationcontrollers=2,resourcequotas=1,secrets=5,"
"persistentvolumeclaims=10\n"
"\n"
"\t\t# Create a new resourcequota named best-effort\n"
"\t\tkubectl create quota best-effort --hard=pods=100 --scopes=BestEffort"
msgstr ""
"\n"
"\t\t# my-quota 로 명명된 새로운 resourcequota 를 생성합니다\n"
"\t\tkubectl create quota my-quota --hard=cpu=1,memory=1G,pods=2,services=3,"
"replicationcontrollers=2,resourcequotas=1,secrets=5,"
"persistentvolumeclaims=10\n"
"\n"
"\t\t# best-effort 로 명명된 새로운 resourcequota 를 생성합니다\n"
"\t\tkubectl create quota best-effort --hard=pods=100 --scopes=BestEffort"

#: pkg/kubectl/cmd/create/create_pdb.go:33
#, c-format
msgid ""
"\n"
"\t\t# Create a pod disruption budget named my-pdb that will select all pods "
"with the app=rails label\n"
"\t\t# and require at least one of them being available at any point in "
"time.\n"
"\t\tkubectl create poddisruptionbudget my-pdb --selector=app=rails --min-"
"available=1\n"
"\n"
"\t\t# Create a pod disruption budget named my-pdb that will select all pods "
"with the app=nginx label\n"
"\t\t# and require at least half of the pods selected to be available at any "
"point in time.\n"
"\t\tkubectl create pdb my-pdb --selector=app=nginx --min-available=50%"
msgstr ""
"\n"
"\t\t# app-rails 라벨에 부합하는 모든 pods 를 선택하고 그와 동시에 그 중 하나"
"는 사용 가능하도록 요구하는\n"
"\t\t# my-pdb 란 이름을 가진 pod disruption budget 을 생성합니다.\n"
"\t\tkubectl create poddisruptionbudget my-pdb --selector=app=rails --min-"
"available=1\n"
"\n"
"\t\t# app=nginx 라벨에 부합하는 모든 pods 를 선택하고 그와 동시에 그 중 최소 "
"절반은 사용 가능하도록 요구하는  \n"
"\t\t# my-pdb 란 이름을 가진 pod disruption budget 을 생성합니다.\n"
"\t\tkubectl create pdb my-pdb --selector=app=nginx --min-available=50%"

#: pkg/kubectl/cmd/create/create.go:70
msgid ""
"\n"
"\t\t# Create a pod using the data in pod.json.\n"
"\t\tkubectl create -f ./pod.json\n"
"\n"
"\t\t# Create a pod based on the JSON passed into stdin.\n"
"\t\tcat pod.json | kubectl create -f -\n"
"\n"
"\t\t# Edit the data in docker-registry.yaml in JSON then create the resource "
"using the edited data.\n"
"\t\tkubectl create -f docker-registry.yaml --edit -o json"
msgstr ""

#: pkg/kubectl/cmd/create/create_priorityclass.go:33
msgid ""
"\n"
"\t\t# Create a priorityclass named high-priority\n"
"\t\tkubectl create priorityclass high-priority --value=1000 --description="
"\"high priority\"\n"
"\n"
"\t\t# Create a priorityclass named default-priority that considered as the "
"global default priority\n"
"\t\tkubectl create priorityclass default-priority --value=1000 --global-"
"default=true --description=\"default priority\""
msgstr ""

#: pkg/kubectl/cmd/expose.go:61
msgid ""
"\n"
"\t\t# Create a service for a replicated nginx, which serves on port 80 and "
"connects to the containers on port 8000.\n"
"\t\tkubectl expose rc nginx --port=80 --target-port=8000\n"
"\n"
"\t\t# Create a service for a replication controller identified by type and "
"name specified in \"nginx-controller.yaml\", which serves on port 80 and "
"connects to the containers on port 8000.\n"
"\t\tkubectl expose -f nginx-controller.yaml --port=80 --target-port=8000\n"
"\n"
"\t\t# Create a service for a pod valid-pod, which serves on port 444 with "
"the name \"frontend\"\n"
"\t\tkubectl expose pod valid-pod --port=444 --name=frontend\n"
"\n"
"\t\t# Create a second service based on the above service, exposing the "
"container port 8443 as port 443 with the name \"nginx-https\"\n"
"\t\tkubectl expose service nginx --port=443 --target-port=8443 --name=nginx-"
"https\n"
"\n"
"\t\t# Create a service for a replicated streaming application on port 4100 "
"balancing UDP traffic and named 'video-stream'.\n"
"\t\tkubectl expose rc streamer --port=4100 --protocol=udp --name=video-"
"stream\n"
"\n"
"\t\t# Create a service for a replicated nginx using replica set, which "
"serves on port 80 and connects to the containers on port 8000.\n"
"\t\tkubectl expose rs nginx --port=80 --target-port=8000\n"
"\n"
"\t\t# Create a service for an nginx deployment, which serves on port 80 and "
"connects to the containers on port 8000.\n"
"\t\tkubectl expose deployment nginx --port=80 --target-port=8000"
msgstr ""
"\n"
"\t\t# 80번 포트로 서비스를 제공하고 container에 8000번 포트로 연결하는, 복제 "
"nginx 에 대한 서비스를 생성합니다.\n"
"\t\tkubectl expose rc nginx --port=80 --target-port=8000\n"
"\n"
"\t\t# \"nginx-controller.yaml\" 에 지정된 type과 name으로 식별되는 복제 컨트"
"롤러를 위한 서비스를 생성합니다. 80번 포트로 서비스를 하며 컨테이너에 8000번 "
"포트로 연결합니다.\n"
"\t\tkubectl expose -f nginx-controller.yaml --port=80 --target-port=8000\n"
"\n"
"\t\t# valid-pod란 이름을 가진 pod을 위한 서비스를 생성합니다. 이 것은 444번 "
"포트로 서비스를 하며 \"frontend\" 라는 이름을 갖고 있습니다 \n"
"\t\tkubectl expose pod valid-pod --port=444 --name=frontend\n"
"\n"
"\t\t# 위 서비스를 기반으로 하고 컨테이너 내 8443번 포트를 443번 포트로 노출시"
"키는 두 번째 서비스를 \"nginx-https\" 란 이름으로 생성합니다\n"
"\t\tkubectl expose service nginx --port=443 --target-port=8443 --name=nginx-"
"https\n"
"\n"
"\t\t# 4100번 포트에서 UDP 트래픽을 조절하는 복제 스트리밍 응용 프로그램을 위"
"한 서비스를 'video-stream' 이란 이름으로 생성합니다.\n"
"\t\tkubectl expose rc streamer --port=4100 --protocol=udp --name=video-"
"stream\n"
"\n"
"\t\t# 80번 포트로 서비스를 하고 컨테이너에 8000번 포트로 연결하는 replica set"
"을 사용하는 복제 nginx를 위한 서비스를 생성합니다.\n"
"\t\tkubectl expose rs nginx --port=80 --target-port=8000\n"
"\n"
"\t\t# 80번 포트로 서비스를 하고 컨테이너에 8000 포트로 연결하는 ngnix "
"deployment 를 위한 서비스를 생성합니다.\n"
"\t\tkubectl expose deployment nginx --port=80 --target-port=8000"

#: pkg/kubectl/cmd/delete.go:70
msgid ""
"\n"
"\t\t# Delete a pod using the type and name specified in pod.json.\n"
"\t\tkubectl delete -f ./pod.json\n"
"\n"
"\t\t# Delete a pod based on the type and name in the JSON passed into "
"stdin.\n"
"\t\tcat pod.json | kubectl delete -f -\n"
"\n"
"\t\t# Delete pods and services with same names \"baz\" and \"foo\"\n"
"\t\tkubectl delete pod,service baz foo\n"
"\n"
"\t\t# Delete pods and services with label name=myLabel.\n"
"\t\tkubectl delete pods,services -l name=myLabel\n"
"\n"
"\t\t# Delete a pod with minimal delay\n"
"\t\tkubectl delete pod foo --now\n"
"\n"
"\t\t# Force delete a pod on a dead node\n"
"\t\tkubectl delete pod foo --grace-period=0 --force\n"
"\n"
"\t\t# Delete all pods\n"
"\t\tkubectl delete pods --all"
msgstr ""
"\n"
"\t\t# pod.json에 지정된 type과 name을 사용하는 pod를 삭제합니다.\n"
"\t\tkubectl delete -f ./pod.json\n"
"\n"
"\t\t# 표준 출력으로 들어오는 JSON의 type 및 name을 사용하는 pod를 삭제합니"
"다.\n"
"\t\tcat pod.json | kubectl delete -f -\n"
"\n"
"\t\t# \"baz\" 및 \"foo\" 이름을 지닌 pods 및 services를 삭제합니다\n"
"\t\tkubectl delete pod,service baz foo\n"
"\n"
"\t\t# name=myLabel 라벨을 갖고 있는 pods 와 services를 삭제합니다.\n"
"\t\tkubectl delete pods,services -l name=myLabel\n"
"\n"
"\t\t# 지연이 가장 작은 pod를 삭제합니다\n"
"\t\tkubectl delete pod foo --now\n"
"\n"
"\t\t# 응답이 없는 노드의 pod를 강제로 삭제합니다\n"
"\t\tkubectl delete pod foo --grace-period=0 --force\n"
"\n"
"\t\t# 모든 pods를 삭제합니다\n"
"\t\tkubectl delete pods --all"

#: pkg/kubectl/cmd/describe.go:50
msgid ""
"\n"
"\t\t# Describe a node\n"
"\t\tkubectl describe nodes kubernetes-node-emt8.c.myproject.internal\n"
"\n"
"\t\t# Describe a pod\n"
"\t\tkubectl describe pods/nginx\n"
"\n"
"\t\t# Describe a pod identified by type and name in \"pod.json\"\n"
"\t\tkubectl describe -f pod.json\n"
"\n"
"\t\t# Describe all pods\n"
"\t\tkubectl describe pods\n"
"\n"
"\t\t# Describe pods by label name=myLabel\n"
"\t\tkubectl describe po -l name=myLabel\n"
"\n"
"\t\t# Describe all pods managed by the 'frontend' replication controller (rc-"
"created pods\n"
"\t\t# get the name of the rc as a prefix in the pod the name).\n"
"\t\tkubectl describe pods frontend"
msgstr ""
"\n"
"\t\t# 노드의 세부정보를 표시합니다\n"
"\t\tkubectl describe nodes kubernetes-node-emt8.c.myproject.internal\n"
"\n"
"\t\t# pod 의 세부정보를 표시합니다\n"
"\t\tkubectl describe pods/nginx\n"
"\n"
"\t\t# \"pod.json\" 에 지정된 type 및 name 으로 식별되는 pod 에 대한 세부정보"
"를 표시합니다\n"
"\t\tkubectl describe -f pod.json\n"
"\n"
"\t\t# 모든 pods 의 세부정보를 표시합니다\n"
"\t\tkubectl describe pods\n"
"\n"
"\t\t# name=myLabel 라벨을 갖고 있는 pods 의 세부정보를 표시합니다\n"
"\t\tkubectl describe po -l name=myLabel\n"
"\n"
"\t\t# 'frontend' replication controller 가 관리하는 모든 pods 의 세부정보를 "
"표시합니다 (rc 가 만든 pods 는\n"
"\t\t# pod 의 이름에 rc 가 접두어로 붙습니다).\n"
"\t\tkubectl describe pods frontend"

#: pkg/kubectl/cmd/diff.go:58
msgid ""
"\n"
"\t\t# Diff resources included in pod.json. By default, it will diff LOCAL "
"and LIVE versions\n"
"\t\tkubectl alpha diff -f pod.json\n"
"\n"
"\t\t# When one version is specified, diff that version against LIVE\n"
"\t\tcat service.yaml | kubectl alpha diff -f - MERGED\n"
"\n"
"\t\t# Or specify both versions\n"
"\t\tkubectl alpha diff -f pod.json -f service.yaml LAST LOCAL"
msgstr ""

#: pkg/kubectl/cmd/drain.go:189
msgid ""
"\n"
"\t\t# Drain node \"foo\", even if there are pods not managed by a "
"ReplicationController, ReplicaSet, Job, DaemonSet or StatefulSet on it.\n"
"\t\t$ kubectl drain foo --force\n"
"\n"
"\t\t# As above, but abort if there are pods not managed by a "
"ReplicationController, ReplicaSet, Job, DaemonSet or StatefulSet, and use a "
"grace period of 15 minutes.\n"
"\t\t$ kubectl drain foo --grace-period=900"
msgstr ""
"\n"
"\t\t# \"foo\" 노드를 비워버립니다. 비록 해당 노드의 ReplicationController, "
"ReplicaSet, Job, DaemonSet 또는 StatefulSet 에 의해 관리 되지 않는 pods 가 있"
"더라도 비워버립니다.\n"
"\t\t$ kubectl drain foo --force\n"
"\n"
"\t\t# 위와 비슷하지만, 해당 노드의 ReplicationController, ReplicaSet, Job, "
"DaemonSet 또는 StatefulSet 에 의해 관리 되지 않는 pods 가 있으면 pods 를 종료"
"하도록 15분의 시간이 주어집니다.\n"
"\t\t$ kubectl drain foo --grace-period=900"

#: pkg/kubectl/cmd/edit.go:56
msgid ""
"\n"
"\t\t# Edit the service named 'docker-registry':\n"
"\t\tkubectl edit svc/docker-registry\n"
"\n"
"\t\t# Use an alternative editor\n"
"\t\tKUBE_EDITOR=\"nano\" kubectl edit svc/docker-registry\n"
"\n"
"\t\t# Edit the job 'myjob' in JSON using the v1 API format:\n"
"\t\tkubectl edit job.v1.batch/myjob -o json\n"
"\n"
"\t\t# Edit the deployment 'mydeployment' in YAML and save the modified "
"config in its annotation:\n"
"\t\tkubectl edit deployment/mydeployment -o yaml --save-config"
msgstr ""
"\n"
"\t\t# 'docker-registry' 란 service 를 편집합니다:\n"
"\t\tkubectl edit svc/docker-registry\n"
"\n"
"\t\t# 다른 편집기를 사용합니다\n"
"\t\tKUBE_EDITOR=\"nano\" kubectl edit svc/docker-registry\n"
"\n"
"\t\t# v1 API 형식을 이용한 JSON 으로 'myjob' 이란 job 을 편집합니다:\n"
"\t\tkubectl edit job.v1.batch/myjob -o json\n"
"\n"
"\t\t# YAML 안에 'mydeployment' 란 deployment 를 편집하고 변경된 설정을 해당 "
"annontation 에 저장합니다:\n"
"\t\tkubectl edit deployment/mydeployment -o yaml --save-config"

#: pkg/kubectl/cmd/exec.go:43
msgid ""
"\n"
"\t\t# Get output from running 'date' from pod 123456-7890, using the first "
"container by default\n"
"\t\tkubectl exec 123456-7890 date\n"
"\n"
"\t\t# Get output from running 'date' in ruby-container from pod 123456-7890\n"
"\t\tkubectl exec 123456-7890 -c ruby-container date\n"
"\n"
"\t\t# Switch to raw terminal mode, sends stdin to 'bash' in ruby-container "
"from pod 123456-7890\n"
"\t\t# and sends stdout/stderr from 'bash' back to the client\n"
"\t\tkubectl exec 123456-7890 -c ruby-container -i -t -- bash -il\n"
"\n"
"\t\t# List contents of /usr from the first container of pod 123456-7890 and "
"sort by modification time.\n"
"\t\t# If the command you want to execute in the pod has any flags in common "
"(e.g. -i),\n"
"\t\t# you must use two dashes (--) to separate your command's flags/"
"arguments.\n"
"\t\t# Also note, do not surround your command and its flags/arguments with "
"quotes\n"
"\t\t# unless that is how you would execute it normally (i.e., do ls -t /usr, "
"not \"ls -t /usr\").\n"
"\t\tkubectl exec 123456-7890 -i -t -- ls -t /usr\n"
"\t\t"
msgstr ""

#: pkg/kubectl/cmd/attach.go:43
msgid ""
"\n"
"\t\t# Get output from running pod 123456-7890, using the first container by "
"default\n"
"\t\tkubectl attach 123456-7890\n"
"\n"
"\t\t# Get output from ruby-container from pod 123456-7890\n"
"\t\tkubectl attach 123456-7890 -c ruby-container\n"
"\n"
"\t\t# Switch to raw terminal mode, sends stdin to 'bash' in ruby-container "
"from pod 123456-7890\n"
"\t\t# and sends stdout/stderr from 'bash' back to the client\n"
"\t\tkubectl attach 123456-7890 -c ruby-container -i -t\n"
"\n"
"\t\t# Get output from the first pod of a ReplicaSet named nginx\n"
"\t\tkubectl attach rs/nginx\n"
"\t\t"
msgstr ""
"\n"
"\t\t# 디폴트로 첫 번째 컨테이너를 사용하여 pod 123456-7890을 실행한 출력을 가"
"져옵니다\n"
"\t\tkubectl attach 123456-7890\n"
"\n"
"\t\t# ruby-container에서 pod 123456-7890로부터 출력을 가져옵니다\n"
"\t\tkubectl attach 123456-7890 -c ruby-container\n"
"\n"
"\t\t# raw 터미널 모드로 변경하여 ruby-container에서 pod 123456-7890 에 대한 "
"표준 입력을 'bash' 로 보내고\n"
"\t\t# 표준 출력/오류를 'bash'에서 클라이언트로 다시 보냅니다\n"
"\t\tkubectl attach 123456-7890 -c ruby-container -i -t\n"
"\n"
"\t\t# nginx 이름을 가진 ReplicaSet의 첫 번째 pod 출력을 가져옵니다\n"
"\t\tkubectl attach rs/nginx\n"
"\t\t"

#: pkg/kubectl/cmd/explain.go:46
msgid ""
"\n"
"\t\t# Get the documentation of the resource and its fields\n"
"\t\tkubectl explain pods\n"
"\n"
"\t\t# Get the documentation of a specific field of a resource\n"
"\t\tkubectl explain pods.spec.containers"
msgstr ""
"\n"
"\t\t# 리소스와 그와 관련된 항목에 대한 문서를 출력합니다\n"
"\t\tkubectl explain pods\n"
"\n"
"\t\t# 리소스의 특정 항목에 대한 문서를 출력합니다\n"
"\t\tkubectl explain pods.spec.containers"

#: pkg/kubectl/cmd/completion.go:58
msgid ""
"\n"
"\t\t# Installing bash completion on macOS using homebrew\n"
"\t\t## If running Bash 3.2 included with macOS\n"
"\t\t    brew install bash-completion\n"
"\t\t## or, if running Bash 4.1+\n"
"\t\t    brew install bash-completion@2\n"
"\t\t## If kubectl is installed via homebrew, this should start working "
"immediately.\n"
"\t\t## If you've installed via other means, you may need add the completion "
"to your completion directory\n"
"\t\t    kubectl completion bash > $(brew --prefix)/etc/bash_completion.d/"
"kubectl\n"
"\n"
"\n"
"\t\t# Installing bash completion on Linux\n"
"\t\t## If bash-completion is not installed on Linux, please install the "
"'bash-completion' package\n"
"\t\t## via your distribution's package manager.\n"
"\t\t## Load the kubectl completion code for bash into the current shell\n"
"\t\t    source <(kubectl completion bash)\n"
"\t\t## Write bash completion code to a file and source if from ."
"bash_profile\n"
"\t\t    kubectl completion bash > ~/.kube/completion.bash.inc\n"
"\t\t    printf \"\n"
"\t\t      # Kubectl shell completion\n"
"\t\t      source '$HOME/.kube/completion.bash.inc'\n"
"\t\t      \" >> $HOME/.bash_profile\n"
"\t\t    source $HOME/.bash_profile\n"
"\n"
"\t\t# Load the kubectl completion code for zsh[1] into the current shell\n"
"\t\t    source <(kubectl completion zsh)\n"
"\t\t# Set the kubectl completion code for zsh[1] to autoload on startup\n"
"\t\t    kubectl completion zsh > \"${fpath[1]}/_kubectl\""
msgstr ""

#: pkg/kubectl/cmd/get/get.go:101
msgid ""
"\n"
"\t\t# List all pods in ps output format.\n"
"\t\tkubectl get pods\n"
"\n"
"\t\t# List all pods in ps output format with more information (such as node "
"name).\n"
"\t\tkubectl get pods -o wide\n"
"\n"
"\t\t# List a single replication controller with specified NAME in ps output "
"format.\n"
"\t\tkubectl get replicationcontroller web\n"
"\n"
"\t\t# List deployments in JSON output format, in the \"v1\" version of the "
"\"apps\" API group:\n"
"\t\tkubectl get deployments.v1.apps -o json\n"
"\n"
"\t\t# List a single pod in JSON output format.\n"
"\t\tkubectl get -o json pod web-pod-13je7\n"
"\n"
"\t\t# List a pod identified by type and name specified in \"pod.yaml\" in "
"JSON output format.\n"
"\t\tkubectl get -f pod.yaml -o json\n"
"\n"
"\t\t# Return only the phase value of the specified pod.\n"
"\t\tkubectl get -o template pod/web-pod-13je7 --template={{.status.phase}}\n"
"\n"
"\t\t# List all replication controllers and services together in ps output "
"format.\n"
"\t\tkubectl get rc,services\n"
"\n"
"\t\t# List one or more resources by their type and names.\n"
"\t\tkubectl get rc/web service/frontend pods/web-pod-13je7"
msgstr ""

#: pkg/kubectl/cmd/portforward.go:69
msgid ""
"\n"
"\t\t# Listen on ports 5000 and 6000 locally, forwarding data to/from ports "
"5000 and 6000 in the pod\n"
"\t\tkubectl port-forward pod/mypod 5000 6000\n"
"\n"
"\t\t# Listen on ports 5000 and 6000 locally, forwarding data to/from ports "
"5000 and 6000 in a pod selected by the deployment\n"
"\t\tkubectl port-forward deployment/mydeployment 5000 6000\n"
"\n"
"\t\t# Listen on ports 5000 and 6000 locally, forwarding data to/from ports "
"5000 and 6000 in a pod selected by the service\n"
"\t\tkubectl port-forward service/myservice 5000 6000\n"
"\n"
"\t\t# Listen on port 8888 locally, forwarding to 5000 in the pod\n"
"\t\tkubectl port-forward pod/mypod 8888:5000\n"
"\n"
"\t\t# Listen on a random port locally, forwarding to 5000 in the pod\n"
"\t\tkubectl port-forward pod/mypod :5000"
msgstr ""

#: pkg/kubectl/cmd/drain.go:136
msgid ""
"\n"
"\t\t# Mark node \"foo\" as schedulable.\n"
"\t\t$ kubectl uncordon foo"
msgstr ""
"\n"
"\t\t#  \"foo\" 노드 상태를 schedulable로 표시합니다.\n"
"\t\t$ kubectl uncordon foo"

#: pkg/kubectl/cmd/drain.go:104
msgid ""
"\n"
"\t\t# Mark node \"foo\" as unschedulable.\n"
"\t\tkubectl cordon foo"
msgstr ""
"\n"
"\t\t# \"foo\" 노드 상태를 unschedulable로 표시합니다.\n"
"\t\tkubectl cordon foo"

#: pkg/kubectl/cmd/patch.go:80
msgid ""
"\n"
"\t\t# Partially update a node using a strategic merge patch. Specify the "
"patch as JSON.\n"
"\t\tkubectl patch node k8s-node-1 -p '{\"spec\":{\"unschedulable\":true}}'\n"
"\n"
"\t\t# Partially update a node using a strategic merge patch. Specify the "
"patch as YAML.\n"
"\t\tkubectl patch node k8s-node-1 -p $'spec:\n"
" unschedulable: true'\n"
"\n"
"\t\t# Partially update a node identified by the type and name specified in "
"\"node.json\" using strategic merge patch.\n"
"\t\tkubectl patch -f node.json -p '{\"spec\":{\"unschedulable\":true}}'\n"
"\n"
"\t\t# Update a container's image; spec.containers[*].name is required "
"because it's a merge key.\n"
"\t\tkubectl patch pod valid-pod -p '{\"spec\":{\"containers\":[{\"name\":"
"\"kubernetes-serve-hostname\",\"image\":\"new image\"}]}}'\n"
"\n"
"\t\t# Update a container's image using a json patch with positional arrays.\n"
"\t\tkubectl patch pod valid-pod --type='json' -p='[{\"op\": \"replace\", "
"\"path\": \"/spec/containers/0/image\", \"value\":\"new image\"}]'"
msgstr ""

#: pkg/kubectl/cmd/options.go:29
msgid ""
"\n"
"\t\t# Print flags inherited by all commands\n"
"\t\tkubectl options"
msgstr ""
"\n"
"\t\t# 모든 명령어에 덧붙일 수 있는 option 을 나열합니다\n"
"\t\tkubectl options"

#: pkg/kubectl/cmd/clusterinfo.go:44
msgid ""
"\n"
"\t\t# Print the address of the master and cluster services\n"
"\t\tkubectl cluster-info"
msgstr ""
"\n"
"\t\t# master 와 cluster service 의 주소를 표시합니다\n"
"\t\tkubectl cluster-info"

#: pkg/kubectl/cmd/version.go:42
msgid ""
"\n"
"\t\t# Print the client and server versions for the current context\n"
"\t\tkubectl version"
msgstr ""
"\n"
"\t\t# 현재 컨텍스트에 대한 서버와 클라이언트의 버전을 표시합니다\n"
"\t\tkubectl version"

#: pkg/kubectl/cmd/apiversions.go:34
msgid ""
"\n"
"\t\t# Print the supported API versions\n"
"\t\tkubectl api-versions"
msgstr ""
"\n"
"\t\t# 지원하는 API 버전을 표시합니다\n"
"\t\tkubectl api-versions"

#: pkg/kubectl/cmd/replace.go:53
msgid ""
"\n"
"\t\t# Replace a pod using the data in pod.json.\n"
"\t\tkubectl replace -f ./pod.json\n"
"\n"
"\t\t# Replace a pod based on the JSON passed into stdin.\n"
"\t\tcat pod.json | kubectl replace -f -\n"
"\n"
"\t\t# Update a single-container pod's image version (tag) to v4\n"
"\t\tkubectl get pod mypod -o yaml | sed 's/\\(image: myimage\\):.*$/:v4/' | "
"kubectl replace -f -\n"
"\n"
"\t\t# Force replace, delete and then re-create the resource\n"
"\t\tkubectl replace --force -f ./pod.json"
msgstr ""
"\n"
"\t\t# pod.json 내용으로 pod를 교체합니다.\n"
"\t\tkubectl replace -f ./pod.json\n"
"\n"
"\t\t# 표준 입력으로 들어오는 JSON 내용으로 pod를 교체합니다.\n"
"\t\tcat pod.json | kubectl replace -f -\n"
"\n"
"\t\t# 단일 컨테이너 pod의 image 버전(tag)을 v4로 업데이트 합니다\n"
"\t\tkubectl get pod mypod -o yaml | sed 's/\\(image: myimage\\):.*$/:v4/' | "
"kubectl replace -f -\n"
"\n"
"\t\t# 리소스를 강제로 교체, 삭제하고 다시 생성합니다\n"
"\t\tkubectl replace --force -f ./pod.json"

#: pkg/kubectl/cmd/logs.go:46
msgid ""
"\n"
"\t\t# Return snapshot logs from pod nginx with only one container\n"
"\t\tkubectl logs nginx\n"
"\n"
"\t\t# Return snapshot logs from pod nginx with multi containers\n"
"\t\tkubectl logs nginx --all-containers=true\n"
"\n"
"\t\t# Return snapshot logs from all containers in pods defined by label "
"app=nginx\n"
"\t\tkubectl logs -lapp=nginx --all-containers=true\n"
"\n"
"\t\t# Return snapshot of previous terminated ruby container logs from pod "
"web-1\n"
"\t\tkubectl logs -p -c ruby web-1\n"
"\n"
"\t\t# Begin streaming the logs of the ruby container in pod web-1\n"
"\t\tkubectl logs -f -c ruby web-1\n"
"\n"
"\t\t# Display only the most recent 20 lines of output in pod nginx\n"
"\t\tkubectl logs --tail=20 nginx\n"
"\n"
"\t\t# Show all logs from pod nginx written in the last hour\n"
"\t\tkubectl logs --since=1h nginx\n"
"\n"
"\t\t# Return snapshot logs from first container of a job named hello\n"
"\t\tkubectl logs job/hello\n"
"\n"
"\t\t# Return snapshot logs from container nginx-1 of a deployment named "
"nginx\n"
"\t\tkubectl logs deployment/nginx -c nginx-1"
msgstr ""

#: pkg/kubectl/cmd/scale.go:51
msgid ""
"\n"
"\t\t# Scale a replicaset named 'foo' to 3.\n"
"\t\tkubectl scale --replicas=3 rs/foo\n"
"\n"
"\t\t# Scale a resource identified by type and name specified in \"foo.yaml\" "
"to 3.\n"
"\t\tkubectl scale --replicas=3 -f foo.yaml\n"
"\n"
"\t\t# If the deployment named mysql's current size is 2, scale mysql to 3.\n"
"\t\tkubectl scale --current-replicas=2 --replicas=3 deployment/mysql\n"
"\n"
"\t\t# Scale multiple replication controllers.\n"
"\t\tkubectl scale --replicas=5 rc/foo rc/bar rc/baz\n"
"\n"
"\t\t# Scale statefulset named 'web' to 3.\n"
"\t\tkubectl scale --replicas=3 statefulset/web"
msgstr ""

#: pkg/kubectl/cmd/apply_set_last_applied.go:72
msgid ""
"\n"
"\t\t# Set the last-applied-configuration of a resource to match the contents "
"of a file.\n"
"\t\tkubectl apply set-last-applied -f deploy.yaml\n"
"\n"
"\t\t# Execute set-last-applied against each configuration file in a "
"directory.\n"
"\t\tkubectl apply set-last-applied -f path/\n"
"\n"
"\t\t# Set the last-applied-configuration of a resource to match the contents "
"of a file, will create the annotation if it does not already exist.\n"
"\t\tkubectl apply set-last-applied -f deploy.yaml --create-annotation=true\n"
"\t\t"
msgstr ""
"\n"
"\t\t# 파일 내용과 일치하는 리소스의 last-applied-configuration 을 설정합니"
"다.\n"
"\t\tkubectl apply set-last-applied -f deploy.yaml\n"
"\n"
"\t\t# 디렉토리 안에 존재하는 각 설정 파일에 대한 set-last-applied 를 실행합니"
"다.\n"
"\t\tkubectl apply set-last-applied -f path/\n"
"\n"
"\t\t# 파일 내용과 일치하는 리소소의 last-applied-configuration 을 설정하고 이"
"미 존재하지 않으면 annotation 을 새로 만듭니다.\n"
"\t\tkubectl apply set-last-applied -f deploy.yaml --create-annotation=true\n"
"\t\t"

#: pkg/kubectl/cmd/top_pod.go:69
msgid ""
"\n"
"\t\t# Show metrics for all pods in the default namespace\n"
"\t\tkubectl top pod\n"
"\n"
"\t\t# Show metrics for all pods in the given namespace\n"
"\t\tkubectl top pod --namespace=NAMESPACE\n"
"\n"
"\t\t# Show metrics for a given pod and its containers\n"
"\t\tkubectl top pod POD_NAME --containers\n"
"\n"
"\t\t# Show metrics for the pods defined by label name=myLabel\n"
"\t\tkubectl top pod -l name=myLabel"
msgstr ""
"\n"
"\t\t# default namespace의 모든 pod에 대한 metrics를 보여줍니다\n"
"\t\tkubectl top pod\n"
"\n"
"\t\t# 지정한 namespace의 모든 pod에 대한 metrics를 보여줍니다\n"
"\t\tkubectl top pod --namespace=NAMESPACE\n"
"\n"
"\t\t# 지정한 pod과 그 안의 컨테이너에 대한 metrics를 보여줍니다\n"
"\t\tkubectl top pod POD_NAME --containers\n"
"\n"
"\t\t# name=myLabel 라벨을 지니고 있는 pod에 대한 metrics를 보여줍니다\n"
"\t\tkubectl top pod -l name=myLabel"

#: pkg/kubectl/cmd/run.go:58
msgid ""
"\n"
"\t\t# Start a single instance of nginx.\n"
"\t\tkubectl run nginx --image=nginx\n"
"\n"
"\t\t# Start a single instance of hazelcast and let the container expose port "
"5701 .\n"
"\t\tkubectl run hazelcast --image=hazelcast --port=5701\n"
"\n"
"\t\t# Start a single instance of hazelcast and set environment variables "
"\"DNS_DOMAIN=cluster\" and \"POD_NAMESPACE=default\" in the container.\n"
"\t\tkubectl run hazelcast --image=hazelcast --env=\"DNS_DOMAIN=cluster\" --"
"env=\"POD_NAMESPACE=default\"\n"
"\n"
"\t\t# Start a single instance of hazelcast and set labels \"app=hazelcast\" "
"and \"env=prod\" in the container.\n"
"\t\tkubectl run hazelcast --image=hazelcast --labels=\"app=hazelcast,env=prod"
"\"\n"
"\n"
"\t\t# Start a replicated instance of nginx.\n"
"\t\tkubectl run nginx --image=nginx --replicas=5\n"
"\n"
"\t\t# Dry run. Print the corresponding API objects without creating them.\n"
"\t\tkubectl run nginx --image=nginx --dry-run\n"
"\n"
"\t\t# Start a single instance of nginx, but overload the spec of the "
"deployment with a partial set of values parsed from JSON.\n"
"\t\tkubectl run nginx --image=nginx --overrides='{ \"apiVersion\": \"v1\", "
"\"spec\": { ... } }'\n"
"\n"
"\t\t# Start a pod of busybox and keep it in the foreground, don't restart it "
"if it exits.\n"
"\t\tkubectl run -i -t busybox --image=busybox --restart=Never\n"
"\n"
"\t\t# Start the nginx container using the default command, but use custom "
"arguments (arg1 .. argN) for that command.\n"
"\t\tkubectl run nginx --image=nginx -- <arg1> <arg2> ... <argN>\n"
"\n"
"\t\t# Start the nginx container using a different command and custom "
"arguments.\n"
"\t\tkubectl run nginx --image=nginx --command -- <cmd> <arg1> ... <argN>\n"
"\n"
"\t\t# Start the perl container to compute π to 2000 places and print it "
"out.\n"
"\t\tkubectl run pi --image=perl --restart=OnFailure -- perl -Mbignum=bpi -"
"wle 'print bpi(2000)'\n"
"\n"
"\t\t# Start the cron job to compute π to 2000 places and print it out every "
"5 minutes.\n"
"\t\tkubectl run pi --schedule=\"0/5 * * * ?\" --image=perl --"
"restart=OnFailure -- perl -Mbignum=bpi -wle 'print bpi(2000)'"
msgstr ""

#: pkg/kubectl/cmd/proxy.go:44
msgid ""
"\n"
"\t\t# To proxy all of the kubernetes api and nothing else, use:\n"
"\n"
"\t\t    $ kubectl proxy --api-prefix=/\n"
"\n"
"\t\t# To proxy only part of the kubernetes api and also some static files:\n"
"\n"
"\t\t    $ kubectl proxy --www=/my/files --www-prefix=/static/ --api-prefix=/"
"api/\n"
"\n"
"\t\t# The above lets you 'curl localhost:8001/api/v1/pods'.\n"
"\n"
"\t\t# To proxy the entire kubernetes api at a different root, use:\n"
"\n"
"\t\t    $ kubectl proxy --api-prefix=/custom/\n"
"\n"
"\t\t# The above lets you 'curl localhost:8001/custom/api/v1/pods'\n"
"\n"
"\t\t# Run a proxy to kubernetes apiserver on port 8011, serving static "
"content from ./local/www/\n"
"\t\tkubectl proxy --port=8011 --www=./local/www/\n"
"\n"
"\t\t# Run a proxy to kubernetes apiserver on an arbitrary local port.\n"
"\t\t# The chosen port for the server will be output to stdout.\n"
"\t\tkubectl proxy --port=0\n"
"\n"
"\t\t# Run a proxy to kubernetes apiserver, changing the api prefix to k8s-"
"api\n"
"\t\t# This makes e.g. the pods api available at localhost:8001/k8s-api/v1/"
"pods/\n"
"\t\tkubectl proxy --api-prefix=/k8s-api"
msgstr ""

#: pkg/kubectl/cmd/taint.go:72
msgid ""
"\n"
"\t\t# Update node 'foo' with a taint with key 'dedicated' and value 'special-"
"user' and effect 'NoSchedule'.\n"
"\t\t# If a taint with that key and effect already exists, its value is "
"replaced as specified.\n"
"\t\tkubectl taint nodes foo dedicated=special-user:NoSchedule\n"
"\n"
"\t\t# Remove from node 'foo' the taint with key 'dedicated' and effect "
"'NoSchedule' if one exists.\n"
"\t\tkubectl taint nodes foo dedicated:NoSchedule-\n"
"\n"
"\t\t# Remove from node 'foo' all the taints with key 'dedicated'\n"
"\t\tkubectl taint nodes foo dedicated-\n"
"\n"
"\t\t# Add a taint with key 'dedicated' on nodes having label mylabel=X\n"
"\t\tkubectl taint node -l myLabel=X  dedicated=foo:PreferNoSchedule"
msgstr ""

#: pkg/kubectl/cmd/label.go:92
msgid ""
"\n"
"\t\t# Update pod 'foo' with the label 'unhealthy' and the value 'true'.\n"
"\t\tkubectl label pods foo unhealthy=true\n"
"\n"
"\t\t# Update pod 'foo' with the label 'status' and the value 'unhealthy', "
"overwriting any existing value.\n"
"\t\tkubectl label --overwrite pods foo status=unhealthy\n"
"\n"
"\t\t# Update all pods in the namespace\n"
"\t\tkubectl label pods --all status=unhealthy\n"
"\n"
"\t\t# Update a pod identified by the type and name in \"pod.json\"\n"
"\t\tkubectl label -f pod.json status=unhealthy\n"
"\n"
"\t\t# Update pod 'foo' only if the resource is unchanged from version 1.\n"
"\t\tkubectl label pods foo status=unhealthy --resource-version=1\n"
"\n"
"\t\t# Update pod 'foo' by removing a label named 'bar' if it exists.\n"
"\t\t# Does not require the --overwrite flag.\n"
"\t\tkubectl label pods foo bar-"
msgstr ""
"\n"
"\t\t# 'foo' pod 의 라벨을 'unhealthy' 및 그 값으로 'true' 로 지정합니다.\n"
"\t\tkubectl label pods foo unhealthy=true\n"
"\n"
"\t\t# 'foo' pod 의 라벨을 'status' 및 그 값으로 'unhealthy' 로 하여 기존 값"
"을 덮어씌웁니다.\n"
"\t\tkubectl label --overwrite pods foo status=unhealthy\n"
"\n"
"\t\t# 현재 네임스페이스의 모든 pod 의 라벨을 'status' 및 그 값으로 "
"'unhealthy' 로 업데이트 합니다\n"
"\t\tkubectl label pods --all status=unhealthy\n"
"\n"
"\t\t# \\\"pod.json 에 지정된 형식 및 이름으로 검색되는 pod 의 라벨을 "
"'status=unhealthy' 로 업데이트 합니다\n"
"\t\tkubectl label -f pod.json status=unhealthy\n"
"\n"
"\t\t# 리소스가 version 1 에서 변경되지 않았다면 'foo' pod 를 업데이트 합니"
"다.\n"
"\t\tkubectl label pods foo status=unhealthy --resource-version=1\n"
"\n"
"\t\t#  'foo' pod 에 'bar' 라는 라벨이 존재하면 삭제합니다.\n"
"\t\t# 매개변수 --overwrite 가 필요하지 않습니다.\n"
"\t\tkubectl label pods foo bar-"

#: pkg/kubectl/cmd/rollingupdate.go:57
msgid ""
"\n"
"\t\t# Update pods of frontend-v1 using new replication controller data in "
"frontend-v2.json.\n"
"\t\tkubectl rolling-update frontend-v1 -f frontend-v2.json\n"
"\n"
"\t\t# Update pods of frontend-v1 using JSON data passed into stdin.\n"
"\t\tcat frontend-v2.json | kubectl rolling-update frontend-v1 -f -\n"
"\n"
"\t\t# Update the pods of frontend-v1 to frontend-v2 by just changing the "
"image, and switching the\n"
"\t\t# name of the replication controller.\n"
"\t\tkubectl rolling-update frontend-v1 frontend-v2 --image=image:v2\n"
"\n"
"\t\t# Update the pods of frontend by just changing the image, and keeping "
"the old name.\n"
"\t\tkubectl rolling-update frontend --image=image:v2\n"
"\n"
"\t\t# Abort and reverse an existing rollout in progress (from frontend-v1 to "
"frontend-v2).\n"
"\t\tkubectl rolling-update frontend-v1 frontend-v2 --rollback"
msgstr ""
"\n"
"\t\t# frontend-v1 의 pod 를 frontend-v2.json 의 새로운 replication conroller "
"데이터로 업데이트 합니다.\n"
"\t\tkubectl rolling-update frontend-v1 -f frontend-v2.json\n"
"\n"
"\t\t# 표준 입력으로 들어오는 JSON 데이터를 이용하여 frontend-v1 의 pod 를 업"
"데이트 합니다.\n"
"\t\tcat frontend-v2.json | kubectl rolling-update frontend-v1 -f -\n"
"\n"
"\t\t# 이미지를 바꾸고 replication controller 의 이름을 교체하는 작업만으로\n"
"\t\t# frontend-v1 의 pod 를 frontend-v2 로 업데이트 합니다.\n"
"\t\tkubectl rolling-update frontend-v1 frontend-v2 --image=image:v2\n"
"\n"
"\t\t# 단지 이미지를 바꾸는 것으로 frontend 의 pod 를 업데이트 하되 예전 이름"
"은 계속 유지합니다.\n"
"\t\tkubectl rolling-update frontend --image=image:v2\n"
"\n"
"\t\t# 진행 중인 롤아웃 작업을 취소하고 이전으로 되돌립니다 (frontend-v1 에서 "
"frontend-v2로).\n"
"\t\tkubectl rolling-update frontend-v1 frontend-v2 --rollback"

#: pkg/kubectl/cmd/apply_view_last_applied.go:52
msgid ""
"\n"
"\t\t# View the last-applied-configuration annotations by type/name in YAML.\n"
"\t\tkubectl apply view-last-applied deployment/nginx\n"
"\n"
"\t\t# View the last-applied-configuration annotations by file in JSON\n"
"\t\tkubectl apply view-last-applied -f deploy.yaml -o json"
msgstr ""
"\n"
"\t\t# last-applied-configuration annotations 를 YAML 의 형식/이름 으로 봅니"
"다.\n"
"\t\tkubectl apply view-last-applied deployment/nginx\n"
"\n"
"\t\t# last-applied-configuration annotations 를 JSON 형식으로 봅니다.\n"
"\t\tkubectl apply view-last-applied -f deploy.yaml -o json"

#: pkg/kubectl/cmd/apply.go:101
msgid ""
"\n"
"\t\tApply a configuration to a resource by filename or stdin.\n"
"\t\tThe resource name must be specified. This resource will be created if it "
"doesn't exist yet.\n"
"\t\tTo use 'apply', always create the resource initially with either 'apply' "
"or 'create --save-config'.\n"
"\n"
"\t\tJSON and YAML formats are accepted.\n"
"\n"
"\t\tAlpha Disclaimer: the --prune functionality is not yet complete. Do not "
"use unless you are aware of what the current state is. See https://issues."
"k8s.io/34274."
msgstr ""

#: pkg/kubectl/cmd/convert.go:39
msgid ""
"\n"
"\t\tConvert config files between different API versions. Both YAML\n"
"\t\tand JSON formats are accepted.\n"
"\n"
"\t\tThe command takes filename, directory, or URL as input, and convert it "
"into format\n"
"\t\tof version specified by --output-version flag. If target version is not "
"specified or\n"
"\t\tnot supported, convert to latest version.\n"
"\n"
"\t\tThe default output will be printed to stdout in YAML format. One can use "
"-o option\n"
"\t\tto change to output destination."
msgstr ""
"\n"
"\t\t서로 다른 API 버전간 config 파일을 변환합니다\n"
"\t\tYAML 과 JSON 형식이 사용될 수 있습니다.\n"
"\n"
"\t\t이 명령어는 파일이름, 디렉토리 또는 URL 을 입력 받으며,\n"
"\t\t--output-version 에 의해 지정된 버전 형식으로 변환 됩니다.\n"
"\t\t타겟 버전이 지정되지 않거나 지원되지 않는다면, 최신 버전으로 변환 됩니"
"다.\n"
"\n"
"\t\t디폴트 출력은 YAML 형식으로 출력됩니다. -o 옵션을 통해\n"
"\t\t출력 형식을 변경할 수 있습니다."

#: pkg/kubectl/cmd/create/create_clusterrole.go:35
msgid ""
"\n"
"\t\tCreate a ClusterRole."
msgstr ""
"\n"
"\t\tClusterRole 을 생성합니다."

#: pkg/kubectl/cmd/create/create_clusterrolebinding.go:30
msgid ""
"\n"
"\t\tCreate a ClusterRoleBinding for a particular ClusterRole."
msgstr ""
"\n"
"\t\t특정 ClusterRole 을 위한 ClusterRoleBinding 을 생성합니다."

#: pkg/kubectl/cmd/create/create_rolebinding.go:30
msgid ""
"\n"
"\t\tCreate a RoleBinding for a particular Role or ClusterRole."
msgstr ""
"\n"
"\t\t특정 Role 또는 ClusterRole 을 위한 RoleBinding 을 생성합니다."

#: pkg/kubectl/cmd/create/create_secret.go:240
msgid ""
"\n"
"\t\tCreate a TLS secret from the given public/private key pair.\n"
"\n"
"\t\tThe public/private key pair must exist before hand. The public key "
"certificate must be .PEM encoded and match\n"
"\t\tthe given private key."
msgstr ""

#: pkg/kubectl/cmd/create/create_configmap.go:30
msgid ""
"\n"
"\t\tCreate a configmap based on a file, directory, or specified literal "
"value.\n"
"\n"
"\t\tA single configmap may package one or more key/value pairs.\n"
"\n"
"\t\tWhen creating a configmap based on a file, the key will default to the "
"basename of the file, and the value will\n"
"\t\tdefault to the file content.  If the basename is an invalid key, you may "
"specify an alternate key.\n"
"\n"
"\t\tWhen creating a configmap based on a directory, each file whose basename "
"is a valid key in the directory will be\n"
"\t\tpackaged into the configmap.  Any directory entries except regular files "
"are ignored (e.g. subdirectories,\n"
"\t\tsymlinks, devices, pipes, etc)."
msgstr ""
"\n"
"\t\t파일, 디렉토리 또는 특정 문자 값을 기반으로 configmap을 생성합니다.\n"
"\n"
"\t\t단일 configmap은 하나 이상의 키/값 쌍을 포함합니다.\n"
"\n"
"\t\tConfigmap을 파일을 통해 생성하는 경우 디폴트로 키는 파일의 basename으로 "
"설정되며 값은 파일 내용이 됩니다.\n"
"\t\tbasename이 키로써 유효하지 않은 경우, 다른 이름으로 키를 지정해야합니"
"다. \n"
"\n"
"\t\tConfigmap을 디렉토리를 통해 생성하는 경우 디렉토리내 각각의 파일 중 유효"
"한 키를\n"
"\t\tbasename으로 가진 파일은 configmap에 포함됩니다. 일반적인 파일 이외의 디"
"렉토리 엔트리(예: 서브디렉토리, 심볼릭링크,\n"
"\t\t디바이스, 파이프 등)는 모두 무시됩니다."

#: pkg/kubectl/cmd/create/create_job.go:39
msgid ""
"\n"
"\t\tCreate a job with the specified name."
msgstr ""

#: pkg/kubectl/cmd/create/create_namespace.go:30
msgid ""
"\n"
"\t\tCreate a namespace with the specified name."
msgstr ""
"\n"
"\t\t지정한 이름으로 namespace 을 생성합니다."

#: pkg/kubectl/cmd/create/create_secret.go:140
msgid ""
"\n"
"\t\tCreate a new secret for use with Docker registries.\n"
"\n"
"\t\tDockercfg secrets are used to authenticate against Docker registries.\n"
"\n"
"\t\tWhen using the Docker command line to push images, you can authenticate "
"to a given registry by running:\n"
"\t\t\t'$ docker login DOCKER_REGISTRY_SERVER --username=DOCKER_USER --"
"password=DOCKER_PASSWORD --email=DOCKER_EMAIL'.\n"
"\n"
"\tThat produces a ~/.dockercfg file that is used by subsequent 'docker push' "
"and 'docker pull' commands to\n"
"\t\tauthenticate to the registry. The email address is optional.\n"
"\n"
"\t\tWhen creating applications, you may have a Docker registry that requires "
"authentication.  In order for the\n"
"\t\tnodes to pull images on your behalf, they have to have the credentials.  "
"You can provide this information\n"
"\t\tby creating a dockercfg secret and attaching it to your service account."
msgstr ""

#: pkg/kubectl/cmd/create/create_pdb.go:30
msgid ""
"\n"
"\t\tCreate a pod disruption budget with the specified name, selector, and "
"desired minimum available pods"
msgstr ""
"\n"
"\t\t지정된 이름, selector, 그리고 요구되어지는 최소 가용 pods 을 따르는 pod "
"disruption budget 을 생성합니다"

#: pkg/kubectl/cmd/create/create_priorityclass.go:30
msgid ""
"\n"
"\t\tCreate a priorityclass with the specified name, value, globalDefault and "
"description"
msgstr ""

#: pkg/kubectl/cmd/create/create.go:65
msgid ""
"\n"
"\t\tCreate a resource from a file or from stdin.\n"
"\n"
"\t\tJSON and YAML formats are accepted."
msgstr ""

#: pkg/kubectl/cmd/create/create_quota.go:30
msgid ""
"\n"
"\t\tCreate a resourcequota with the specified name, hard limits and optional "
"scopes"
msgstr ""
"\n"
"\t\t지정된 이름 , 고정 제한(hard limits) 와 선택 범위를 포함하는 "
"resourcequota 을 생성합니다"

#: pkg/kubectl/cmd/create/create_role.go:40
msgid ""
"\n"
"\t\tCreate a role with single rule."
msgstr ""
"\n"
"\t\t단일 규칙을 갖고 있는 role 을 생성합니다."

#: pkg/kubectl/cmd/create/create_secret.go:45
msgid ""
"\n"
"\t\tCreate a secret based on a file, directory, or specified literal value.\n"
"\n"
"\t\tA single secret may package one or more key/value pairs.\n"
"\n"
"\t\tWhen creating a secret based on a file, the key will default to the "
"basename of the file, and the value will\n"
"\t\tdefault to the file content. If the basename is an invalid key or you "
"wish to chose your own, you may specify\n"
"\t\tan alternate key.\n"
"\n"
"\t\tWhen creating a secret based on a directory, each file whose basename is "
"a valid key in the directory will be\n"
"\t\tpackaged into the secret. Any directory entries except regular files are "
"ignored (e.g. subdirectories,\n"
"\t\tsymlinks, devices, pipes, etc)."
msgstr ""

#: pkg/kubectl/cmd/create/create_serviceaccount.go:30
msgid ""
"\n"
"\t\tCreate a service account with the specified name."
msgstr ""
"\n"
"\t\t지정한 이름으로 서비스 계정을 생성합니다."

#: pkg/kubectl/cmd/run.go:53
msgid ""
"\n"
"\t\tCreate and run a particular image, possibly replicated.\n"
"\n"
"\t\tCreates a deployment or job to manage the created container(s)."
msgstr ""
"\n"
"\t\t특정 이미지를 생성하고 실행합니다, 가급적 복제가 가능합니다.\n"
"\n"
"\t\t생성된 컨테이너를 관리하기 위한 deployment 나 job 을 생성합니다."

#: pkg/kubectl/cmd/proxy.go:38
msgid ""
"\n"
"\t\tCreates a proxy server or application-level gateway between localhost "
"and \n"
"\t\tthe Kubernetes API Server. It also allows serving static content over "
"specified \n"
"\t\tHTTP path. All incoming data enters through one port and gets forwarded "
"to \n"
"\t\tthe remote kubernetes API Server port, except for the path matching the "
"static content path."
msgstr ""

#: pkg/kubectl/cmd/autoscale.go:41
msgid ""
"\n"
"\t\tCreates an autoscaler that automatically chooses and sets the number of "
"pods that run in a kubernetes cluster.\n"
"\n"
"\t\tLooks up a Deployment, ReplicaSet, or ReplicationController by name and "
"creates an autoscaler that uses the given resource as a reference.\n"
"\t\tAn autoscaler can automatically increase or decrease number of pods "
"deployed within the system as needed."
msgstr ""
"\n"
"\t\tkubernetes 클러스터에서 자동으로 pod 의 개수를 조정하는 autoscaler 를 생"
"성합니다.\n"
"\n"
"\t\t이름으로 Deployment, ReplicaSet 및 ReplicationController 을 찾고 주어진 "
"자원을 참고 하여 autoscaler 를 생성합니다.\n"
"\t\tautoscaler 는 필요에 따라 pod 의 개수를 자동으로 늘리거나 줄일 수 있습니"
"다."

#: pkg/kubectl/cmd/delete.go:42
msgid ""
"\n"
"\t\tDelete resources by filenames, stdin, resources and names, or by "
"resources and label selector.\n"
"\n"
"\t\tJSON and YAML formats are accepted. Only one type of the arguments may "
"be specified: filenames,\n"
"\t\tresources and names, or resources and label selector.\n"
"\n"
"\t\tSome resources, such as pods, support graceful deletion. These resources "
"define a default period\n"
"\t\tbefore they are forcibly terminated (the grace period) but you may "
"override that value with\n"
"\t\tthe --grace-period flag, or pass --now to set a grace-period of 1. "
"Because these resources often\n"
"\t\trepresent entities in the cluster, deletion may not be acknowledged "
"immediately. If the node\n"
"\t\thosting a pod is down or cannot reach the API server, termination may "
"take significantly longer\n"
"\t\tthan the grace period. To force delete a resource, you must pass a grace "
"period of 0 and specify\n"
"\t\tthe --force flag.\n"
"\n"
"\t\tIMPORTANT: Force deleting pods does not wait for confirmation that the "
"pod's processes have been\n"
"\t\tterminated, which can leave those processes running until the node "
"detects the deletion and\n"
"\t\tcompletes graceful deletion. If your processes use shared storage or "
"talk to a remote API and\n"
"\t\tdepend on the name of the pod to identify themselves, force deleting "
"those pods may result in\n"
"\t\tmultiple processes running on different machines using the same "
"identification which may lead\n"
"\t\tto data corruption or inconsistency. Only force delete pods when you are "
"sure the pod is\n"
"\t\tterminated, or if your application can tolerate multiple copies of the "
"same pod running at once.\n"
"\t\tAlso, if you force delete pods the scheduler may place new pods on those "
"nodes before the node\n"
"\t\thas released those resources and causing those pods to be evicted "
"immediately.\n"
"\n"
"\t\tNote that the delete command does NOT do resource version checks, so if "
"someone submits an\n"
"\t\tupdate to a resource right when you submit a delete, their update will "
"be lost along with the\n"
"\t\trest of the resource."
msgstr ""

#: pkg/kubectl/cmd/diff.go:46
msgid ""
"\n"
"\t\tDiff configurations specified by filename or stdin between their local,\n"
"\t\tlast-applied, live and/or \"merged\" versions.\n"
"\n"
"\t\tLOCAL and LIVE versions are diffed by default. Other available keywords\n"
"\t\tare MERGED and LAST.\n"
"\n"
"\t\tOutput is always YAML.\n"
"\n"
"\t\tKUBERNETES_EXTERNAL_DIFF environment variable can be used to select your "
"own\n"
"\t\tdiff command. By default, the \"diff\" command available in your path "
"will be\n"
"\t\trun with \"-u\" (unicode) and \"-N\" (treat new files as empty) options."
msgstr ""

#: pkg/kubectl/cmd/top_node.go:81
msgid ""
"\n"
"\t\tDisplay Resource (CPU/Memory/Storage) usage of nodes.\n"
"\n"
"\t\tThe top-node command allows you to see the resource consumption of nodes."
msgstr ""
"\n"
"\t\t노드의 자원(CPU/Memory/Storage) 사용률을 보여줍니다.\n"
"\n"
"\t\ttop-node 명령어는 node 의 자원 소모량을 보여줍니다."

#: pkg/kubectl/cmd/top_pod.go:61
msgid ""
"\n"
"\t\tDisplay Resource (CPU/Memory/Storage) usage of pods.\n"
"\n"
"\t\tThe 'top pod' command allows you to see the resource consumption of "
"pods.\n"
"\n"
"\t\tDue to the metrics pipeline delay, they may be unavailable for a few "
"minutes\n"
"\t\tsince pod creation."
msgstr ""
"\n"
"\t\tpod 의 자원(CPU/Memory/Storage) 사용률을 보여줍니다.\n"
"\n"
"\t\t'top pod' 명령어는 pod 의 자원 소모량을 보여줍니다.\n"
"\n"
"\t\tmetrics pipeline 지연으로 인해, pod 생성된 이후 몇 분간\n"
"\t\t자원 소모량이 표시되지 않을 수도 있습니다."

#: pkg/kubectl/cmd/top.go:34
msgid ""
"\n"
"\t\tDisplay Resource (CPU/Memory/Storage) usage.\n"
"\n"
"\t\tThe top command allows you to see the resource consumption for nodes or "
"pods.\n"
"\n"
"\t\tThis command requires Heapster to be correctly configured and working on "
"the server. "
msgstr ""
"\n"
"\t\t자원(CPU/Memory/Storage) 사용률을 보여줍니다.\n"
"\n"
"\t\ttop 명령어는 node 나 pod 의 자원 소모량을 보여줍니다.\n"
"\n"
"\t\t이 명령어를 사용하기 위해서는 Heapster 가 서버에 올바르게 설정되고 실행중"
"이어야 합니다. "

#: pkg/kubectl/cmd/drain.go:164
msgid ""
"\n"
"\t\tDrain node in preparation for maintenance.\n"
"\n"
"\t\tThe given node will be marked unschedulable to prevent new pods from "
"arriving.\n"
"\t\t'drain' evicts the pods if the APIServer supports eviction\n"
"\t\t(http://kubernetes.io/docs/admin/disruptions/). Otherwise, it will use "
"normal DELETE\n"
"\t\tto delete the pods.\n"
"\t\tThe 'drain' evicts or deletes all pods except mirror pods (which cannot "
"be deleted through\n"
"\t\tthe API server).  If there are DaemonSet-managed pods, drain will not "
"proceed\n"
"\t\twithout --ignore-daemonsets, and regardless it will not delete any\n"
"\t\tDaemonSet-managed pods, because those pods would be immediately replaced "
"by the\n"
"\t\tDaemonSet controller, which ignores unschedulable markings.  If there "
"are any\n"
"\t\tpods that are neither mirror pods nor managed by ReplicationController,\n"
"\t\tReplicaSet, DaemonSet, StatefulSet or Job, then drain will not delete "
"any pods unless you\n"
"\t\tuse --force.  --force will also allow deletion to proceed if the "
"managing resource of one\n"
"\t\tor more pods is missing.\n"
"\n"
"\t\t'drain' waits for graceful termination. You should not operate on the "
"machine until\n"
"\t\tthe command completes.\n"
"\n"
"\t\tWhen you are ready to put the node back into service, use kubectl "
"uncordon, which\n"
"\t\twill make the node schedulable again.\n"
"\n"
"\t\t![Workflow](http://kubernetes.io/images/docs/kubectl_drain.svg)"
msgstr ""
"\n"
"\t\t점검을 위해 node 의 pod 를 Drain(비우기) 합니다.\n"
"\n"
"\t\t주어진 node 는 새로운 pod 가 생성되는 것을 방지하기 위해 unschedulable "
"로 표기됩니다.\n"
"\t\tAPIServer 가 제거기능을 지원하면 'drain' 은 모든 pod 를 제거합니다\n"
"\t\t(http://kubernetes.io/docs/admin/disruptions/). 그렇지 않으면, 일반적인 "
"DELETE를 사용하여\n"
"\t\tpod 를 삭제할 것입니다.\n"
"\t\t'drain' 은 mirror pod 을 제외한 모든 pod 을 제거합니다 (API 서버를 통해 "
"삭제되진\n"
"\t\t않지만).  DaemonSet 으로 관리되는 pod 가 있다면, drain 은 --ignore-"
"daemonsets 지시자\n"
"\t\t없이 수행되지 않으며, 해당 지시자를 사용하더라도 DaemonSet 으로 관리되는 "
"pod 은\n"
"\t\t삭제되지 않을 것 입니다, 왜냐하면 unschedulable 표시를 무시하는\n"
"\t\tDaemonSet controller 가 즉시 pod 를 복구하기 때문입니다. mirror pod 이"
"나\n"
"\t\tReplicationController, ReplicaSet, DaemonSet, StatefulSet 또는 Job 에 의"
"해 관리되지 않는\n"
"\t\tpod 들은 --force 를 사용하지 않는 한, drain 은 어떠한 pod 도 지우지 않"
"을\n"
"\t\t것 입니다.  또한 --force 는 관리하는 자원에서 하나 혹은 그 이상의 pod 가 "
"없어도 삭제를\n"
"\t\t진행할 것입니다.\n"
"\n"
"\t\t'drain' 순차적인 종료를 기다립니다. 명령어가 완료될 때까지 machine 을\n"
"\t\t기동하지 마십시오.\n"
"\n"
"\t\tnode 을 다시 서비스할 준비가 되면, kubectl uncordon 명령어를 사용하여\n"
"\t\tnode 를 schedulable 상태로 다시 전환합니다.\n"
"\n"
"\t\t![Workflow](http://kubernetes.io/images/docs/kubectl_drain.svg)"

#: pkg/kubectl/cmd/edit.go:32
msgid ""
"\n"
"\t\tEdit a resource from the default editor.\n"
"\n"
"\t\tThe edit command allows you to directly edit any API resource you can "
"retrieve via the\n"
"\t\tcommand line tools. It will open the editor defined by your KUBE_EDITOR, "
"or EDITOR\n"
"\t\tenvironment variables, or fall back to 'vi' for Linux or 'notepad' for "
"Windows.\n"
"\t\tYou can edit multiple objects, although changes are applied one at a "
"time. The command\n"
"\t\taccepts filenames as well as command line arguments, although the files "
"you point to must\n"
"\t\tbe previously saved versions of resources.\n"
"\n"
"\t\tEditing is done with the API version used to fetch the resource.\n"
"\t\tTo edit using a specific API version, fully-qualify the resource, "
"version, and group.\n"
"\n"
"\t\tThe default format is YAML. To edit in JSON, specify \"-o json\".\n"
"\n"
"\t\tThe flag --windows-line-endings can be used to force Windows line "
"endings,\n"
"\t\totherwise the default for your operating system will be used.\n"
"\n"
"\t\tIn the event an error occurs while updating, a temporary file will be "
"created on disk\n"
"\t\tthat contains your unapplied changes. The most common error when "
"updating a resource\n"
"\t\tis another editor changing the resource on the server. When this occurs, "
"you will have\n"
"\t\tto apply your changes to the newer version of the resource, or update "
"your temporary\n"
"\t\tsaved copy to include the latest resource version."
msgstr ""
"\n"
"\t\t기본 편집기를 이용하여 자원을 편집합니다.\n"
"\n"
"\t\tedit 명령어는 명령어 도구를 통해 받을 수 있는 모든 API 자원을 직접적으로 "
"편집하게\n"
"\t\t해줍니다. KUBE_EDITOR 에 정의되어 있거나, EDITOR 환경 변수에 정의된 편집"
"기를 열거나\n"
"\t\t정의된 편집기가 없다면 Linux 에서는 'vi', Windows 에서는 'notepad' 편집기"
"를 실행할 것입니다.\n"
"\t\t여러 항목을 편집할 수 있지만, 적용은 한 번에 됩니다. 명령어는\n"
"\t\t비록 지정하는 file 은 반드시 이전에 자원의 버전이 저장되어야 하지만,\n"
"\t\tfilenames 및 명령어 매개 변수를 허용합니다.\n"
"\n"
"\t\tAPI 버전을 명시하여 편집을 완료 하면 자원을 불러오는 데 사용되곤 합니"
"다.\n"
"\t\tTo edit using a specific API version, fully-qualify the resource, "
"version, and group.\n"
"\n"
"\t\t기본 형식은 YAML 입니다. JSON 형식으로 편집하려면, \"-o json\" 을 지정하"
"십시오.\n"
"\n"
"\t\t--windows-line-endings 을 통해 Windows 개행 문자를 강제로 지정할 수 있습"
"니다.\n"
"\t\t아니면 사용중인 운영체제의 기본값이 사용될 것입니다.\n"
"\n"
"\t\t업데이트 중에 오류가 발생한 경우, 아직 적용되지 않은 변경사항이 담긴\n"
"\t\t디스크에 생성될 것입니다. 자원 업데이트 중에 발생하는 가장 흔한 오류는 서"
"버에 있는 자원을\n"
"\t\t또다른 편집기로 변경할 때 발생합니다. 이러한 오류가 발생하면, 새롭게 갱신"
"된 자원에\n"
"\t\t변경 사항을 적용하거나, 임시로 저장한 복사본을 최신 버전의 자원으로\n"
"\t\t복사해야 할 것입니다."

#: pkg/kubectl/cmd/drain.go:133
msgid ""
"\n"
"\t\tMark node as schedulable."
msgstr ""
"\n"
"\t\tnode 를 schedulable로 표시합니다."

#: pkg/kubectl/cmd/drain.go:101
msgid ""
"\n"
"\t\tMark node as unschedulable."
msgstr ""
"\n"
"\t\tnode 를 unschedulable로 표시합니다."

#: pkg/kubectl/cmd/completion.go:47
msgid ""
"\n"
"\t\tOutput shell completion code for the specified shell (bash or zsh).\n"
"\t\tThe shell code must be evaluated to provide interactive\n"
"\t\tcompletion of kubectl commands.  This can be done by sourcing it from\n"
"\t\tthe .bash_profile.\n"
"\n"
"\t\tDetailed instructions on how to do this are available here:\n"
"\t\thttps://kubernetes.io/docs/tasks/tools/install-kubectl/#enabling-shell-"
"autocompletion\n"
"\n"
"\t\tNote for zsh users: [1] zsh completions are only supported in versions "
"of zsh >= 5.2"
msgstr ""

#: pkg/kubectl/cmd/rollingupdate.go:48
msgid ""
"\n"
"\t\tPerform a rolling update of the given ReplicationController.\n"
"\n"
"\t\tReplaces the specified replication controller with a new replication "
"controller by updating one pod at a time to use the\n"
"\t\tnew PodTemplate. The new-controller.json must specify the same namespace "
"as the\n"
"\t\texisting replication controller and overwrite at least one (common) "
"label in its replicaSelector.\n"
"\n"
"\t\t![Workflow](http://kubernetes.io/images/docs/kubectl_rollingupdate.svg)"
msgstr ""
"\n"
"\t\t주어진 ReplicationController에 대해 롤링 업데이트를 수행합니다.\n"
"\n"
"\t\t새로운 PodTemplate를 사용하여 pod 하나를 동시에 업데이트하는 방식으로 지"
"정한 복제 컨트롤러를 새로운 복제 컨트롤러로\n"
"\t\t변경합니다. new-controller.json에는 기존 복제 컨트롤러에서 사용하던 네임"
"스페이스와\n"
"\t\t동일하게 지정해야 하며 적어도 하나의 (공통) 라벨을 replicaSelector에 중"
"복 기재해야 합니다.\n"
"\n"
"\t\t![워크플로우](http://kubernetes.io/images/docs/kubectl_rollingupdate.svg)"

#: pkg/kubectl/cmd/replace.go:43
msgid ""
"\n"
"\t\tReplace a resource by filename or stdin.\n"
"\n"
"\t\tJSON and YAML formats are accepted. If replacing an existing resource, "
"the\n"
"\t\tcomplete resource spec must be provided. This can be obtained by\n"
"\n"
"\t\t    $ kubectl get TYPE NAME -o yaml\n"
"\n"
"\t\tPlease refer to the models in https://htmlpreview.github.io/?https://"
"github.com/kubernetes/kubernetes/blob/HEAD/docs/api-reference/v1/definitions."
"html to find if a field is mutable."
msgstr ""
"\n"
"\t\t파일 이름이나 표준 입력을 통해 자원을 변경합니다.\n"
"\n"
"\t\tJSON 과 YAML 형식이 사용됩니다. 기존 자원을 변경하는 것이라면, 완전한\n"
"\t\t자원 사양이 반드시 제공되어야 합니다. 이 사양은 아래 명령어로 얻을 수 있"
"습니다\n"
"\n"
"\t\t    $ kubectl get TYPE NAME -o yaml\n"
"\n"
"\t\thttps://htmlpreview.github.io/?https://github.com/kubernetes/kubernetes/"
"blob/HEAD/docs/api-reference/v1/definitions.html 을 참고하여 필드가 쉽게 변"
"할 수 있는 지 알아보십시오."

#: pkg/kubectl/cmd/scale.go:42
msgid ""
"\n"
"\t\tSet a new size for a Deployment, ReplicaSet, Replication Controller, or "
"StatefulSet.\n"
"\n"
"\t\tScale also allows users to specify one or more preconditions for the "
"scale action.\n"
"\n"
"\t\tIf --current-replicas or --resource-version is specified, it is "
"validated before the\n"
"\t\tscale is attempted, and it is guaranteed that the precondition holds "
"true when the\n"
"\t\tscale is sent to the server."
msgstr ""

#: pkg/kubectl/cmd/apply_set_last_applied.go:67
msgid ""
"\n"
"\t\tSet the latest last-applied-configuration annotations by setting it to "
"match the contents of a file.\n"
"\t\tThis results in the last-applied-configuration being updated as though "
"'kubectl apply -f <file>' was run,\n"
"\t\twithout updating any other parts of the object."
msgstr ""
"\n"
"\t\t최신 last-applied-configuration 주석을 파일 내용에 맞게 설정하도록 합니"
"다.\n"
"\t\t결과적으로 마치 'kubectl apply -f <file>' 이 실행된 것처럼, 대상의 다른 "
"부분은 갱신하지 않고,\n"
"\t\tlast-applied-configuration 가 갱신됩니다."

#: pkg/kubectl/cmd/patch.go:73
msgid ""
"\n"
"\t\tUpdate field(s) of a resource using strategic merge patch, a JSON merge "
"patch, or a JSON patch.\n"
"\n"
"\t\tJSON and YAML formats are accepted.\n"
"\n"
"\t\tPlease refer to the models in https://htmlpreview.github.io/?https://"
"github.com/kubernetes/kubernetes/blob/HEAD/docs/api-reference/v1/definitions."
"html to find if a field is mutable."
msgstr ""

#: pkg/kubectl/cmd/label.go:84
#, c-format
msgid ""
"\n"
"\t\tUpdate the labels on a resource.\n"
"\n"
"\t\t* A label key and value must begin with a letter or number, and may "
"contain letters, numbers, hyphens, dots, and underscores, up to %[1]d "
"characters each.\n"
"\t\t* Optionally, the key can begin with a DNS subdomain prefix and a single "
"'/', like example.com/my-app\n"
"\t\t* If --overwrite is true, then existing labels can be overwritten, "
"otherwise attempting to overwrite a label will result in an error.\n"
"\t\t* If --resource-version is specified, then updates will use this "
"resource version, otherwise the existing resource-version will be used."
msgstr ""

#: pkg/kubectl/cmd/taint.go:62
#, c-format
msgid ""
"\n"
"\t\tUpdate the taints on one or more nodes.\n"
"\n"
"\t\t* A taint consists of a key, value, and effect. As an argument here, it "
"is expressed as key=value:effect.\n"
"\t\t* The key must begin with a letter or number, and may contain letters, "
"numbers, hyphens, dots, and underscores, up to %[1]d characters.\n"
"\t\t* Optionally, the key can begin with a DNS subdomain prefix and a single "
"'/', like example.com/my-app\n"
"\t\t* The value must begin with a letter or number, and may contain letters, "
"numbers, hyphens, dots, and underscores, up to %[2]d characters.\n"
"\t\t* The effect must be NoSchedule, PreferNoSchedule or NoExecute.\n"
"\t\t* Currently taint can only apply to node."
msgstr ""

#: pkg/kubectl/cmd/apply_view_last_applied.go:46
msgid ""
"\n"
"\t\tView the latest last-applied-configuration annotations by type/name or "
"file.\n"
"\n"
"\t\tThe default output will be printed to stdout in YAML format. One can use "
"-o option\n"
"\t\tto change output format."
msgstr ""

#: pkg/kubectl/cmd/create/create_secret.go:246
msgid ""
"\n"
"\t  # Create a new TLS secret named tls-secret with the given key pair:\n"
"\t  kubectl create secret tls tls-secret --cert=path/to/tls.cert --key=path/"
"to/tls.key"
msgstr ""

#: pkg/kubectl/cmd/create/create_namespace.go:33
msgid ""
"\n"
"\t  # Create a new namespace named my-namespace\n"
"\t  kubectl create namespace my-namespace"
msgstr ""

#: pkg/kubectl/cmd/create/create_secret.go:58
msgid ""
"\n"
"\t  # Create a new secret named my-secret with keys for each file in folder "
"bar\n"
"\t  kubectl create secret generic my-secret --from-file=path/to/bar\n"
"\n"
"\t  # Create a new secret named my-secret with specified keys instead of "
"names on disk\n"
"\t  kubectl create secret generic my-secret --from-file=ssh-privatekey=~/."
"ssh/id_rsa --from-file=ssh-publickey=~/.ssh/id_rsa.pub\n"
"\n"
"\t  # Create a new secret named my-secret with key1=supersecret and "
"key2=topsecret\n"
"\t  kubectl create secret generic my-secret --from-literal=key1=supersecret "
"--from-literal=key2=topsecret\n"
"\n"
"\t  # Create a new secret named my-secret using a combination of a file and "
"a literal\n"
"\t  kubectl create secret generic my-secret --from-file=ssh-privatekey=~/."
"ssh/id_rsa --from-literal=passphrase=topsecret\n"
"\n"
"\t  # Create a new secret named my-secret from an env file\n"
"\t  kubectl create secret generic my-secret --from-env-file=path/to/bar.env"
msgstr ""

#: pkg/kubectl/cmd/create/create_serviceaccount.go:33
msgid ""
"\n"
"\t  # Create a new service account named my-service-account\n"
"\t  kubectl create serviceaccount my-service-account"
msgstr ""

#: pkg/kubectl/cmd/create/create_service.go:270
msgid ""
"\n"
"\t# Create a new ExternalName service named my-ns\n"
"\tkubectl create service externalname my-ns --external-name bar.com"
msgstr ""

#: pkg/kubectl/cmd/create/create_deployment.go:33
msgid ""
"\n"
"\t# Create a new deployment named my-dep that runs the busybox image.\n"
"\tkubectl create deployment my-dep --image=busybox"
msgstr ""

#: pkg/kubectl/cmd/set/set_serviceaccount.go:48
msgid ""
"\n"
"\t# Set Deployment nginx-deployment's ServiceAccount to serviceaccount1\n"
"\tkubectl set serviceaccount deployment nginx-deployment serviceaccount1\n"
"\n"
"\t# Print the result (in yaml format) of updated nginx deployment with "
"serviceaccount from local file, without hitting apiserver\n"
"\tkubectl set sa -f nginx-deployment.yaml serviceaccount1 --local --dry-run -"
"o yaml\n"
"\t"
msgstr ""

#: pkg/kubectl/cmd/create/create_deployment.go:30
msgid ""
"\n"
"\tCreate a deployment with the specified name."
msgstr ""

#: pkg/kubectl/cmd/create/create_service.go:263
msgid ""
"\n"
"\tCreate an ExternalName service with the specified name.\n"
"\n"
"\tExternalName service references to an external DNS address instead of\n"
"\tonly pods, which will allow application authors to reference services\n"
"\tthat exist off platform, on other clusters, or locally."
msgstr ""

#: pkg/kubectl/cmd/help.go:28
msgid ""
"\n"
"\tHelp provides help for any command in the application.\n"
"\tSimply type kubectl help [path to command] for full details."
msgstr ""

#: pkg/kubectl/cmd/set/set_serviceaccount.go:41
msgid ""
"\n"
"\tUpdate ServiceAccount of pod template resources.\n"
"\n"
"\tPossible resources (case insensitive) can be:\n"
"\treplicationcontroller (rc), deployment (deploy), daemonset (ds), job, "
"replicaset (rs), statefulset\n"
"\t"
msgstr ""

#: pkg/kubectl/cmd/portforward.go:60
msgid ""
"\n"
"                Forward one or more local ports to a pod.\n"
"\n"
"                Use resource type/name such as deployment/mydeployment to "
"select a pod. Resource type defaults to 'pod' if omitted.\n"
"\n"
"                If there are multiple pods matching the criteria, a pod will "
"be selected automatically. The\n"
"                forwarding session ends when the selected pod terminates, "
"and rerun of the command is needed\n"
"                to resume forwarding."
msgstr ""

#: pkg/kubectl/cmd/create/create_service.go:51
msgid ""
"\n"
"    # Create a new ClusterIP service named my-cs\n"
"    kubectl create service clusterip my-cs --tcp=5678:8080\n"
"\n"
"    # Create a new ClusterIP service named my-cs (in headless mode)\n"
"    kubectl create service clusterip my-cs --clusterip=\"None\""
msgstr ""

#: pkg/kubectl/cmd/create/create_service.go:199
msgid ""
"\n"
"    # Create a new LoadBalancer service named my-lbs\n"
"    kubectl create service loadbalancer my-lbs --tcp=5678:8080"
msgstr ""

#: pkg/kubectl/cmd/create/create_service.go:130
msgid ""
"\n"
"    # Create a new NodePort service named my-ns\n"
"    kubectl create service nodeport my-ns --tcp=5678:8080"
msgstr ""

#: pkg/kubectl/cmd/clusterinfo_dump.go:98
msgid ""
"\n"
"    # Dump current cluster state to stdout\n"
"    kubectl cluster-info dump\n"
"\n"
"    # Dump current cluster state to /path/to/cluster-state\n"
"    kubectl cluster-info dump --output-directory=/path/to/cluster-state\n"
"\n"
"    # Dump all namespaces to stdout\n"
"    kubectl cluster-info dump --all-namespaces\n"
"\n"
"    # Dump a set of namespaces to /path/to/cluster-state\n"
"    kubectl cluster-info dump --namespaces default,kube-system --output-"
"directory=/path/to/cluster-state"
msgstr ""

#: pkg/kubectl/cmd/annotate.go:90
msgid ""
"\n"
"    # Update pod 'foo' with the annotation 'description' and the value 'my "
"frontend'.\n"
"    # If the same annotation is set multiple times, only the last value will "
"be applied\n"
"    kubectl annotate pods foo description='my frontend'\n"
"\n"
"    # Update a pod identified by type and name in \"pod.json\"\n"
"    kubectl annotate -f pod.json description='my frontend'\n"
"\n"
"    # Update pod 'foo' with the annotation 'description' and the value 'my "
"frontend running nginx', overwriting any existing value.\n"
"    kubectl annotate --overwrite pods foo description='my frontend running "
"nginx'\n"
"\n"
"    # Update all pods in the namespace\n"
"    kubectl annotate pods --all description='my frontend running nginx'\n"
"\n"
"    # Update pod 'foo' only if the resource is unchanged from version 1.\n"
"    kubectl annotate pods foo description='my frontend running nginx' --"
"resource-version=1\n"
"\n"
"    # Update pod 'foo' by removing an annotation named 'description' if it "
"exists.\n"
"    # Does not require the --overwrite flag.\n"
"    kubectl annotate pods foo description-"
msgstr ""

#: pkg/kubectl/cmd/create/create_service.go:48
msgid ""
"\n"
"    Create a ClusterIP service with the specified name."
msgstr ""

#: pkg/kubectl/cmd/create/create_service.go:196
msgid ""
"\n"
"    Create a LoadBalancer service with the specified name."
msgstr ""

#: pkg/kubectl/cmd/create/create_service.go:127
msgid ""
"\n"
"    Create a NodePort service with the specified name."
msgstr ""

#: pkg/kubectl/cmd/clusterinfo_dump.go:89
msgid ""
"\n"
"    Dumps cluster info out suitable for debugging and diagnosing cluster "
"problems.  By default, dumps everything to\n"
"    stdout. You can optionally specify a directory with --output-directory.  "
"If you specify a directory, kubernetes will\n"
"    build a set of files in that directory.  By default only dumps things in "
"the 'kube-system' namespace, but you can\n"
"    switch to a different namespace with the --namespaces flag, or specify --"
"all-namespaces to dump all namespaces.\n"
"\n"
"    The command also dumps the logs of all of the pods in the cluster, these "
"logs are dumped into different directories\n"
"    based on namespace and pod name."
msgstr ""

#: pkg/kubectl/cmd/clusterinfo.go:40
msgid ""
"\n"
"  Display addresses of the master and services with label kubernetes.io/"
"cluster-service=true\n"
"  To further debug and diagnose cluster problems, use 'kubectl cluster-info "
"dump'."
msgstr ""

#: pkg/kubectl/cmd/create/create_quota.go:70
msgid ""
"A comma-delimited set of quota scopes that must all match each object "
"tracked by the quota."
msgstr ""

#: pkg/kubectl/cmd/create/create_quota.go:69
msgid ""
"A comma-delimited set of resource=quantity pairs that define a hard limit."
msgstr ""

#: pkg/kubectl/cmd/create/create_pdb.go:74
msgid ""
"A label selector to use for this budget. Only equality-based selector "
"requirements are supported."
msgstr ""

#: pkg/kubectl/cmd/expose.go:149
msgid ""
"A label selector to use for this service. Only equality-based selector "
"requirements are supported. If empty (the default) infer the selector from "
"the replication controller or replica set.)"
msgstr ""

#: pkg/kubectl/cmd/run.go:192
msgid "A schedule in the Cron format the job should be run with."
msgstr ""

#: pkg/kubectl/cmd/expose.go:154
msgid ""
"Additional external IP address (not managed by Kubernetes) to accept for the "
"service. If this IP is routed to a node, the service can be accessed by this "
"IP in addition to its generated service IP."
msgstr ""

#: pkg/kubectl/cmd/expose.go:155 pkg/kubectl/cmd/run.go:174
msgid ""
"An inline JSON override for the generated object. If this is non-empty, it "
"is used to override the generated object. Requires that the object supply a "
"valid apiVersion field."
msgstr ""

#: pkg/kubectl/cmd/run.go:190
msgid ""
"An inline JSON override for the generated service object. If this is non-"
"empty, it is used to override the generated object. Requires that the object "
"supply a valid apiVersion field.  Only used if --expose is true."
msgstr ""

# auto translated by TM merge from project: kubernetes-kubectl, version: master, DocId: template
#: pkg/kubectl/cmd/apply.go:152
msgid "Apply a configuration to a resource by filename or stdin"
msgstr "구성을 파일 이름 또는 stdin에 의한 자원에 적용합니다"

#: pkg/kubectl/cmd/certificates.go:113
msgid "Approve a certificate signing request"
msgstr ""

#: pkg/kubectl/cmd/create/create_service.go:91
msgid ""
"Assign your own ClusterIP or set to 'None' for a 'headless' service (no "
"loadbalancing)."
msgstr ""

#: pkg/kubectl/cmd/attach.go:102
msgid "Attach to a running container"
msgstr ""

#: pkg/kubectl/cmd/autoscale.go:103
msgid "Auto-scale a Deployment, ReplicaSet, or ReplicationController"
msgstr ""

#: pkg/kubectl/cmd/expose.go:158
msgid ""
"ClusterIP to be assigned to the service. Leave empty to auto-allocate, or "
"set to 'None' to create a headless service."
msgstr ""

#: pkg/kubectl/cmd/create/create_clusterrolebinding.go:65
msgid "ClusterRole this ClusterRoleBinding should reference"
msgstr ""

#: pkg/kubectl/cmd/create/create_rolebinding.go:65
msgid "ClusterRole this RoleBinding should reference"
msgstr ""

#: pkg/kubectl/cmd/alpha.go:32
msgid "Commands for features in alpha"
msgstr ""

#: pkg/kubectl/cmd/rollingupdate.go:155
msgid ""
"Container name which will have its image upgraded. Only relevant when --"
"image is specified, ignored otherwise. Required when using --image on a "
"multi-container pod"
msgstr ""

#: pkg/kubectl/cmd/convert.go:94
msgid "Convert config files between different API versions"
msgstr ""

#: pkg/kubectl/cmd/cp.go:91
msgid "Copy files and directories to and from containers."
msgstr ""

#: pkg/kubectl/cmd/create/create_service.go:76
msgid "Create a ClusterIP service."
msgstr ""

#: pkg/kubectl/cmd/create/create_clusterrolebinding.go:51
msgid "Create a ClusterRoleBinding for a particular ClusterRole"
msgstr ""

#: pkg/kubectl/cmd/create/create_service.go:217
msgid "Create a LoadBalancer service."
msgstr ""

#: pkg/kubectl/cmd/create/create_service.go:148
msgid "Create a NodePort service."
msgstr ""

#: pkg/kubectl/cmd/create/create_rolebinding.go:51
msgid "Create a RoleBinding for a particular Role or ClusterRole"
msgstr ""

#: pkg/kubectl/cmd/create/create_secret.go:264
msgid "Create a TLS secret"
msgstr ""

#: pkg/kubectl/cmd/create/create_configmap.go:73
msgid "Create a configmap from a local file, directory or literal value"
msgstr ""

#: pkg/kubectl/cmd/create/create_deployment.go:54
msgid "Create a deployment with the specified name."
msgstr ""

#: pkg/kubectl/cmd/create/create_namespace.go:52
msgid "Create a namespace with the specified name"
msgstr ""

#: pkg/kubectl/cmd/create/create_pdb.go:57
msgid "Create a pod disruption budget with the specified name."
msgstr ""

#: pkg/kubectl/cmd/create/create_priorityclass.go:55
msgid "Create a priorityclass with the specified name."
msgstr ""

#: pkg/kubectl/cmd/create/create_quota.go:55
msgid "Create a quota with the specified name."
msgstr ""

#: pkg/kubectl/cmd/create/create.go:98
msgid "Create a resource from a file or from stdin."
msgstr ""

#: pkg/kubectl/cmd/create/create_secret.go:173
msgid "Create a secret for use with a Docker registry"
msgstr ""

#: pkg/kubectl/cmd/create/create_secret.go:88
msgid "Create a secret from a local file, directory or literal value"
msgstr ""

#: pkg/kubectl/cmd/create/create_secret.go:33
msgid "Create a secret using specified subcommand"
msgstr ""

#: pkg/kubectl/cmd/create/create_serviceaccount.go:52
msgid "Create a service account with the specified name"
msgstr ""

#: pkg/kubectl/cmd/create/create_service.go:35
msgid "Create a service using specified subcommand."
msgstr ""

#: pkg/kubectl/cmd/create/create_service.go:288
msgid "Create an ExternalName service."
msgstr ""

#: pkg/kubectl/cmd/delete.go:123
msgid ""
"Delete resources by filenames, stdin, resources and names, or by resources "
"and label selector"
msgstr ""

# auto translated by TM merge from project: kubernetes-kubectl, version: master, DocId: template
#: pkg/kubectl/cmd/config/delete_cluster.go:40
msgid "Delete the specified cluster from the kubeconfig"
msgstr "kubeconfig에서 지정된 클러스터를 삭제합니다"

# auto translated by TM merge from project: kubernetes-kubectl, version: master, DocId: template
#: pkg/kubectl/cmd/config/delete_context.go:40
msgid "Delete the specified context from the kubeconfig"
msgstr "kubeconfig에서 지정된 컨텍스트를 삭제합니다"

#: pkg/kubectl/cmd/certificates.go:170
msgid "Deny a certificate signing request"
msgstr ""

# auto translated by TM merge from project: kubernetes-kubectl, version: master, DocId: template
#: pkg/kubectl/cmd/config/get_contexts.go:72
msgid "Describe one or many contexts"
msgstr "하나 또는 여러 컨텍스트를 설명합니다"

#: pkg/kubectl/cmd/diff.go:116
msgid "Diff different versions of configurations"
msgstr ""

#: pkg/kubectl/cmd/top_node.go:104
msgid "Display Resource (CPU/Memory/Storage) usage of nodes"
msgstr ""

#: pkg/kubectl/cmd/top_pod.go:93
msgid "Display Resource (CPU/Memory/Storage) usage of pods"
msgstr ""

#: pkg/kubectl/cmd/top.go:45
msgid "Display Resource (CPU/Memory/Storage) usage."
msgstr ""

#: pkg/kubectl/cmd/clusterinfo.go:65
msgid "Display cluster info"
msgstr ""

# auto translated by TM merge from project: kubernetes-kubectl, version: master, DocId: template
#: pkg/kubectl/cmd/config/get_clusters.go:41
msgid "Display clusters defined in the kubeconfig"
msgstr "kubeconfig에 정의된 클러스터를 표시합니다"

# auto translated by TM merge from project: kubernetes-kubectl, version: master, DocId: template
#: pkg/kubectl/cmd/config/view.go:81
msgid "Display merged kubeconfig settings or a specified kubeconfig file"
msgstr "병합된 kubeconfig 설정 또는 지정된 kubeconfig 파일을 표시합니다"

#: pkg/kubectl/cmd/get/get.go:155
msgid "Display one or many resources"
msgstr ""

# auto translated by TM merge from project: kubernetes-kubectl, version: master, DocId: template
#: pkg/kubectl/cmd/config/current_context.go:49
msgid "Displays the current-context"
msgstr "현재-컨텍스트를 표시합니다"

# auto translated by TM merge from project: kubernetes-kubectl, version: master, DocId: template
#: pkg/kubectl/cmd/explain.go:79
msgid "Documentation of resources"
msgstr "자원에 대한 문서"

#: pkg/kubectl/cmd/drain.go:213
msgid "Drain node in preparation for maintenance"
msgstr ""

#: pkg/kubectl/cmd/clusterinfo_dump.go:70
msgid "Dump lots of relevant info for debugging and diagnosis"
msgstr ""

#: pkg/kubectl/cmd/edit.go:77
msgid "Edit a resource on the server"
msgstr ""

# auto translated by TM merge from project: kubernetes-kubectl, version: master, DocId: template
#: pkg/kubectl/cmd/create/create_secret.go:191
msgid "Email for Docker registry"
msgstr "Docker 레지스트리를 위한 이메일"

# auto translated by TM merge from project: kubernetes-kubectl, version: master, DocId: template
#: pkg/kubectl/cmd/exec.go:78
msgid "Execute a command in a container"
msgstr "컨테이너에서 명령어를 실행합니다"

#: pkg/kubectl/cmd/rollingupdate.go:156
msgid ""
"Explicit policy for when to pull container images. Required when --image is "
"same as existing image, ignored otherwise."
msgstr ""

#: pkg/kubectl/cmd/create/create_service.go:303
msgid "External name of service"
msgstr ""

#: pkg/kubectl/cmd/portforward.go:100
msgid "Forward one or more local ports to a pod"
msgstr ""

#: pkg/kubectl/cmd/help.go:36
msgid "Help about any command"
msgstr ""

#: pkg/kubectl/cmd/expose.go:148
msgid ""
"IP to assign to the LoadBalancer. If empty, an ephemeral IP will be created "
"and used (cloud-provider specific)."
msgstr ""

#: pkg/kubectl/cmd/expose.go:157
msgid ""
"If non-empty, set the session affinity for the service to this; legal "
"values: 'None', 'ClientIP'"
msgstr ""

#: pkg/kubectl/cmd/annotate.go:148
msgid ""
"If non-empty, the annotation update will only succeed if this is the current "
"resource-version for the object. Only valid when specifying a single "
"resource."
msgstr ""

#: pkg/kubectl/cmd/label.go:149
msgid ""
"If non-empty, the labels update will only succeed if this is the current "
"resource-version for the object. Only valid when specifying a single "
"resource."
msgstr ""

#: pkg/kubectl/cmd/rollingupdate.go:153
msgid ""
"Image to use for upgrading the replication controller. Must be distinct from "
"the existing image (either new image or new image tag).  Can not be used "
"with --filename/-f"
msgstr ""

#: pkg/kubectl/cmd/rollout/rollout.go:53
msgid "Manage the rollout of a resource"
msgstr ""

#: pkg/kubectl/cmd/drain.go:150
msgid "Mark node as schedulable"
msgstr ""

#: pkg/kubectl/cmd/drain.go:119
msgid "Mark node as unschedulable"
msgstr ""

#: pkg/kubectl/cmd/rollout/rollout_pause.go:80
msgid "Mark the provided resource as paused"
msgstr ""

#: pkg/kubectl/cmd/certificates.go:43
msgid "Modify certificate resources."
msgstr ""

#: pkg/kubectl/cmd/config/config.go:42
msgid "Modify kubeconfig files"
msgstr ""

#: pkg/kubectl/cmd/expose.go:153
msgid ""
"Name or number for the port on the container that the service should direct "
"traffic to. Optional."
msgstr ""

#: pkg/kubectl/cmd/alpha.go:45
msgid "No alpha commands are available in this version of kubectl"
msgstr ""

#: pkg/kubectl/cmd/logs.go:145
msgid ""
"Only return logs after a specific date (RFC3339). Defaults to all logs. Only "
"one of since-time / since may be used."
msgstr ""

#: pkg/kubectl/cmd/completion.go:104
msgid "Output shell completion code for the specified shell (bash or zsh)"
msgstr ""

#: pkg/kubectl/cmd/convert.go:104
msgid ""
"Output the formatted object with the given group version (for ex: "
"'extensions/v1beta1')."
msgstr ""

#: pkg/kubectl/cmd/create/create_secret.go:189
msgid "Password for Docker registry authentication"
msgstr ""

#: pkg/kubectl/cmd/create/create_secret.go:278
msgid "Path to PEM encoded public key certificate."
msgstr ""

#: pkg/kubectl/cmd/create/create_secret.go:279
msgid "Path to private key associated with given certificate."
msgstr ""

#: pkg/kubectl/cmd/scale.go:130
msgid ""
"Precondition for resource version. Requires that the current resource "
"version match this value in order to scale."
msgstr ""

#: pkg/kubectl/cmd/version.go:68
msgid "Print the client and server version information"
msgstr ""

#: pkg/kubectl/cmd/options.go:38
msgid "Print the list of flags inherited by all commands"
msgstr ""

#: pkg/kubectl/cmd/logs.go:124
msgid "Print the logs for a container in a pod"
msgstr ""

#: pkg/kubectl/cmd/plugin.go:56
msgid "Provides utilities for interacting with plugins."
msgstr ""

#: pkg/kubectl/cmd/replace.go:106
msgid "Replace a resource by filename or stdin"
msgstr ""

#: pkg/kubectl/cmd/rollout/rollout_resume.go:83
msgid "Resume a paused resource"
msgstr ""

#: pkg/kubectl/cmd/create/create_rolebinding.go:66
msgid "Role this RoleBinding should reference"
msgstr ""

#: pkg/kubectl/cmd/run.go:147
msgid "Run a particular image on the cluster"
msgstr ""

#: pkg/kubectl/cmd/proxy.go:77
msgid "Run a proxy to the Kubernetes API server"
msgstr ""

#: pkg/kubectl/cmd/create/create_secret.go:192
msgid "Server location for Docker registry"
msgstr ""

#: pkg/kubectl/cmd/scale.go:114
msgid ""
"Set a new size for a Deployment, ReplicaSet, Replication Controller, or Job"
msgstr ""

#: pkg/kubectl/cmd/set/set.go:38
msgid "Set specific features on objects"
msgstr ""

#: pkg/kubectl/cmd/apply_set_last_applied.go:96
msgid ""
"Set the last-applied-configuration annotation on a live object to match the "
"contents of a file."
msgstr ""

#: pkg/kubectl/cmd/set/set_selector.go:100
msgid "Set the selector on a resource"
msgstr ""

# auto translated by TM merge from project: kubernetes-kubectl, version: master, DocId: template
#: pkg/kubectl/cmd/config/create_cluster.go:68
msgid "Sets a cluster entry in kubeconfig"
msgstr "kubeconfig에서 클러스터 항목을 설정합니다"

# auto translated by TM merge from project: kubernetes-kubectl, version: master, DocId: template
#: pkg/kubectl/cmd/config/create_context.go:60
msgid "Sets a context entry in kubeconfig"
msgstr "kubeconfig에서 컨텍스트 항목을 설정합니다"

# auto translated by TM merge from project: kubernetes-kubectl, version: master, DocId: template
#: pkg/kubectl/cmd/config/create_authinfo.go:105
msgid "Sets a user entry in kubeconfig"
msgstr "kubeconfig에서 사용자 항목을 설정합니다"

# auto translated by TM merge from project: kubernetes-kubectl, version: master, DocId: template
#: pkg/kubectl/cmd/config/set.go:56
msgid "Sets an individual value in a kubeconfig file"
msgstr "kubeconfig 파일에서 단일값을 설정합니다"

#: pkg/kubectl/cmd/config/use_context.go:50
msgid "Sets the current-context in a kubeconfig file"
msgstr ""

#: pkg/kubectl/cmd/describe.go:106
msgid "Show details of a specific resource or group of resources"
msgstr ""

#: pkg/kubectl/cmd/rollout/rollout_status.go:100
msgid "Show the status of the rollout"
msgstr ""

#: pkg/kubectl/cmd/expose.go:151
msgid "Synonym for --target-port"
msgstr ""

#: pkg/kubectl/cmd/expose.go:131
msgid ""
"Take a replication controller, service, deployment or pod and expose it as a "
"new Kubernetes Service"
msgstr ""

# auto translated by TM merge from project: kubernetes-kubectl, version: master, DocId: template
#: pkg/kubectl/cmd/run.go:169
msgid "The image for the container to run."
msgstr "실행할 컨테이너에 대한 이미지입니다."

#: pkg/kubectl/cmd/run.go:171
msgid ""
"The image pull policy for the container. If left empty, this value will not "
"be specified by the client and defaulted by the server"
msgstr ""

#: pkg/kubectl/cmd/rollingupdate.go:154
msgid ""
"The key to use to differentiate between two different controllers, default "
"'deployment'.  Only relevant when --image is specified, ignored otherwise"
msgstr ""

#: pkg/kubectl/cmd/create/create_pdb.go:73
msgid ""
"The maximum number or percentage of unavailable pods this budget requires."
msgstr ""

#: pkg/kubectl/cmd/create/create_pdb.go:72
msgid ""
"The minimum number or percentage of available pods this budget requires."
msgstr ""

#: pkg/kubectl/cmd/expose.go:156
msgid "The name for the newly created object."
msgstr ""

#: pkg/kubectl/cmd/autoscale.go:123
msgid ""
"The name for the newly created object. If not specified, the name of the "
"input resource will be used."
msgstr ""

#: pkg/kubectl/cmd/run.go:168
msgid ""
"The name of the API generator to use, see http://kubernetes.io/docs/user-"
"guide/kubectl-conventions/#generators for a list."
msgstr ""

#: pkg/kubectl/cmd/autoscale.go:118
msgid ""
"The name of the API generator to use. Currently there is only 1 generator."
msgstr ""

#: pkg/kubectl/cmd/expose.go:144
msgid ""
"The name of the API generator to use. There are 2 generators: 'service/v1' "
"and 'service/v2'. The only difference between them is that service port in "
"v1 is named 'default', while it is left unnamed in v2. Default is 'service/"
"v2'."
msgstr ""

#: pkg/kubectl/cmd/run.go:189
msgid ""
"The name of the generator to use for creating a service.  Only used if --"
"expose is true"
msgstr ""

#: pkg/kubectl/cmd/expose.go:145
msgid "The network protocol for the service to be created. Default is 'TCP'."
msgstr ""

#: pkg/kubectl/cmd/expose.go:146
msgid ""
"The port that the service should serve on. Copied from the resource being "
"exposed, if unspecified"
msgstr ""

#: pkg/kubectl/cmd/run.go:177
msgid ""
"The port that this container exposes.  If --expose is true, this is also the "
"port used by the service that is created."
msgstr ""

#: pkg/kubectl/cmd/run.go:187
msgid ""
"The resource requirement limits for this container.  For example, 'cpu=200m,"
"memory=512Mi'.  Note that server side components may assign limits depending "
"on the server configuration, such as limit ranges."
msgstr ""

#: pkg/kubectl/cmd/run.go:186
msgid ""
"The resource requirement requests for this container.  For example, "
"'cpu=100m,memory=256Mi'.  Note that server side components may assign "
"requests depending on the server configuration, such as limit ranges."
msgstr ""

#: pkg/kubectl/cmd/run.go:184
msgid ""
"The restart policy for this Pod.  Legal values [Always, OnFailure, Never].  "
"If set to 'Always' a deployment is created, if set to 'OnFailure' a job is "
"created, if set to 'Never', a regular pod is created. For the latter two --"
"replicas must be 1.  Default 'Always', for CronJobs `Never`."
msgstr ""

# auto translated by TM merge from project: kubernetes-kubectl, version: master, DocId: template
#: pkg/kubectl/cmd/create/create_secret.go:105
msgid "The type of secret to create"
msgstr "생성해야 하는 시크릿 유형"

#: pkg/kubectl/cmd/alpha.go:33
msgid ""
"These commands correspond to alpha features that are not enabled in "
"Kubernetes clusters by default."
msgstr ""

#: pkg/kubectl/cmd/expose.go:147
msgid ""
"Type for this service: ClusterIP, NodePort, LoadBalancer, or ExternalName. "
"Default is 'ClusterIP'."
msgstr ""

# auto translated by TM merge from project: kubernetes-kubectl, version: master, DocId: template
#: pkg/kubectl/cmd/rollout/rollout_undo.go:83
msgid "Undo a previous rollout"
msgstr "이전 롤아웃을 되돌립니다"

# auto translated by TM merge from project: kubernetes-kubectl, version: master, DocId: template
#: pkg/kubectl/cmd/config/unset.go:58
msgid "Unsets an individual value in a kubeconfig file"
msgstr "kubeconfig 파일에서 단일값 설정을 해제합니다"

#: pkg/kubectl/cmd/set/set_serviceaccount.go:97
msgid "Update ServiceAccount of a resource"
msgstr ""

#: pkg/kubectl/cmd/set/set_subject.go:95
msgid ""
"Update User, Group or ServiceAccount in a RoleBinding/ClusterRoleBinding"
msgstr ""

# auto translated by TM merge from project: kubernetes-kubectl, version: master, DocId: template
#: pkg/kubectl/cmd/patch.go:112
msgid "Update field(s) of a resource using strategic merge patch"
msgstr "전략적인 머지 패치를 사용하여 자원에 대한 필드를 업데이트합니다"

# auto translated by TM merge from project: kubernetes-kubectl, version: master, DocId: template
#: pkg/kubectl/cmd/set/set_image.go:106
msgid "Update image of a pod template"
msgstr "pod 템플릿에 대한 이미지를 업데이트합니다"

# auto translated by TM merge from project: kubernetes-kubectl, version: master, DocId: template
#: pkg/kubectl/cmd/set/set_resources.go:113
msgid "Update resource requests/limits on objects with pod templates"
msgstr "pod 템플릿으로 개체에 대한 자원 요청/제한을 업데이트합니다"

# auto translated by TM merge from project: kubernetes-kubectl, version: master, DocId: template
#: pkg/kubectl/cmd/annotate.go:128
msgid "Update the annotations on a resource"
msgstr "자원에 대한 annotation을 업데이트합니다"

# auto translated by TM merge from project: kubernetes-kubectl, version: master, DocId: template
#: pkg/kubectl/cmd/label.go:130
msgid "Update the labels on a resource"
msgstr "자원에 대한 라벨을 업데이트합니다"

# auto translated by TM merge from project: kubernetes-kubectl, version: master, DocId: template
#: pkg/kubectl/cmd/taint.go:98
msgid "Update the taints on one or more nodes"
msgstr "하나 이상의 노드에서 taint를 업데이트합니다"

# auto translated by TM merge from project: kubernetes-kubectl, version: master, DocId: template
#: pkg/kubectl/cmd/create/create_secret.go:187
msgid "Username for Docker registry authentication"
msgstr "Docker 레지스트리 인증을 위한 사용자 이름"

#: pkg/kubectl/cmd/apply_view_last_applied.go:74
msgid "View latest last-applied-configuration annotations of a resource/object"
msgstr "자원/개체에 대해 가장 마지막으로 적용된 구성 annocation을 봅니다"

#: pkg/kubectl/cmd/rollout/rollout_history.go:79
msgid "View rollout history"
msgstr "롤아웃 내역 보기"

#: pkg/kubectl/cmd/clusterinfo_dump.go:81
msgid ""
"Where to output the files.  If empty or '-' uses stdout, otherwise creates a "
"directory hierarchy in that directory"
msgstr ""
"파일을 출력하는 위치. 비어 있거나 '-' 를 사용하면 stdout이며, 그렇지 않으면 "
"대상 디렉토리 안에 디렉토리 계층을 생성합니다"

#: pkg/kubectl/cmd/create/create_priorityclass.go:72
msgid ""
"description is an arbitrary string that usually provides guidelines on when "
"this priority class should be used."
msgstr ""

#: pkg/kubectl/cmd/run_test.go:89
msgid "dummy restart flag)"
msgstr "더미 재시작 플래그)"

#: pkg/kubectl/cmd/create/create_priorityclass.go:71
msgid ""
"global-default specifies whether this PriorityClass should be considered as "
"the default priority."
msgstr ""

#: pkg/kubectl/cmd/cmd.go:366
msgid "kubectl controls the Kubernetes cluster manager"
msgstr "kubectl은 Kubernetes 클러스터 관리자를 제어합니다"

#: pkg/kubectl/cmd/create/create_priorityclass.go:70
msgid "the value of this priority class."
msgstr ""
