/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "k8s.io/api/core/v1"
)

// PortStatusApplyConfiguration represents an declarative configuration of the PortStatus type for use
// with apply.
type PortStatusApplyConfiguration struct {
	Port     *int32       `json:"port,omitempty"`
	Protocol *v1.Protocol `json:"protocol,omitempty"`
	Error    *string      `json:"error,omitempty"`
}

// PortStatusApplyConfiguration constructs an declarative configuration of the PortStatus type for use with
// apply.
func PortStatus() *PortStatusApplyConfiguration {
	return &PortStatusApplyConfiguration{}
}

// SetPort sets the Port field in the declarative configuration to the given value.
func (b *PortStatusApplyConfiguration) SetPort(value int32) *PortStatusApplyConfiguration {
	b.Port = &value
	return b
}

// RemovePort removes the Port field from the declarative configuration.
func (b *PortStatusApplyConfiguration) RemovePort() *PortStatusApplyConfiguration {
	b.Port = nil
	return b
}

// GetPort gets the Port field from the declarative configuration.
func (b *PortStatusApplyConfiguration) GetPort() (value int32, ok bool) {
	if v := b.Port; v != nil {
		return *v, true
	}
	return value, false
}

// SetProtocol sets the Protocol field in the declarative configuration to the given value.
func (b *PortStatusApplyConfiguration) SetProtocol(value v1.Protocol) *PortStatusApplyConfiguration {
	b.Protocol = &value
	return b
}

// RemoveProtocol removes the Protocol field from the declarative configuration.
func (b *PortStatusApplyConfiguration) RemoveProtocol() *PortStatusApplyConfiguration {
	b.Protocol = nil
	return b
}

// GetProtocol gets the Protocol field from the declarative configuration.
func (b *PortStatusApplyConfiguration) GetProtocol() (value v1.Protocol, ok bool) {
	if v := b.Protocol; v != nil {
		return *v, true
	}
	return value, false
}

// SetError sets the Error field in the declarative configuration to the given value.
func (b *PortStatusApplyConfiguration) SetError(value string) *PortStatusApplyConfiguration {
	b.Error = &value
	return b
}

// RemoveError removes the Error field from the declarative configuration.
func (b *PortStatusApplyConfiguration) RemoveError() *PortStatusApplyConfiguration {
	b.Error = nil
	return b
}

// GetError gets the Error field from the declarative configuration.
func (b *PortStatusApplyConfiguration) GetError() (value string, ok bool) {
	if v := b.Error; v != nil {
		return *v, true
	}
	return value, false
}

// PortStatusList represents a listAlias of PortStatusApplyConfiguration.
type PortStatusList []*PortStatusApplyConfiguration

// PortStatusList represents a map of PortStatusApplyConfiguration.
type PortStatusMap map[string]PortStatusApplyConfiguration
