{
  "name": "gulp-ng-constant",
  "version": "0.3.0",
  "description": "Gulp plugin for dynamic generation of angular constant modules.",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/guzart/gulp-ng-constant.git"
  },
  "keywords": [
    "gulp",
    "angularjs",
    "constant",
    "gulpplugin"
  ],
  "author": {
    "name": "Arturo Guzman"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/guzart/gulp-ng-constant/issues"
  },
  "homepage": "https://github.com/guzart/gulp-ng-constant",
  "scripts": {
    "test": "node_modules/jasmine-node/bin/jasmine-node spec/gulpNgConstantSpec.js"
  },
  "dependencies": {
    "lodash": "^2.4.1",
    "gulp-util": "^2.2.14",
    "through2": "^0.4.1"
  },
  "devDependencies": {
    "jasmine-node": "^1.14.5"
  },
  "readme": "gulp-ng-constant\n================\n\n[![Build Status](https://travis-ci.org/guzart/gulp-ng-constant.svg)](https://travis-ci.org/guzart/gulp-ng-constant)\n\n## Information\n\n<table>\n<tr>\n<td>Package</td><td>gulp-ng-constant</td>\n</tr>\n<tr>\n<td>Description</td>\n<td>Plugin for dynamic generation of angular constant modules.<br>\nBased of <a href=\"https://github.com/werk85/grunt-ng-constant\">grunt-ng-constant</a></td>\n</tr>\n<tr>\n<td>Node Version</td>\n<td>>= 0.10</td>\n</tr>\n</table>\n\n## Index\n\n1. [Usage](#usage)\n  * [Configuration in gulpfile.js](#configuration-in-gulpfilejs)\n  * [Configuration in config.json](#configuration-in-configjson)\n1. [Options](#options)\n  * [name](#optionsname)\n  * [~~dest~~](#optionsdest)\n  * [stream](#optionsstream)\n  * [constants](#optionsconstants)\n  * [deps](#optionsdeps)\n  * [wrap](#optionswrap)\n  * [space](#optionsspace)\n  * [template](#optionstemplate)\n  * [templatePath](#optionstemplatepath)\n1. [Examples](#examples)\n  * [Multiple Environments](#multiple-environments)\n  * [Stream](#stream)\n1. [Special Thanks](#special-thanks)\n\n## Usage\n\n### Configuration in `gulpfile.js`\n\n_**gulpfile.js**_\n\n```javascript\nvar ngConstant = require('gulp-ng-constant');\n\ngulp.task('config', function () {\n  gulp.src('app/config.json')\n    .pipe(ngConstant({\n      name: 'my.module.config',\n      deps: ['ngAnimate'],\n      constants: { myPropCnt: 'hola!' },\n      wrap: 'amd',\n    }))\n    // Writes config.js to dist/ folder\n    .pipe(gulp.dest('dist'));\n});\n```\n\n_**app/config.json**_\n```json\n{\n  \"myFirstCnt\": true,\n  \"mySecondCnt\": { \"hello\": \"world\" }\n}\n```\n\n_**dist/config.js**_ _(output)_\n\n```javascript\ndefine([\"require\", \"exports\"], function(require, exports) {\n  return angular.module(\"my.module.config\", [\"ngAnimate\"])\n    .constant(\"myFirstCnt\", true)\n    .constant(\"mySecondCnt\", { \"hello\": \"world\" })\n    .constant(\"myPropCnt\", \"hola!\");\n});\n```\n\n### Configuration in `config.json`\n\n_**gulpfile.js**_\n\n```javascript\nvar ngConstant = require('gulp-ng-constant');\n\ngulp.task('config', function () {\n  gulp.src('app/config.json')\n    .pipe(ngConstant())\n    // Writes config.js to dist/ folder\n    .pipe(gulp.dest('dist'));\n});\n```\n\n\n_**app/config.json**_\n\n```json\n{\n  \"name\": \"my.module.config\",\n  \"deps\": [\"ngAnimate\"],\n  \"wrap\": \"commonjs\",\n  \"constants\": {\n    \"myFirstCnt\": true,\n    \"mySecondCnt\": { \"hello\": \"world\" }\n  }\n}\n```\n\n_**dist/config.js**_ _(output)_\n\n```javascript\nmodule.exports = angular.module(\"my.module.config\", [\"ngAnimate\"])\n    .constant(\"myFirstCnt\", true)\n    .constant(\"mySecondCnt\", { \"hello\": \"world\" })\n    .constant(\"myPropCnt\", \"hola!\");\n```\n\n## Options\n\n#### options.name\n\nType: `string`  \nDefault: `undefined`  \nOverrides: `json.name`  \n\nThe module name.\nThis property will override any `name` property defined in the input `json` file.\n\n#### ~~options.dest~~\n\n~~Type: `string`~~  \n~~Default: `undefined`~~  \n_optional_\n\n~~The path where the generated constant module should be saved.~~  \n**DEPRECATED**: To change the vinyl file name use a plugin such as [gulp-rename](https://www.npmjs.com/package/gulp-rename).\n\n#### options.stream\n\nType: `boolean`  \nDefault: `false`  \n_optional_\n\nIf true it will return a gulp stream, which can then be piped other gulp plugins\n([Example](#stream)).\n\n#### options.constants\n\nType: `Object | string`  \nDefault: `undefined`  \nExends/Overrides: `json.constants`  \n\nConstants to defined in the module.\nCan be a `JSON` string or an `Object`.\nThis property extends the one defined in the input `json` file. If there are\nproperties with the same name, this properties will override the ones from the\ninput `json` file.\n\n#### options.deps\n\nType: `array<string>|boolean`  \nDefault: `[]`  \nOverrides: `json.deps`  \n_optional_\n\nAn array that specifies the default dependencies a module should have. To add the constants to an existing module, you can set it to `false`.\nThis property will override any `deps` property defined in the input `json` file.\n\n#### options.wrap\n\nType: `boolean|string`  \nDefault: `false`  \nAvailable: `['amd', 'commonjs']`  \n_optional_\n\nA boolean to active or deactive the automatic wrapping.\nA string who will wrap the result of file, use the\n`<%= __ngModule %>` variable to indicate where to put the generated\nmodule content.\nA string with 'amd' that wraps the module as an AMD module,\ncompatible with RequireJS\n\n#### options.space\n\nType: `string`  \nDefault: `'\\t'`  \n_optional_\n\nA string that defines how the JSON.stringify method will prettify your code.\n\n#### options.template\n\nType: `string`  \nDefault: _content of [tpls/constant.tpl.ejs](https://github.com/guzart/gulp-ng-constant/blob/master/tpls/constant.tpl.ejs)_  \n_optional_\n\nEJS template to apply when creating the output configuration file. The following variables\nare passed to the template during render:\n\n  * `moduleName`: the module name (`string`)\n  * `deps`: the module dependencies (`array<string>`)\n  * `constants`: the module constants (`array<contantObj>`)\n    * where a `constantObj` is an object with a `name` and a `value`, both `strings`.\n\n#### options.templatePath\n\nType: `string`  \nDefault: `'tpls/constant.tpl.ejs'`  \n_optional_\n\nLocation of a custom template file for creating the output configuration file. Defaults to the provided constants template file if none provided.\n\n## Examples\n\n### Multiple Environments\n\n_**config.json**_\n```json\n{\n  \"development\": { \"greeting\": \"Sup!\" },\n  \"production\": { \"greeting\": \"Hello\" }\n}\n```\n\n_**gulpfile.js**_\n```javascript\nvar gulp = require('gulp');\nvar ngConstant = require('gulp-ng-constant');\n\ngulp.task('constants', function () {\n  var myConfig = require('./config.json');\n  var envConfig = myConfig[process.env];\n  return ngConstant({\n      constants: envConfig,\n      stream: true\n    })\n    .pipe(gulp.dest('dist'));\n});\n\n```\n\n### Stream\n\n```javascript\nvar gulp = require('gulp');\nvar ngConstant = require('gulp-ng-constant');\nvar uglify = require('gulp-uglify');\n\ngulp.task('constants', function () {\n  var constants = { hello: 'world' };\n  return ngConstant({\n      constants: constants,\n      stream: true\n    })\n    .pipe(uglify())  \n    .pipe(gulp.dest('dist'));\n});\n```\n\n## Special Thanks\n\n@alexeygolev, @sabudaye, @ojacquemart, @lukehorvat, @rimian, @andidev\n",
  "readmeFilename": "README.md",
  "_id": "gulp-ng-constant@0.3.0",
  "_from": "gulp-ng-constant@^0.3.0"
}
