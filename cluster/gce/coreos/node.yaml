#cloud-config

coreos:
  units:
    - name: kube-env.service
      command: start
      content: |
        [Unit]
        Description=Fetch kubernetes-node-environment
        Requires=network-online.target
        After=network-online.target
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStartPre=/usr/bin/curl --fail --silent --show-error \
        -H "X-Google-Metadata-Request: True" \
        -o /etc/kube-env.yaml \
        http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-env
        # Transform the yaml to env file.
        ExecStart=/usr/bin/sed -e "s/: '/=/;s/'$//" /etc/kube-env.yaml > /etc/kube-env

    - name: kubernetes-install-rkt.service
      command: start
      content: |
        [Unit]
        Description=Fetch rkt
        Documentation=http://github.com/coreos/rkt
        Requires=network-online.target
        After=network-online.target
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        EnvironmentFile=/etc/kube-env
        ExecStartPre=/usr/bin/mkdir -p /etc/rkt
        ExecStartPre=/usr/bin/mkdir -p /opt/rkt/release
        ExecStartPre=/usr/bin/curl --location --create-dirs --output /opt/rkt/release/rkt.tar.gz https://github.com/coreos/rkt/releases/download/v${RKT_VERSION}/rkt-v${RKT_VERSION}.tar.gz
        ExecStart=/usr/bin/tar xf /opt/rkt/release/rkt.tar.gz -C /opt --overwrite

    - name: kubernetes-install-node.service
      command: start
      content: |
        [Unit]
        Description=Install Kubernetes Server
        Requires=network-online.target
        After=network-online.target
        Requires=kube-env.service
        After=kube-env.service
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        EnvironmentFile=/etc/kube-env
        ExecStartPre=/usr/bin/mkdir -p /opt/kubernetes/pkg
        ExecStartPre=/usr/bin/curl --location --create-dirs --output /opt/kubernetes/pkg/kubernetes-server-linux-amd64.tar.gz ${SERVER_BINARY_TAR_URL}
        ExecStart=/usr/bin/tar xf /opt/kubernetes/pkg/kubernetes-server-linux-amd64.tar.gz -C /opt --overwrite

    - name: kubernetes-configure-node.service
      command: start
      content: |
        [Unit]
        Description=Configure Node For Kubernetes service
        Requires=kubernetes-install-node.service
        After=kubernetes-install-node.service
        Requires=kubernetes-install-rkt.service
        After=kubernetes-install-rkt.service
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        EnvironmentFile=/etc/kube-env
        ExecStartPre=/usr/bin/curl --fail --silent --show-error \
        -H "X-Google-Metadata-Request: True" \
        -o /run/configure-node.sh \
        http://metadata.google.internal/computeMetadata/v1/instance/attributes/configure-node
        ExecStartPre=/usr/bin/chmod 0755 /run/configure-node.sh
        ExecStart=/run/configure-node.sh

    - name: kubelet.service
      command: start
      content: |
        [Unit]
        Description=Run Kubelet service
        Requires=kubernetes-configure-node.service
        After=kubernetes-configure-node.service
        [Service]
        EnvironmentFile=/etc/kube-env
        ExecStart=/opt/kubernetes/server/bin/kubelet \
        --api-servers=https://${KUBERNETES_MASTER_NAME} \
        --enable-debugging-handlers=true \
        --cloud-provider=gce \
        --config=/etc/kubernetes/manifests \
        --allow-privileged=true \
        --v=2 \
        --cluster-dns=${DNS_SERVER_IP} \
        --cluster-domain=${DNS_DOMAIN} \
        --logtostderr=true \
        --container-runtime=${KUBERNETES_CONTAINER_RUNTIME} \
        --rkt-path=/opt/rkt/rkt/rkt \
        --configure-cbr0=${KUBERNETES_CONFIGURE_CBR0}
        Restart=always
        RestartSec=10

    - name: kube-proxy.service
      command: start
      content: |
        [Unit]
        Description=Start Kube-proxy service as Daemon
        Requires=kubernetes-configure-node.service
        After=kubernetes-configure-node.service
        [Service]
        EnvironmentFile=/etc/kube-env
        ExecStart=/opt/kubernetes/server/bin/kube-proxy \
        --master=https://${KUBERNETES_MASTER_NAME} \
        --kubeconfig=/var/lib/kube-proxy/kubeconfig \
        --v=2 \
        --logtostderr=true
        Restart=always
        RestartSec=10

    - name: docker.service
      command: start
      drop-ins:
        - name: 50-docker-opts.conf
          content: |
            [Service]
            Environment='DOCKER_OPTS=--bridge=cbr0 --iptables=false --ip-masq=false'
            MountFlags=slave
            LimitNOFILE=1048576
            LimitNPROC=1048576
            LimitCORE=infinity
            Restart=always
            RestartSec=2s
            StartLimitInterval=0
