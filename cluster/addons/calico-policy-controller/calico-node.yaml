kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: calico-node
  namespace: kube-system
  labels:
    kubernetes.io/cluster-service: "true"
    k8s-app: calico-node
spec:
  selector:
    matchLabels:
      kubernetes.io/cluster-service: "true"
      k8s-app: calico-node
  template:
    metadata:
      labels:
        kubernetes.io/cluster-service: "true"
        k8s-app: calico-node
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        scheduler.alpha.kubernetes.io/tolerations: |
          [{"key": "dedicated", "value": "master", "effect": "NoSchedule" },
           {"key":"CriticalAddonsOnly", "operator":"Exists"}]
    spec:
      hostNetwork: true
      containers:
        # Runs calico/node container on each Kubernetes node.  This
        # container programs network policy and routes on each
        # host.
        - name: calico-node
          image: calico/node:master
          env:
            - name: DATASTORE_TYPE
              value: "kubernetes"
            - name: FELIX_LOGSEVERITYSCREEN
              value: "debug"
            - name: CALICO_NETWORKING_BACKEND
              value: "none"
            - name: CALICO_IPV4POOL_CIDR
              value: "10.244.0.0/16"
            - name: WAIT_FOR_DATASTORE
              value: "true"
            - name: CALICO_DISABLE_FILE_LOGGING
              value: "true"
            - name: FELIX_IPV6SUPPORT
              value: "false"
            - name: NODENAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: IP
              value: ""
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
        # This container installs the Calico CNI binaries
        # and CNI network config file on each node.
        - name: install-cni
          image: calico/cni:master
          command: ["/install-cni.sh"]
          env:
            - name: CNI_NETWORK_CONFIG
              value: |-
                {
                    "name": "k8s-pod-network",
                    "type": "calico",
                    "log_level": "debug",
                    "datastore_type": "kubernetes",
                    "hostname": "__KUBERNETES_NODE_NAME__",
                    "ipam": {
                        "type": "host-local",
                        "subnet": "usePodCidr"
                    },
                    "policy": {
                        "type": "k8s",
                        "k8s_auth_token": "__SERVICEACCOUNT_TOKEN__"
                    },
                    "kubernetes": {
                        "k8s_api_root": "https://__KUBERNETES_SERVICE_HOST__:__KUBERNETES_SERVICE_PORT__",
                        "kubeconfig": "__KUBECONFIG_FILEPATH__"
                    }
                }
            - name: KUBERNETES_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-bin-dir
            - mountPath: /host/etc/cni/net.d
              name: cni-net-dir
      volumes:
        # Used to ensure proper kmods are installed.
        - name: lib-modules
          hostPath:
            path: /lib/modules
        # Used to install CNI binaries.
        - name: cni-bin-dir
          hostPath:
            path: /home/kubernetes/bin
        # Used to install CNI network config.
        - name: cni-net-dir
          hostPath:
            path: /etc/cni/net.d
