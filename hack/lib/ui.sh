#!/bin/bash

# Copyright 2015 The Kubernetes Authors All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The paths used to find and package the assets.
readonly KUBE_BUILD_ASSETS=(
  www/app
  third_party/swagger-ui
)
readonly KUBE_BUILD_TARGET="${KUBE_ROOT}/pkg/ui/datafile.go"

function kube::ui::build_ui() {
  if ! which go-bindata > /dev/null ; then
    echo "Cannot find go-bindata. Install with \"go get github.com/jteeuwen/go-bindata/...\""
    echo "Skipping ui build"
    return
  fi

  mkdir -p "${KUBE_OUTPUT}"
  local asset_paths=()
  local asset
  for asset in "${KUBE_BUILD_ASSETS[@]:+${KUBE_BUILD_ASSETS[@]}}"; do
    if [[ ! -d "${KUBE_OUTPUT}/${asset}" ]] ; then
      if [[ ! -d "${KUBE_ROOT}/${asset}" ]] ; then
        echo "Cannot find ${asset} at ${KUBE_ROOT} or ${KUBE_OUTPUT}"
        echo "Skipping ui build"
        return
      fi
      ( cd "${KUBE_ROOT}" && tar cf - "${asset}"  ) | ( cd "${KUBE_OUTPUT}" && /bin/rm -rf "${asset}" && tar xf - )
    fi
    asset_paths[${#asset_paths[@]}]="${KUBE_OUTPUT}/${asset}/..."
  done

  if [[ "${#asset_paths[@]}" -lt "1" ]]; then
    echo "No ui assets to package"
    echo "Skipping ui build"
    return
  fi

  if ! go-bindata -nocompress -o "${KUBE_BUILD_TARGET}" -prefix "${KUBE_OUTPUT}" -pkg ui "${asset_paths[@]:+${asset_paths[@]}}" >/dev/null 2>&1 ; then
    echo "Cannot package ui assets."
    exit 1
  fi

  local -r build_target=/tmp/datafile.go

  sed "s/YEAR/$(date +'%Y')/" hooks/boilerplate.go.txt > $build_target
  printf "// generated by hack/build-ui.sh; DO NOT EDIT\n" >> $build_target
  cat "${KUBE_BUILD_TARGET}" >> $build_target

  gofmt -s -w $build_target

  mv $build_target "${KUBE_BUILD_TARGET}"
}
