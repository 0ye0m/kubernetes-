- job-template:
    name: 'kubernetes-kubemark-{suffix}'
    description: '{description} Test owner: gmarek'
    logrotate:
        daysToKeep: 7
    builders:
        - shell: |
            {env}
            curl -fsS --retry 3  "https://raw.githubusercontent.com/kubernetes/kubernetes/master/hack/jenkins/e2e.sh" | bash -
    properties:
        - mail-watcher
    publishers:
        - claim-build
        - junit-publisher
        - gcs-uploader
        - log-parser
        - email-ext:
            recipients: "gmarek@google.com"
    triggers:
        - reverse:
            jobs: 'kubernetes-build'
            result: success
        - timed: '{cron-string}'
    wrappers:
        - ansicolor:
            colormap: xterm
        - timeout:
            timeout: '{timeout}'
            fail: true
        - timestamps
        - workspace-cleanup

- project:
    name: kubernetes-kubemark
    suffix:
        - 'gce':
            description: 'Continuously run Density test on Kubemark.'
            timeout: 120
            env: |
                export E2E_CLUSTER_NAME="kubernetes-kubemark"
                export E2E_NETWORK="kubernetes-kubemark"
                export PROJECT="k8s-jenkins-kubemark"
                export E2E_UP="true"
                export E2E_DOWN="true"
                export E2E_TEST="false"
                export USE_KUBEMARK="true"
                export KUBEMARK_TESTS="should\sallow\sstarting\s30\spods\sper\snode"
                # Override defaults to be indpendent from GCE defaults and set kubemark parameters
                export KUBE_GCE_INSTANCE_PREFIX="kubemark100"
                export NUM_NODES="10"
                export MASTER_SIZE="n1-standard-2"
                export NODE_SIZE="n1-standard-1"
                export E2E_ZONE="asia-east1-a"
                export KUBEMARK_MASTER_SIZE="n1-standard-4"
                export KUBEMARK_NUM_NODES="100"
            cron-string: '@hourly'
        - '500-gce':
            description: 'Run Density test on Kubemark in a large cluster that we should be able to handle.'
            timeout: 300
            env: |
                export E2E_CLUSTER_NAME="kubernetes-kubemark-500"
                export E2E_NETWORK="kubernetes-kubemark-500"
                export PROJECT="kubernetes-scale"
                export E2E_UP="true"
                export E2E_DOWN="true"
                export E2E_TEST="false"
                export USE_KUBEMARK="true"
                export KUBEMARK_TESTS="\[Feature:Performance\]"
                # Override defaults to be indpendent from GCE defaults and set kubemark parameters
                export NUM_NODES="6"
                export MASTER_SIZE="n1-standard-4"
                export NODE_SIZE="n1-standard-8"
                export KUBE_GCE_INSTANCE_PREFIX="kubemark500"
                export E2E_ZONE="us-east1-b"
                export KUBEMARK_MASTER_SIZE="n1-standard-16"
                export KUBEMARK_NUM_NODES="500"
            cron-string: '@hourly'
        - 'gce-scale':
            description: 'Run Density test on Kubemark in very large cluster. Currently only scheduled to run every 6 hours so as not to waste too many resources.'
            timeout: 480
            env: |
                export E2E_CLUSTER_NAME="kubernetes-kubemark-scale"
                export E2E_NETWORK="kubernetes-kubemark-scale"
                export PROJECT="kubernetes-scale"
                export E2E_UP="true"
                export E2E_DOWN="true"
                export E2E_TEST="false"
                export USE_KUBEMARK="true"
                export KUBEMARK_TESTS="should\sallow\sstarting\s30\spods\sper\snode"
                # Override defaults to be indpendent from GCE defaults and set kubemark parameters
                # We need 11 so that we won't hit max-pods limit (set to 100). TODO: do it in a nicer way.
                export NUM_NODES="11"
                export MASTER_SIZE="n1-standard-4"
                export NODE_SIZE="n1-standard-8"   # Note: can fit about 17 hollow nodes per core
                #                                     so NUM_NODES x cores_per_node should
                #                                     be set accordingly.
                export KUBE_GCE_INSTANCE_PREFIX="kubemark1000"
                export E2E_ZONE="us-east1-b"
                export KUBEMARK_MASTER_SIZE="n1-standard-16"
                export KUBEMARK_NUM_NODES="1000"
            cron-string: 'H H/8 * * *'
    jobs:
        - 'kubernetes-kubemark-{suffix}'
