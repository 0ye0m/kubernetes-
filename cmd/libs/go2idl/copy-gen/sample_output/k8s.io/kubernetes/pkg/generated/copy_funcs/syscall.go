/*
Copyright 2015 The Kubernetes Authors All rights reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by the command:
// $ ./copy-gen -o sample_output
// Do not edit it manually!

package copy_funcs

import (
	syscall "syscall"
)

func copy_SyscallCredential(in, out *syscall.Credential) error {
	*out = *in
	{
		in, out := &(*in).Groups, &(*out).Groups
		*out = make([]uint32, len(*in))
		copy(*out, *in)
	}

}

func copy_SyscallEpollEvent(in, out *syscall.EpollEvent) error {
	*out = *in

}

func copy_SyscallIfAddrmsg(in, out *syscall.IfAddrmsg) error {
	*out = *in

}

func copy_SyscallIfInfomsg(in, out *syscall.IfInfomsg) error {
	*out = *in

}

func copy_SyscallIovec(in, out *syscall.Iovec) error {
	*out = *in
	{
		in, out := &(*in).Base, &(*out).Base
		*out = new(byte)
		{
			in, out := *in, *out
			*in = *out
		}
	}

}

func copy_SyscallLinger(in, out *syscall.Linger) error {
	*out = *in

}

func copy_SyscallNetlinkMessage(in, out *syscall.NetlinkMessage) error {
	*out = *in
	{
		in, out := &(*in).Header, &(*out).Header
		*out = *in
	}
	{
		in, out := &(*in).Data, &(*out).Data
		*out = make([]byte, len(*in))
		copy(*out, *in)
	}

}

func copy_SyscallNetlinkRouteAttr(in, out *syscall.NetlinkRouteAttr) error {
	*out = *in
	{
		in, out := &(*in).Attr, &(*out).Attr
		*out = *in
	}
	{
		in, out := &(*in).Value, &(*out).Value
		*out = make([]byte, len(*in))
		copy(*out, *in)
	}

}

func copy_SyscallNetlinkRouteRequest(in, out *syscall.NetlinkRouteRequest) error {
	*out = *in
	{
		in, out := &(*in).Header, &(*out).Header
		*out = *in
	}
	{
		in, out := &(*in).Data, &(*out).Data
		*out = *in
	}

}

func copy_SyscallNlAttr(in, out *syscall.NlAttr) error {
	*out = *in

}

func copy_SyscallNlMsgerr(in, out *syscall.NlMsgerr) error {
	*out = *in
	{
		in, out := &(*in).Msg, &(*out).Msg
		*out = *in
	}

}

func copy_SyscallNlMsghdr(in, out *syscall.NlMsghdr) error {
	*out = *in

}

func copy_SyscallPtraceRegs(in, out *syscall.PtraceRegs) error {
	*out = *in

}

func copy_SyscallRawSockaddrNetlink(in, out *syscall.RawSockaddrNetlink) error {
	*out = *in

}

func copy_SyscallRlimit(in, out *syscall.Rlimit) error {
	*out = *in

}

func copy_SyscallRtAttr(in, out *syscall.RtAttr) error {
	*out = *in

}

func copy_SyscallRtGenmsg(in, out *syscall.RtGenmsg) error {
	*out = *in

}

func copy_SyscallRtMsg(in, out *syscall.RtMsg) error {
	*out = *in

}

func copy_SyscallRtNexthop(in, out *syscall.RtNexthop) error {
	*out = *in

}

func copy_SyscallRusage(in, out *syscall.Rusage) error {
	*out = *in
	{
		in, out := &(*in).Utime, &(*out).Utime
		*out = *in
	}
	{
		in, out := &(*in).Stime, &(*out).Stime
		*out = *in
	}

}

func copy_SyscallSockFilter(in, out *syscall.SockFilter) error {
	*out = *in

}

func copy_SyscallSysProcIDMap(in, out *syscall.SysProcIDMap) error {
	*out = *in

}

func copy_SyscallTimespec(in, out *syscall.Timespec) error {
	*out = *in

}

func copy_SyscallTimeval(in, out *syscall.Timeval) error {
	*out = *in

}

func copy_SyscallTms(in, out *syscall.Tms) error {
	*out = *in

}

func copy_SyscallUcred(in, out *syscall.Ucred) error {
	*out = *in

}

func copy_SyscallUtimbuf(in, out *syscall.Utimbuf) error {
	*out = *in

}
