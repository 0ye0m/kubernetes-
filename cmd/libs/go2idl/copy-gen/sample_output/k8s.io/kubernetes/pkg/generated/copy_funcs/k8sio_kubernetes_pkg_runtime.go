/*
Copyright 2015 The Kubernetes Authors All rights reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by the command:
// $ ./copy-gen -o sample_output
// Do not edit it manually!

package copy_funcs

import (
	runtime "k8s.io/kubernetes/pkg/runtime"
)

func copy_KubernetesPkgRuntimeKubeTypes(in, out *runtime.KubeTypes) error {
	*out = make(runtime.KubeTypes, len(*in))
	for i := range *in {
		{
			in, out := &(*in[i]), &(*out[i])
			*out = *in
		}
	}

}

func copy_KubernetesPkgRuntimePair(in, out *runtime.Pair) error {
	*out = *in

}

func copy_KubernetesPkgRuntimePluginBase(in, out *runtime.PluginBase) error {
	*out = *in

}

func copy_KubernetesPkgRuntimeRawExtension(in, out *runtime.RawExtension) error {
	*out = *in
	{
		in, out := &(*in).RawJSON, &(*out).RawJSON
		*out = make([]byte, len(*in))
		copy(*out, *in)
	}

}

func copy_KubernetesPkgRuntimeTypeMeta(in, out *runtime.TypeMeta) error {
	*out = *in

}

func copy_KubernetesPkgRuntimeUnknown(in, out *runtime.Unknown) error {
	*out = *in
	{
		in, out := &(*in).TypeMeta, &(*out).TypeMeta
		*out = *in
	}
	{
		in, out := &(*in).RawJSON, &(*out).RawJSON
		*out = make([]byte, len(*in))
		copy(*out, *in)
	}

}
