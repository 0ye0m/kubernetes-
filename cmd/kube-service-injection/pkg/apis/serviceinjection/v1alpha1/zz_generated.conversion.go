// +build !ignore_autogenerated

/*
Copyright 2017 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by conversion-gen. Do not edit it manually!

package v1alpha1

import (
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	serviceinjection "k8s.io/kubernetes/cmd/kube-service-injection/pkg/apis/serviceinjection"
	unsafe "unsafe"
)

func init() {
	SchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(scheme *runtime.Scheme) error {
	return scheme.AddGeneratedConversionFuncs(
		Convert_v1alpha1_ServiceInjection_To_serviceinjection_ServiceInjection,
		Convert_serviceinjection_ServiceInjection_To_v1alpha1_ServiceInjection,
		Convert_v1alpha1_ServiceInjectionList_To_serviceinjection_ServiceInjectionList,
		Convert_serviceinjection_ServiceInjectionList_To_v1alpha1_ServiceInjectionList,
		Convert_v1alpha1_ServiceInjectionSpec_To_serviceinjection_ServiceInjectionSpec,
		Convert_serviceinjection_ServiceInjectionSpec_To_v1alpha1_ServiceInjectionSpec,
		Convert_v1alpha1_ServiceInjectionStatus_To_serviceinjection_ServiceInjectionStatus,
		Convert_serviceinjection_ServiceInjectionStatus_To_v1alpha1_ServiceInjectionStatus,
	)
}

func autoConvert_v1alpha1_ServiceInjection_To_serviceinjection_ServiceInjection(in *ServiceInjection, out *serviceinjection.ServiceInjection, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_ServiceInjectionSpec_To_serviceinjection_ServiceInjectionSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_ServiceInjectionStatus_To_serviceinjection_ServiceInjectionStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

func Convert_v1alpha1_ServiceInjection_To_serviceinjection_ServiceInjection(in *ServiceInjection, out *serviceinjection.ServiceInjection, s conversion.Scope) error {
	return autoConvert_v1alpha1_ServiceInjection_To_serviceinjection_ServiceInjection(in, out, s)
}

func autoConvert_serviceinjection_ServiceInjection_To_v1alpha1_ServiceInjection(in *serviceinjection.ServiceInjection, out *ServiceInjection, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_serviceinjection_ServiceInjectionSpec_To_v1alpha1_ServiceInjectionSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_serviceinjection_ServiceInjectionStatus_To_v1alpha1_ServiceInjectionStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

func Convert_serviceinjection_ServiceInjection_To_v1alpha1_ServiceInjection(in *serviceinjection.ServiceInjection, out *ServiceInjection, s conversion.Scope) error {
	return autoConvert_serviceinjection_ServiceInjection_To_v1alpha1_ServiceInjection(in, out, s)
}

func autoConvert_v1alpha1_ServiceInjectionList_To_serviceinjection_ServiceInjectionList(in *ServiceInjectionList, out *serviceinjection.ServiceInjectionList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]serviceinjection.ServiceInjection)(unsafe.Pointer(&in.Items))
	return nil
}

func Convert_v1alpha1_ServiceInjectionList_To_serviceinjection_ServiceInjectionList(in *ServiceInjectionList, out *serviceinjection.ServiceInjectionList, s conversion.Scope) error {
	return autoConvert_v1alpha1_ServiceInjectionList_To_serviceinjection_ServiceInjectionList(in, out, s)
}

func autoConvert_serviceinjection_ServiceInjectionList_To_v1alpha1_ServiceInjectionList(in *serviceinjection.ServiceInjectionList, out *ServiceInjectionList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]ServiceInjection)(unsafe.Pointer(&in.Items))
	return nil
}

func Convert_serviceinjection_ServiceInjectionList_To_v1alpha1_ServiceInjectionList(in *serviceinjection.ServiceInjectionList, out *ServiceInjectionList, s conversion.Scope) error {
	return autoConvert_serviceinjection_ServiceInjectionList_To_v1alpha1_ServiceInjectionList(in, out, s)
}

func autoConvert_v1alpha1_ServiceInjectionSpec_To_serviceinjection_ServiceInjectionSpec(in *ServiceInjectionSpec, out *serviceinjection.ServiceInjectionSpec, s conversion.Scope) error {
	return nil
}

func Convert_v1alpha1_ServiceInjectionSpec_To_serviceinjection_ServiceInjectionSpec(in *ServiceInjectionSpec, out *serviceinjection.ServiceInjectionSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_ServiceInjectionSpec_To_serviceinjection_ServiceInjectionSpec(in, out, s)
}

func autoConvert_serviceinjection_ServiceInjectionSpec_To_v1alpha1_ServiceInjectionSpec(in *serviceinjection.ServiceInjectionSpec, out *ServiceInjectionSpec, s conversion.Scope) error {
	return nil
}

func Convert_serviceinjection_ServiceInjectionSpec_To_v1alpha1_ServiceInjectionSpec(in *serviceinjection.ServiceInjectionSpec, out *ServiceInjectionSpec, s conversion.Scope) error {
	return autoConvert_serviceinjection_ServiceInjectionSpec_To_v1alpha1_ServiceInjectionSpec(in, out, s)
}

func autoConvert_v1alpha1_ServiceInjectionStatus_To_serviceinjection_ServiceInjectionStatus(in *ServiceInjectionStatus, out *serviceinjection.ServiceInjectionStatus, s conversion.Scope) error {
	return nil
}

func Convert_v1alpha1_ServiceInjectionStatus_To_serviceinjection_ServiceInjectionStatus(in *ServiceInjectionStatus, out *serviceinjection.ServiceInjectionStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_ServiceInjectionStatus_To_serviceinjection_ServiceInjectionStatus(in, out, s)
}

func autoConvert_serviceinjection_ServiceInjectionStatus_To_v1alpha1_ServiceInjectionStatus(in *serviceinjection.ServiceInjectionStatus, out *ServiceInjectionStatus, s conversion.Scope) error {
	return nil
}

func Convert_serviceinjection_ServiceInjectionStatus_To_v1alpha1_ServiceInjectionStatus(in *serviceinjection.ServiceInjectionStatus, out *ServiceInjectionStatus, s conversion.Scope) error {
	return autoConvert_serviceinjection_ServiceInjectionStatus_To_v1alpha1_ServiceInjectionStatus(in, out, s)
}
