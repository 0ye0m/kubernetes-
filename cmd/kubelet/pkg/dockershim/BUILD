load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "convert.go",
        "doc.go",
        "docker_checkpoint.go",
        "docker_container.go",
        "docker_container_unsupported.go",
        "docker_container_windows.go",
        "docker_image.go",
        "docker_image_linux.go",
        "docker_image_unsupported.go",
        "docker_image_windows.go",
        "docker_legacy_service.go",
        "docker_logs.go",
        "docker_sandbox.go",
        "docker_service.go",
        "docker_stats_linux.go",
        "docker_stats_unsupported.go",
        "docker_stats_windows.go",
        "docker_streaming.go",
        "exec.go",
        "helpers.go",
        "helpers_linux.go",
        "helpers_unsupported.go",
        "helpers_windows.go",
        "naming.go",
        "security_context.go",
        "selinux_util.go",
    ],
    importpath = "k8s.io/kubernetes/cmd/kubelet/pkg/dockershim",
    visibility = ["//visibility:public"],
    deps = [
        "//cmd/kubelet/pkg/apis/config:go_default_library",
        "//cmd/kubelet/pkg/checkpointmanager:go_default_library",
        "//cmd/kubelet/pkg/checkpointmanager/checksum:go_default_library",
        "//cmd/kubelet/pkg/checkpointmanager/errors:go_default_library",
        "//cmd/kubelet/pkg/container:go_default_library",
        "//cmd/kubelet/pkg/dockershim/cm:go_default_library",
        "//cmd/kubelet/pkg/dockershim/libdocker:go_default_library",
        "//cmd/kubelet/pkg/dockershim/metrics:go_default_library",
        "//cmd/kubelet/pkg/dockershim/network:go_default_library",
        "//cmd/kubelet/pkg/dockershim/network/cni:go_default_library",
        "//cmd/kubelet/pkg/dockershim/network/hostport:go_default_library",
        "//cmd/kubelet/pkg/dockershim/network/kubenet:go_default_library",
        "//cmd/kubelet/pkg/kuberuntime:go_default_library",
        "//cmd/kubelet/pkg/leaky:go_default_library",
        "//cmd/kubelet/pkg/qos:go_default_library",
        "//cmd/kubelet/pkg/server/streaming:go_default_library",
        "//cmd/kubelet/pkg/types:go_default_library",
        "//cmd/kubelet/pkg/util/cache:go_default_library",
        "//cmd/kubelet/pkg/util/ioutils:go_default_library",
        "//pkg/credentialprovider:go_default_library",
        "//pkg/security/apparmor:go_default_library",
        "//pkg/util/parsers:go_default_library",
        "//staging/src/k8s.io/api/core/v1:go_default_library",
        "//staging/src/k8s.io/apimachinery/pkg/apis/meta/v1:go_default_library",
        "//staging/src/k8s.io/apimachinery/pkg/types:go_default_library",
        "//staging/src/k8s.io/apimachinery/pkg/util/errors:go_default_library",
        "//staging/src/k8s.io/client-go/tools/remotecommand:go_default_library",
        "//staging/src/k8s.io/cri-api/pkg/apis/runtime/v1alpha2:go_default_library",
        "//vendor/github.com/armon/circbuf:go_default_library",
        "//vendor/github.com/blang/semver:go_default_library",
        "//vendor/github.com/docker/docker/api/types:go_default_library",
        "//vendor/github.com/docker/docker/api/types/container:go_default_library",
        "//vendor/github.com/docker/docker/api/types/filters:go_default_library",
        "//vendor/github.com/docker/docker/api/types/strslice:go_default_library",
        "//vendor/github.com/docker/docker/pkg/jsonmessage:go_default_library",
        "//vendor/github.com/docker/go-connections/nat:go_default_library",
        "//vendor/k8s.io/klog:go_default_library",
        "//vendor/k8s.io/utils/exec:go_default_library",
    ] + select({
        "@io_bazel_rules_go//go/platform:windows": [
            "//cmd/kubelet/pkg/apis:go_default_library",
            "//cmd/kubelet/pkg/winstats:go_default_library",
            "//vendor/golang.org/x/sys/windows/registry:go_default_library",
        ],
        "//conditions:default": [],
    }),
)

go_test(
    name = "go_default_test",
    srcs = [
        "convert_test.go",
        "docker_checkpoint_test.go",
        "docker_container_test.go",
        "docker_container_windows_test.go",
        "docker_image_test.go",
        "docker_sandbox_test.go",
        "docker_service_test.go",
        "helpers_linux_test.go",
        "helpers_test.go",
        "naming_test.go",
        "security_context_test.go",
        "selinux_util_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "//cmd/kubelet/pkg/checkpointmanager:go_default_library",
        "//cmd/kubelet/pkg/container:go_default_library",
        "//cmd/kubelet/pkg/container/testing:go_default_library",
        "//cmd/kubelet/pkg/dockershim/libdocker:go_default_library",
        "//cmd/kubelet/pkg/dockershim/network:go_default_library",
        "//cmd/kubelet/pkg/dockershim/network/testing:go_default_library",
        "//cmd/kubelet/pkg/types:go_default_library",
        "//cmd/kubelet/pkg/util/cache:go_default_library",
        "//pkg/security/apparmor:go_default_library",
        "//staging/src/k8s.io/apimachinery/pkg/util/clock:go_default_library",
        "//staging/src/k8s.io/cri-api/pkg/apis/runtime/v1alpha2:go_default_library",
        "//vendor/github.com/blang/semver:go_default_library",
        "//vendor/github.com/docker/docker/api/types:go_default_library",
        "//vendor/github.com/docker/docker/api/types/container:go_default_library",
        "//vendor/github.com/docker/docker/pkg/jsonmessage:go_default_library",
        "//vendor/github.com/docker/go-connections/nat:go_default_library",
        "//vendor/github.com/golang/mock/gomock:go_default_library",
        "//vendor/github.com/stretchr/testify/assert:go_default_library",
        "//vendor/github.com/stretchr/testify/require:go_default_library",
    ] + select({
        "@io_bazel_rules_go//go/platform:linux": [
            "//staging/src/k8s.io/api/core/v1:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:windows": [
            "//vendor/golang.org/x/sys/windows/registry:go_default_library",
        ],
        "//conditions:default": [],
    }),
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [
        ":package-srcs",
        "//cmd/kubelet/pkg/dockershim/cm:all-srcs",
        "//cmd/kubelet/pkg/dockershim/libdocker:all-srcs",
        "//cmd/kubelet/pkg/dockershim/metrics:all-srcs",
        "//cmd/kubelet/pkg/dockershim/network:all-srcs",
        "//cmd/kubelet/pkg/dockershim/remote:all-srcs",
    ],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
